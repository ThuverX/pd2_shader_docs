"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[66835],{603905:(e,t,r)=>{r.d(t,{Zo:()=>_,kt:()=>s});var n=r(667294);function m(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){m(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,m=function(e,t){if(null==e)return{};var r,n,m={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(m[r]=e[r]);return m}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(m[r]=e[r])}return m}var d=n.createContext({}),l=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},_=function(e){var t=l(e.components);return n.createElement(d.Provider,{value:t},e.children)},i="mdxType",x={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,m=e.mdxType,o=e.originalType,d=e.parentName,_=a(e,["components","mdxType","originalType","parentName"]),i=l(r),c=m,s=i["".concat(d,".").concat(c)]||i[c]||x[c]||o;return r?n.createElement(s,p(p({ref:t},_),{},{components:r})):n.createElement(s,p({ref:t},_))}));function s(e,t){var r=arguments,m=t&&t.mdxType;if("string"==typeof e||m){var o=r.length,p=new Array(o);p[0]=c;var a={};for(var d in t)hasOwnProperty.call(t,d)&&(a[d]=t[d]);a.originalType=e,a[i]="string"==typeof e?e:m,p[1]=a;for(var l=2;l<o;l++)p[l]=r[l];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},327290:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>x,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var n=r(487462),m=(r(667294),r(603905));const o={id:0x8d5b5ffb8d06d000,title:"Effect Default Blend Add Diffuse0 Texture Fps Holo View Angle Falloff Op"},p="Effect Default Blend Add Diffuse0 Texture Fps Holo View Angle Falloff Op",a={unversionedId:"Generated/Shaders/Base/[2600-2700]/10185840516235973000",id:"Generated/Shaders/Base/[2600-2700]/10185840516235973000",title:"Effect Default Blend Add Diffuse0 Texture Fps Holo View Angle Falloff Op",description:"(effectBLENDADDFPSVIEWANGLEFALLOFF_OP, 0x8d5b5ffb8d06d249)",source:"@site/docs/Generated/Shaders/Base/[2600-2700]/0x8d5b5ffb8d06d249.mdx",sourceDirName:"Generated/Shaders/Base/[2600-2700]",slug:"/Generated/Shaders/Base/[2600-2700]/10185840516235973000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[2600-2700]/10185840516235973000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/Generated/Shaders/Base/[2600-2700]/0x8d5b5ffb8d06d249.mdx",tags:[],version:"current",frontMatter:{id:"10185840516235973000",title:"Effect Default Blend Add Diffuse0 Texture Fps Holo View Angle Falloff Op"},sidebar:"docsSidebar",previous:{title:"Generic Shadow Caster Ati Depth Scaling Diffuse Texture Skinned 3weights",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[2600-2700]/10181836552081672000"},next:{title:"Generic Shadow Caster Diffuse Texture Double Sided Nvidia Vegetation Bending",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[2600-2700]/10186421735808324000"}},d={},l=[{value:"Technique <code>transparent_fps</code>",id:"technique-transparent_fps",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],_={toc:l},i="wrapper";function x(e){let{components:t,...r}=e;return(0,m.kt)(i,(0,n.Z)({},_,r,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("h1",{id:"effect-default-blend-add-diffuse0-texture-fps-holo-view-angle-falloff-op"},"Effect Default Blend Add Diffuse0 Texture Fps Holo View Angle Falloff Op"),(0,m.kt)("p",null,"(",(0,m.kt)("inlineCode",{parentName:"p"},"effect:default:BLEND_ADD:DIFFUSE0_TEXTURE:FPS:HOLO:VIEW_ANGLE_FALLOFF_OP"),", ",(0,m.kt)("inlineCode",{parentName:"p"},"0x8d5b5ffb8d06d249"),")"),(0,m.kt)("p",null,"This template is referenced 1 time by ",(0,m.kt)("a",{parentName:"p",href:"/docs/Generated/Render%20Templates/base.render_template_database#effect-blend-add-diffuse0-texture-fps-holo-view-angle-falloff-op"},"effect:BLEND_ADD:DIFFUSE0_TEXTURE:FPS:HOLO:VIEW_ANGLE_FALLOFF_OP"),".\nThis template uses the following inputs:\n|Name|UI Name|Type|\n|---|---|---|\n|diffuse_texture|Diffuse0 Texture|texture|\n|holo_target_offset|Target offset from center|vector3|\n|holo_reticle_scale|Reticle scale (min, max, distance)|vector3|\n|falloff_exp|Opacity View Angle Falloff|scalar|\n|intensity|Intensity|scalar|."),(0,m.kt)("h3",{id:"technique-transparent_fps"},"Technique ",(0,m.kt)("inlineCode",{parentName:"h3"},"transparent_fps")),(0,m.kt)("h3",{id:"render-states"},"Render States"),(0,m.kt)("p",null,"More info can be found on the ",(0,m.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 0,\n    D3DRS_ALPHABLENDENABLE = 1,\n    D3DRS_CULLMODE = 2,\n    D3DRS_COLORWRITEENABLE = 7,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n    D3DRS_BLENDOP = 1,\n    D3DRS_DESTBLEND = 2,\n    D3DRS_SRCBLEND = 5,\n};\n")),(0,m.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,m.kt)("p",null,"More info can be found on the ",(0,m.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,m.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 2,\n    D3DSAMP_MINFILTER = 2,\n    D3DSAMP_MIPFILTER = 2,\n};\n")),(0,m.kt)("h3",{id:"shaders"},"Shaders"),(0,m.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x4 camera_world_matrix : register(vs_3_0, c12);\ncolumn_major float4x4 proj_matrix : register(vs_3_0, c8);\nfloat3 ref_holo_reticle_scale : register(vs_3_0, c16);\nfloat3 ref_holo_target_offset : register(vs_3_0, c15);\ncolumn_major float4x4 view_matrix : register(vs_3_0, c4);\ncolumn_major float4x4 world_matrix : register(vs_3_0, c0);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 normal : NORMAL;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float3 texcoord3 : TEXCOORD3;\n    float3 texcoord4 : TEXCOORD4;\n    float2 texcoord : TEXCOORD;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float4 temp0, temp1;\n    float3 temp2, temp3, temp4, temp5;\n    // def c17, 2, -1, 0.001, 1\n    // def c18, 0.5, 0, 0, 0\n    // dcl_position v0\n    // dcl_normal v1\n    // dcl_position o0\n    // dcl_texcoord3 o1.xyz\n    // dcl_texcoord4 o2.xyz\n    // dcl_texcoord o3.xy\n    // mad r0.xyz, v1, c17.x, c17.y\n    temp0.xyz = i.normal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o1.x, r0, c0\n    o.texcoord3.x = dot(temp0.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o1.y, r0, c1\n    o.texcoord3.y = dot(temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o1.z, r0, c2\n    o.texcoord3.z = dot(temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // dp4 r0.w, v0, c3\n    temp0.w = dot(i.position, (world_matrix._m03_m13_m23_m33));\n    // dp4 r0.x, v0, c0\n    temp0.x = dot(i.position, (world_matrix._m00_m10_m20_m30));\n    // dp4 r0.y, v0, c1\n    temp0.y = dot(i.position, (world_matrix._m01_m11_m21_m31));\n    // dp4 r0.z, v0, c2\n    temp0.z = dot(i.position, (world_matrix._m02_m12_m22_m32));\n    // dp4 r1.x, r0, c4\n    temp1.x = dot(temp0, (view_matrix._m00_m10_m20_m30));\n    // dp4 r1.y, r0, c5\n    temp1.y = dot(temp0, (view_matrix._m01_m11_m21_m31));\n    // dp4 r1.z, r0, c6\n    temp1.z = dot(temp0, (view_matrix._m02_m12_m22_m32));\n    // dp4 r1.w, r0, c7\n    temp1.w = dot(temp0, (view_matrix._m03_m13_m23_m33));\n    // dp4 o0.x, r1, c8\n    o.position.x = dot(temp1, (proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, r1, c9\n    o.position.y = dot(temp1, (proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.z, r1, c10\n    o.position.z = dot(temp1, (proj_matrix._m02_m12_m22_m32));\n    // dp4 o0.w, r1, c11\n    o.position.w = dot(temp1, (proj_matrix._m03_m13_m23_m33));\n    // mov r1.x, c12.w\n    temp1.x = (camera_world_matrix._m00_m10_m20_m30).w;\n    // mov r1.y, c13.w\n    temp1.y = (camera_world_matrix._m01_m11_m21_m31).w;\n    // mov r1.z, c14.w\n    temp1.z = (camera_world_matrix._m02_m12_m22_m32).w;\n    // add r0.xyz, -r0, r1\n    temp0.xyz = -temp0.xyz + temp1.xyz;\n    // dp3 r0.w, r0, r0\n    temp0.w = dot(temp0.xyz, temp0.xyz);\n    // rsq r0.w, r0.w\n    temp0.w = 1 / sqrt(temp0.w);\n    // mul o2.xyz, r0.w, r0\n    o.texcoord4 = temp0.w * temp0;\n    // mov r0.x, c0.y\n    temp0.x = (world_matrix._m00_m10_m20_m30).y;\n    // mov r0.y, c1.y\n    temp0.y = (world_matrix._m01_m11_m21_m31).y;\n    // mov r0.z, c2.y\n    temp0.z = (world_matrix._m02_m12_m22_m32).y;\n    // mov r2.y, c1.z\n    temp2.y = (world_matrix._m01_m11_m21_m31).z;\n    // mov r2.z, c2.z\n    temp2.z = (world_matrix._m02_m12_m22_m32).z;\n    // mov r2.x, c0.z\n    temp2.x = (world_matrix._m00_m10_m20_m30).z;\n    // mul r3.xyz, -r0.yzxw, r2.zxyw\n    temp3.xyz = -temp0.yzx * temp2.zxy;\n    // mad r3.xyz, r2.yzxw, -r0.zxyw, -r3\n    temp3.xyz = temp2.yzx * -temp0.zxy + -temp3.xyz;\n    // mul r4.xyz, r3, c15.x\n    temp4.xyz = temp3.xyz * ref_holo_target_offset.xxx;\n    // mad r0.xyz, r0, c15.y, r4\n    temp0.xyz = temp0.xyz * ref_holo_target_offset.yyy + temp4.xyz;\n    // mad r0.xyz, r2, c15.z, r0\n    temp0.xyz = temp2.xyz * ref_holo_target_offset.zzz + temp0.xyz;\n    // mov r4.x, c0.w\n    temp4.x = (world_matrix._m00_m10_m20_m30).w;\n    // mov r4.y, c1.w\n    temp4.y = (world_matrix._m01_m11_m21_m31).w;\n    // mov r4.z, c2.w\n    temp4.z = (world_matrix._m02_m12_m22_m32).w;\n    // add r5.xyz, r0, r4\n    temp5.xyz = temp0.xyz + temp4.xyz;\n    // add r4.xyz, -r1, r4\n    temp4.xyz = -temp1.xyz + temp4.xyz;\n    // add r1.xyz, r1, -r5\n    temp1.xyz = temp1.xyz + -temp5.xyz;\n    // nrm r5.xyz, r1\n    temp5.xyz = normalize(temp1.xyz).xyz;\n    // dp3 r0.w, r4, r4\n    temp0.w = dot(temp4.xyz, temp4.xyz);\n    // rsq r0.w, r0.w\n    temp0.w = 1 / sqrt(temp0.w);\n    // rcp r0.w, r0.w\n    temp0.w = 1.0f / temp0.w;\n    // dp3 r1.x, r5, -r0\n    temp1.x = dot(temp5.xyz, -temp0.xyz);\n    // mad r0.xyz, r5, r1.x, r0\n    temp0.xyz = temp5.xyz * temp1.xxx + temp0.xyz;\n    // dp3 r1.y, r2, r0\n    temp1.y = dot(temp2.xyz, temp0.xyz);\n    // dp3 r1.x, r3, r0\n    temp1.x = dot(temp3.xyz, temp0.xyz);\n    // add r0.xy, -r1, v0.xzzw\n    temp0.xy = -temp1.xy + i.position.xz;\n    // mov r0.z, c17.z\n    temp0.z = float1(0.001);\n    // add r0.z, r0.z, c16.z\n    temp0.z = temp0.z + ref_holo_reticle_scale.z;\n    // rcp r0.z, r0.z\n    temp0.z = 1.0f / temp0.z;\n    // mul r0.z, r0.z, r0.w\n    temp0.z = temp0.z * temp0.w;\n    // lrp r1.x, r0.z, c16.y, c16.x\n    temp1.x = lerp(ref_holo_reticle_scale.x, ref_holo_reticle_scale.y, temp0.z);\n    // rcp r0.z, r1.x\n    temp0.z = 1.0f / temp1.x;\n    // add r0.z, r0.z, r0.z\n    temp0.z = temp0.z + temp0.z;\n    // mul r0.xy, r0.z, r0\n    temp0.xy = temp0.zz * temp0.xy;\n    // mov r0.z, -r0.y\n    temp0.z = -temp0.y;\n    // add r0.xy, r0.xzzw, c17.w\n    temp0.xy = temp0.xz + float2(1, 1);\n    // mul o3.xy, r0, c18.x\n    o.texcoord = temp0 * float4(0.5, 0.5, 0.5, 0.5);\n    // \n\n    return o;\n}\n")),(0,m.kt)("p",null,"Decompiled by DXDecompiler."),(0,m.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-hlsl"},"sampler2D diffuse_texture : register(ps_3_0, s0);\nfloat ref_falloff_exp : register(ps_3_0, c0);\nfloat ref_intensity : register(ps_3_0, c1);\nstruct PixelMain_Input\n{\n    float3 texcoord3 : TEXCOORD3;\n    float3 texcoord4 : TEXCOORD4;\n    float2 texcoord : TEXCOORD;\n};\n\nfloat4 PixelMain(PixelMain_Input i) : COLOR\n{\n    float4 out_color;\n    float3 temp0;\n    float4 temp1;\n    // def c2, -0.0001, -13.287712, 0, 0\n    // dcl_texcoord3 v0.xyz\n    // dcl_texcoord4 v1.xyz\n    // dcl_texcoord v2.xy\n    // dcl_2d s0\n    // nrm_pp r0.xyz, v0\n    temp0.xyz = /* not implemented _pp modifier */ normalize(i.texcoord3.xyz).xyz;\n    // nrm_pp r1.xyz, v1\n    temp1.xyz = /* not implemented _pp modifier */ normalize(i.texcoord4.xyz).xyz;\n    // dp3_pp r0.x, r0, r1\n    temp0.x = /* not implemented _pp modifier */ dot(temp0.xyz, temp1.xyz);\n    // add r0.y, r0_abs.x, c2.x\n    temp0.y = abs(temp0).x + float1(-0.0001);\n    // log r0.x, r0_abs.x\n    temp0.x = log2(abs(temp0).x);\n    // cmp r0.x, r0.y, r0.x, c2.y\n    temp0.x = (temp0.y >= 0) ? temp0.x : float1(-13.287712);\n    // mul r0.x, r0.x, c0.x\n    temp0.x = temp0.x * ref_falloff_exp.x;\n    // exp_pp r0.x, r0.x\n    temp0.x = /* not implemented _pp modifier */ exp2(temp0.x);\n    // texld_pp r1, v2, s0\n    temp1 = /* not implemented _pp modifier */ tex2D(diffuse_texture, i.texcoord.xy);\n    // mul_pp oC0.w, r0.x, r1.w\n    out_color.w = /* not implemented _pp modifier */ temp0.x * temp1.w;\n    // mul oC0.xyz, r1, c1.x\n    out_color.xyz = temp1.xyz * ref_intensity.xxx;\n    // \n\n    return out_color;\n}\n")),(0,m.kt)("p",null,"Decompiled by DXDecompiler."))}x.isMDXComponent=!0}}]);