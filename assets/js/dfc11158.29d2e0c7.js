"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[35940],{3905:(e,t,r)=>{r.d(t,{Zo:()=>i,kt:()=>s});var n=r(67294);function p(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function m(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?m(Object(r),!0).forEach((function(t){p(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):m(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,p=function(e,t){if(null==e)return{};var r,n,p={},m=Object.keys(e);for(n=0;n<m.length;n++)r=m[n],t.indexOf(r)>=0||(p[r]=e[r]);return p}(e,t);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(e);for(n=0;n<m.length;n++)r=m[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(p[r]=e[r])}return p}var l=n.createContext({}),d=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},i=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},_="mdxType",x={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},D=n.forwardRef((function(e,t){var r=e.components,p=e.mdxType,m=e.originalType,l=e.parentName,i=o(e,["components","mdxType","originalType","parentName"]),_=d(r),D=p,s=_["".concat(l,".").concat(D)]||_[D]||x[D]||m;return r?n.createElement(s,a(a({ref:t},i),{},{components:r})):n.createElement(s,a({ref:t},i))}));function s(e,t){var r=arguments,p=t&&t.mdxType;if("string"==typeof e||p){var m=r.length,a=new Array(m);a[0]=D;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[_]="string"==typeof e?e:p,a[1]=o;for(var d=2;d<m;d++)a[d]=r[d];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}D.displayName="MDXCreateElement"},57460:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>x,frontMatter:()=>m,metadata:()=>o,toc:()=>d});var n=r(87462),p=(r(67294),r(3905));const m={id:0xf9e4d36e1d877800,title:"Generic Default Detail Diffuse Texture Blue Detail Diffuse Texture Green Detail Normal Texture Blue Detail Normal Texture Green Detail Normal Texture Red Detail Rgb Mask Diffuse Texture Gsma Texture Normalmap"},a="Generic Default Detail Diffuse Texture Blue Detail Diffuse Texture Green Detail Normal Texture Blue Detail Normal Texture Green Detail Normal Texture Red Detail Rgb Mask Diffuse Texture Gsma Texture Normalmap",o={unversionedId:"Generated/Shaders/Base/[4600-4700]/18006749680029366000",id:"Generated/Shaders/Base/[4600-4700]/18006749680029366000",title:"Generic Default Detail Diffuse Texture Blue Detail Diffuse Texture Green Detail Normal Texture Blue Detail Normal Texture Green Detail Normal Texture Red Detail Rgb Mask Diffuse Texture Gsma Texture Normalmap",description:"(genericDETAILDIFFUSETEXTUREBLUEDETAILNORMALTEXTUREBLUEDETAILNORMALTEXTUREREDDIFFUSETEXTURENORMALMAP, 0xf9e4d36e1d877b01)",source:"@site/docs/Generated/Shaders/Base/[4600-4700]/0xf9e4d36e1d877b01.mdx",sourceDirName:"Generated/Shaders/Base/[4600-4700]",slug:"/Generated/Shaders/Base/[4600-4700]/18006749680029366000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[4600-4700]/18006749680029366000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/docs/Generated/Shaders/Base/[4600-4700]/0xf9e4d36e1d877b01.mdx",tags:[],version:"current",frontMatter:{id:"18006749680029366000",title:"Generic Default Detail Diffuse Texture Blue Detail Diffuse Texture Green Detail Normal Texture Blue Detail Normal Texture Green Detail Normal Texture Red Detail Rgb Mask Diffuse Texture Gsma Texture Normalmap"},sidebar:"docsSidebar",previous:{title:"Generic Shadow Caster Ati Cube Environment Mapping Diffuse Texture",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[4600-4700]/18004087842139220000"},next:{title:"Opacity Default Cube Environment Mapping Cube Fresnel Diffuse Texture Nvidia Opacity Fade Take Fog",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[4600-4700]/18026235737745619000"}},l={},d=[{value:"Technique <code>deferred_ambient</code>",id:"technique-deferred_ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Sampler 1",id:"sampler-1",level:4},{value:"Sampler 2",id:"sampler-2",level:4},{value:"Sampler 3",id:"sampler-3",level:4},{value:"Sampler 4",id:"sampler-4",level:4},{value:"Sampler 5",id:"sampler-5",level:4},{value:"Sampler 6",id:"sampler-6",level:4},{value:"Sampler 7",id:"sampler-7",level:4},{value:"Sampler 8",id:"sampler-8",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],i={toc:d},_="wrapper";function x(e){let{components:t,...r}=e;return(0,p.kt)(_,(0,n.Z)({},i,r,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"generic-default-detail-diffuse-texture-blue-detail-diffuse-texture-green-detail-normal-texture-blue-detail-normal-texture-green-detail-normal-texture-red-detail-rgb-mask-diffuse-texture-gsma-texture-normalmap"},"Generic Default Detail Diffuse Texture Blue Detail Diffuse Texture Green Detail Normal Texture Blue Detail Normal Texture Green Detail Normal Texture Red Detail Rgb Mask Diffuse Texture Gsma Texture Normalmap"),(0,p.kt)("p",null,"(",(0,p.kt)("inlineCode",{parentName:"p"},"generic:default:DETAIL_DIFFUSE_TEXTURE_BLUE:DETAIL_DIFFUSE_TEXTURE_GREEN:DETAIL_NORMAL_TEXTURE_BLUE:DETAIL_NORMAL_TEXTURE_GREEN:DETAIL_NORMAL_TEXTURE_RED:DETAIL_RGB_MASK:DIFFUSE_TEXTURE:GSMA_TEXTURE:NORMALMAP"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"0xf9e4d36e1d877b01"),")"),(0,p.kt)("h3",{id:"technique-deferred_ambient"},"Technique ",(0,p.kt)("inlineCode",{parentName:"h3"},"deferred_ambient")),(0,p.kt)("h3",{id:"render-states"},"Render States"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 1,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 2,\n    D3DRS_COLORWRITEENABLE = 15,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,p.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,p.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,p.kt)("h4",{id:"sampler-1"},"Sampler 1"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,p.kt)("h4",{id:"sampler-2"},"Sampler 2"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,p.kt)("h4",{id:"sampler-3"},"Sampler 3"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,p.kt)("h4",{id:"sampler-4"},"Sampler 4"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,p.kt)("h4",{id:"sampler-5"},"Sampler 5"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,p.kt)("h4",{id:"sampler-6"},"Sampler 6"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,p.kt)("h4",{id:"sampler-7"},"Sampler 7"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,p.kt)("h4",{id:"sampler-8"},"Sampler 8"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,p.kt)("h3",{id:"shaders"},"Shaders"),(0,p.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-hlsl"},"float camera_near_range : register(vs_3_0, c7);\ncolumn_major float4x4 view_proj_matrix : register(vs_3_0, c0);\ncolumn_major float4x4 world_matrix : register(vs_3_0, c4);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 normal : NORMAL;\n    float4 texcoord1 : TEXCOORD1;\n    float4 texcoord : TEXCOORD;\n    float4 tangent : TANGENT;\n    float4 binormal : BINORMAL;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float texcoord1 : TEXCOORD1;\n    float4 texcoord : TEXCOORD;\n    float3 texcoord2 : TEXCOORD2;\n    float3 texcoord3 : TEXCOORD3;\n    float3 texcoord4 : TEXCOORD4;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float3 temp0;\n    // def c8, 2, -1, 0, 0\n    // dcl_position v0\n    // dcl_normal v1\n    // dcl_texcoord1 v2\n    // dcl_texcoord v3\n    // dcl_tangent v4\n    // dcl_binormal v5\n    // dcl_position o0\n    // dcl_texcoord1 o1.x\n    // dcl_texcoord o2\n    // dcl_texcoord2 o3.xyz\n    // dcl_texcoord3 o4.xyz\n    // dcl_texcoord4 o5.xyz\n    // dp4 o0.x, v0, c0\n    o.position.x = dot(i.position, (view_proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, v0, c1\n    o.position.y = dot(i.position, (view_proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.w, v0, c3\n    o.position.w = dot(i.position, (view_proj_matrix._m03_m13_m23_m33));\n    // dp4 r0.x, v0, c2\n    temp0.x = dot(i.position, (view_proj_matrix._m02_m12_m22_m32));\n    // add o1.x, r0.x, c7.x\n    o.texcoord1 = temp0.x + camera_near_range.x;\n    // mov o0.z, r0.x\n    o.position.z = temp0.x;\n    // mad r0.xyz, v4, c8.x, c8.y\n    temp0.xyz = i.tangent.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o3.x, r0, c4\n    o.texcoord2.x = dot(temp0.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o4.x, r0, c5\n    o.texcoord3.x = dot(temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o5.x, r0, c6\n    o.texcoord4.x = dot(temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mad r0.xyz, v5, c8.x, c8.y\n    temp0.xyz = i.binormal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o3.y, -r0, c4\n    o.texcoord2.y = dot(-temp0.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o4.y, -r0, c5\n    o.texcoord3.y = dot(-temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o5.y, -r0, c6\n    o.texcoord4.y = dot(-temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mad r0.xyz, v1, c8.x, c8.y\n    temp0.xyz = i.normal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o3.z, r0, c4\n    o.texcoord2.z = dot(temp0.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o4.z, r0, c5\n    o.texcoord3.z = dot(temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o5.z, r0, c6\n    o.texcoord4.z = dot(temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mov o2.xy, v3\n    o.texcoord.xy = i.texcoord.xy;\n    // mov o2.zw, v2.xyxy\n    o.texcoord.zw = i.texcoord1.xy;\n    // \n\n    return o;\n}\n")),(0,p.kt)("p",null,"Decompiled by DXDecompiler."),(0,p.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-hlsl"},"sampler2D bump_normal_texture : register(ps_3_0, s2);\nsampler2D diffuse_layer0_texture : register(ps_3_0, s3);\nsampler2D diffuse_layer2_texture : register(ps_3_0, s7);\nsampler2D diffuse_layer3_texture : register(ps_3_0, s8);\nsampler2D diffuse_texture : register(ps_3_0, s0);\nsampler2D material_texture : register(ps_3_0, s1);\nsampler2D normal_layer0_texture : register(ps_3_0, s4);\nsampler2D normal_layer1_texture : register(ps_3_0, s5);\nsampler2D normal_layer2_texture : register(ps_3_0, s6);\nfloat ref_blue_detail_intensity : register(ps_3_0, c5);\nfloat3 ref_blue_detail_scale : register(ps_3_0, c4);\nfloat ref_green_detail_intensity : register(ps_3_0, c3);\nfloat3 ref_green_detail_scale : register(ps_3_0, c2);\nfloat ref_red_detail_intensity : register(ps_3_0, c1);\nfloat3 ref_red_detail_scale : register(ps_3_0, c0);\nstruct PixelMain_Input\n{\n    float texcoord1 : TEXCOORD1;\n    float4 texcoord : TEXCOORD;\n    float3 texcoord2 : TEXCOORD2;\n    float3 texcoord3 : TEXCOORD3;\n    float3 texcoord4 : TEXCOORD4;\n};\n\nstruct PixelMain_Output\n{\n    float4 color : COLOR;\n    float4 color1 : COLOR1;\n    float4 color2 : COLOR2;\n};\n\nPixelMain_Output PixelMain(PixelMain_Input i)\n{\n    PixelMain_Output o;\n    float4 temp0, temp1, temp2, temp3, temp4;\n    // def c6, -0.5, 1, -1, 0.5\n    // dcl_texcoord1 v0.x\n    // dcl_texcoord v1\n    // dcl_texcoord2 v2.xyz\n    // dcl_texcoord3 v3.xyz\n    // dcl_texcoord4 v4.xyz\n    // dcl_2d s0\n    // dcl_2d s1\n    // dcl_2d s2\n    // dcl_2d s3\n    // dcl_2d s4\n    // dcl_2d s5\n    // dcl_2d s6\n    // dcl_2d s7\n    // dcl_2d s8\n    // texld_pp r0, v1, s0\n    temp0 = /* not implemented _pp modifier */ tex2D(diffuse_texture, i.texcoord.xy);\n    // mul r1, c2.xyxy, v1.zwxy\n    temp1 = ref_green_detail_scale.xyxy * i.texcoord.zwxy;\n    // texld_pp r2, r1.zwzw, s7\n    temp2 = /* not implemented _pp modifier */ tex2D(diffuse_layer2_texture, temp1.zw);\n    // texld_pp r1, r1, s5\n    temp1 = /* not implemented _pp modifier */ tex2D(normal_layer1_texture, temp1.xy);\n    // add_pp r1.xy, r1.wyzw, c6.x\n    temp1.xy = /* not implemented _pp modifier */ temp1.wy + float2(-0.5, -0.5);\n    // add_pp r1.xy, r1, r1\n    temp1.xy = /* not implemented _pp modifier */ temp1.xy + temp1.xy;\n    // add r2.xyz, r2, c6.z\n    temp2.xyz = temp2.xyz + float3(-1, -1, -1);\n    // texld r3, v1.zwzw, s3\n    temp3 = tex2D(diffuse_layer0_texture, i.texcoord.zw);\n    // mad r2.xyz, r3.y, r2, c6.y\n    temp2.xyz = temp3.yyy * temp2.xyz + float3(1, 1, 1);\n    // mul_pp r0.xyz, r0, r2\n    temp0.xyz = /* not implemented _pp modifier */ temp0.xyz * temp2.xyz;\n    // mul r2, c4.xyxy, v1.zwxy\n    temp2 = ref_blue_detail_scale.xyxy * i.texcoord.zwxy;\n    // texld_pp r4, r2.zwzw, s8\n    temp4 = /* not implemented _pp modifier */ tex2D(diffuse_layer3_texture, temp2.zw);\n    // texld_pp r2, r2, s6\n    temp2 = /* not implemented _pp modifier */ tex2D(normal_layer2_texture, temp2.xy);\n    // add_pp r2.xy, r2.wyzw, c6.x\n    temp2.xy = /* not implemented _pp modifier */ temp2.wy + float2(-0.5, -0.5);\n    // add_pp r2.xy, r2, r2\n    temp2.xy = /* not implemented _pp modifier */ temp2.xy + temp2.xy;\n    // add r4.xyz, r4, c6.z\n    temp4.xyz = temp4.xyz + float3(-1, -1, -1);\n    // mad r4.xyz, r3.z, r4, c6.y\n    temp4.xyz = temp3.zzz * temp4.xyz + float3(1, 1, 1);\n    // mul_pp oC0.xyz, r0, r4\n    o.color.xyz = /* not implemented _pp modifier */ temp0.xyz * temp4.xyz;\n    // mul_pp r0.x, r1.x, r1.x\n    temp0.x = /* not implemented _pp modifier */ temp1.x * temp1.x;\n    // mad_pp r0.x, r1.y, r1.y, -r0.x\n    temp0.x = /* not implemented _pp modifier */ temp1.y * temp1.y + -temp0.x;\n    // add_pp r0.x, -r0.x, c6.y\n    temp0.x = /* not implemented _pp modifier */ -temp0.x + float1(1);\n    // rsq_pp r0.x, r0.x\n    temp0.x = /* not implemented _pp modifier */ 1 / sqrt(temp0.x);\n    // rcp_pp r1.z, r0.x\n    temp1.z = /* not implemented _pp modifier */ 1.0f / temp0.x;\n    // mul r0.xy, c0, v1.zwzw\n    temp0.xy = ref_red_detail_scale.xy * i.texcoord.zw;\n    // texld_pp r0, r0, s4\n    temp0 = /* not implemented _pp modifier */ tex2D(normal_layer0_texture, temp0.xy);\n    // add_pp r0.xy, r0.wyzw, c6.x\n    temp0.xy = /* not implemented _pp modifier */ temp0.wy + float2(-0.5, -0.5);\n    // add_pp r0.xy, r0, r0\n    temp0.xy = /* not implemented _pp modifier */ temp0.xy + temp0.xy;\n    // mul_pp r0.w, r0.x, r0.x\n    temp0.w = /* not implemented _pp modifier */ temp0.x * temp0.x;\n    // mad_pp r0.w, r0.y, r0.y, -r0.w\n    temp0.w = /* not implemented _pp modifier */ temp0.y * temp0.y + -temp0.w;\n    // add_pp r0.w, -r0.w, c6.y\n    temp0.w = /* not implemented _pp modifier */ -temp0.w + float1(1);\n    // rsq_pp r0.w, r0.w\n    temp0.w = /* not implemented _pp modifier */ 1 / sqrt(temp0.w);\n    // rcp_pp r0.z, r0.w\n    temp0.z = /* not implemented _pp modifier */ 1.0f / temp0.w;\n    // mul r0.w, r3.x, c1.x\n    temp0.w = temp3.x * ref_red_detail_intensity.x;\n    // mad r1.xyz, r0.w, -r0, r1\n    temp1.xyz = temp0.www * -temp0.xyz + temp1.xyz;\n    // mul r0.xyz, r0, r0.w\n    temp0.xyz = temp0.xyz * temp0.www;\n    // mul r0.w, r3.y, c3.x\n    temp0.w = temp3.y * ref_green_detail_intensity.x;\n    // mul r1.w, r3.z, c5.x\n    temp1.w = temp3.z * ref_blue_detail_intensity.x;\n    // mad r0.xyz, r0.w, r1, r0\n    temp0.xyz = temp0.www * temp1.xyz + temp0.xyz;\n    // mul_pp r0.w, r2.x, r2.x\n    temp0.w = /* not implemented _pp modifier */ temp2.x * temp2.x;\n    // mad_pp r0.w, r2.y, r2.y, -r0.w\n    temp0.w = /* not implemented _pp modifier */ temp2.y * temp2.y + -temp0.w;\n    // add_pp r0.w, -r0.w, c6.y\n    temp0.w = /* not implemented _pp modifier */ -temp0.w + float1(1);\n    // rsq_pp r0.w, r0.w\n    temp0.w = /* not implemented _pp modifier */ 1 / sqrt(temp0.w);\n    // rcp_pp r2.z, r0.w\n    temp2.z = /* not implemented _pp modifier */ 1.0f / temp0.w;\n    // lrp r3.xyz, r1.w, r2, r0\n    temp3.xyz = lerp(temp0.xyz, temp2.xyz, temp1.www);\n    // add r0.xyz, -r3, c6.y\n    temp0.xyz = -temp3.xyz + float3(1, 1, 1);\n    // texld_pp r1, v1.zwzw, s2\n    temp1 = /* not implemented _pp modifier */ tex2D(bump_normal_texture, i.texcoord.zw);\n    // add_pp r1.xy, r1.wyzw, c6.x\n    temp1.xy = /* not implemented _pp modifier */ temp1.wy + float2(-0.5, -0.5);\n    // add_pp r1.xy, r1, r1\n    temp1.xy = /* not implemented _pp modifier */ temp1.xy + temp1.xy;\n    // mul_pp r0.w, r1.x, r1.x\n    temp0.w = /* not implemented _pp modifier */ temp1.x * temp1.x;\n    // mad_pp r0.w, r1.y, r1.y, -r0.w\n    temp0.w = /* not implemented _pp modifier */ temp1.y * temp1.y + -temp0.w;\n    // add_pp r0.w, -r0.w, c6.y\n    temp0.w = /* not implemented _pp modifier */ -temp0.w + float1(1);\n    // rsq_pp r0.w, r0.w\n    temp0.w = /* not implemented _pp modifier */ 1 / sqrt(temp0.w);\n    // rcp_pp r1.z, r0.w\n    temp1.z = /* not implemented _pp modifier */ 1.0f / temp0.w;\n    // add r1.xyz, -r1, c6.y\n    temp1.xyz = -temp1.xyz + float3(1, 1, 1);\n    // mad r0.xyz, r1, -r0, c6.y\n    temp0.xyz = temp1.xyz * -temp0.xyz + float3(1, 1, 1);\n    // nrm r1.xyz, r0\n    temp1.xyz = normalize(temp0.xyz).xyz;\n    // dp3 r0.x, r1, v2\n    temp0.x = dot(temp1.xyz, i.texcoord2.xyz);\n    // dp3 r0.y, r1, v3\n    temp0.y = dot(temp1.xyz, i.texcoord3.xyz);\n    // dp3 r0.z, r1, v4\n    temp0.z = dot(temp1.xyz, i.texcoord4.xyz);\n    // nrm_pp r1.xyz, r0\n    temp1.xyz = /* not implemented _pp modifier */ normalize(temp0.xyz).xyz;\n    // mad_pp oC1.xyz, r1, c6.w, c6.w\n    o.color1.xyz = /* not implemented _pp modifier */ temp1.xyz * float3(0.5, 0.5, 0.5) + float3(0.5, 0.5, 0.5);\n    // texld_pp r0, v1, s1\n    temp0 = /* not implemented _pp modifier */ tex2D(material_texture, i.texcoord.xy);\n    // mov_pp oC0.w, r0.x\n    o.color.w = /* not implemented _pp modifier */ temp0.x;\n    // mov_pp oC1.w, r0.y\n    o.color1.w = /* not implemented _pp modifier */ temp0.y;\n    // mov oC2, v0.x\n    o.color2 = i.texcoord1.x;\n    // \n\n    return o;\n}\n")),(0,p.kt)("p",null,"Decompiled by DXDecompiler."))}x.isMDXComponent=!0}}]);