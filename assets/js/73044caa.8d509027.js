"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[77395],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>y});var n=r(67294);function m(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){m(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,m=function(e,t){if(null==e)return{};var r,n,m={},p=Object.keys(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||(m[r]=e[r]);return m}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(m[r]=e[r])}return m}var x=n.createContext({}),_=function(e){var t=n.useContext(x),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=_(e.components);return n.createElement(x.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},i=n.forwardRef((function(e,t){var r=e.components,m=e.mdxType,p=e.originalType,x=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),d=_(r),i=m,y=d["".concat(x,".").concat(i)]||d[i]||c[i]||p;return r?n.createElement(y,o(o({ref:t},l),{},{components:r})):n.createElement(y,o({ref:t},l))}));function y(e,t){var r=arguments,m=t&&t.mdxType;if("string"==typeof e||m){var p=r.length,o=new Array(p);o[0]=i;var a={};for(var x in t)hasOwnProperty.call(t,x)&&(a[x]=t[x]);a.originalType=e,a[d]="string"==typeof e?e:m,o[1]=a;for(var _=2;_<p;_++)o[_]=r[_];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}i.displayName="MDXCreateElement"},25433:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>x,contentTitle:()=>o,default:()=>c,frontMatter:()=>p,metadata:()=>a,toc:()=>_});var n=r(87462),m=(r(67294),r(3905));const p={id:957869648070674e4,title:"Opacity Default Diffuse Texture Double Sided Is Water Normalmap Take Fog Take Global Light"},o="Opacity Default Diffuse Texture Double Sided Is Water Normalmap Take Fog Take Global Light",a={unversionedId:"Generated/Shaders/Base/[2500-2600]/9578696480706740000",id:"Generated/Shaders/Base/[2500-2600]/9578696480706740000",title:"Opacity Default Diffuse Texture Double Sided Is Water Normalmap Take Fog Take Global Light",description:"(opacityDIFFUSETEXTUREISWATERTAKEFOG:TAKEGLOBALLIGHT, 0x84ee5db2f7cf3eb4)",source:"@site/docs/Generated/Shaders/Base/[2500-2600]/0x84ee5db2f7cf3eb4.mdx",sourceDirName:"Generated/Shaders/Base/[2500-2600]",slug:"/Generated/Shaders/Base/[2500-2600]/9578696480706740000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[2500-2600]/9578696480706740000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/docs/Generated/Shaders/Base/[2500-2600]/0x84ee5db2f7cf3eb4.mdx",tags:[],version:"current",frontMatter:{id:"9578696480706740000",title:"Opacity Default Diffuse Texture Double Sided Is Water Normalmap Take Fog Take Global Light"},sidebar:"docsSidebar",previous:{title:"Generic Shadow Caster Contour Diffuse Texture Normalmap Nvidia Skinned 3weights Vertex Color",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[2500-2600]/9575381059663084000"},next:{title:"Generic Shadow Caster Alpha Masked Ati Diffuse Texture External Alpha Ref Gsma Texture Normalmap Opacity Texture Vertex Color",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[2500-2600]/9583306166663694000"}},x={},_=[{value:"Technique <code>transparent</code>",id:"technique-transparent",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Sampler 1",id:"sampler-1",level:4},{value:"Sampler 2",id:"sampler-2",level:4},{value:"Sampler 3",id:"sampler-3",level:4},{value:"Sampler 4",id:"sampler-4",level:4},{value:"Sampler 5",id:"sampler-5",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],l={toc:_},d="wrapper";function c(e){let{components:t,...r}=e;return(0,m.kt)(d,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("h1",{id:"opacity-default-diffuse-texture-double-sided-is-water-normalmap-take-fog-take-global-light"},"Opacity Default Diffuse Texture Double Sided Is Water Normalmap Take Fog Take Global Light"),(0,m.kt)("p",null,"(",(0,m.kt)("inlineCode",{parentName:"p"},"opacity:default:DIFFUSE_TEXTURE:DOUBLE_SIDED:IS_WATER:NORMALMAP:TAKE_FOG:TAKE_GLOBAL_LIGHT"),", ",(0,m.kt)("inlineCode",{parentName:"p"},"0x84ee5db2f7cf3eb4"),")"),(0,m.kt)("h3",{id:"technique-transparent"},"Technique ",(0,m.kt)("inlineCode",{parentName:"h3"},"transparent")),(0,m.kt)("h3",{id:"render-states"},"Render States"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 0,\n    D3DRS_ALPHABLENDENABLE = 1,\n    D3DRS_CULLMODE = 1,\n    D3DRS_COLORWRITEENABLE = 7,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 1,\n    D3DRS_STENCILFUNC = 6,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 5,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 4,\n    D3DRS_STENCILWRITEMASK = 5,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n    D3DRS_BLENDOP = 1,\n    D3DRS_DESTBLEND = 6,\n    D3DRS_SRCBLEND = 5,\n};\n")),(0,m.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,m.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 1,\n    D3DSAMP_MINFILTER = 1,\n    D3DSAMP_MIPFILTER = 1,\n};\n")),(0,m.kt)("h4",{id:"sampler-1"},"Sampler 1"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 2,\n    D3DSAMP_MINFILTER = 2,\n    D3DSAMP_MIPFILTER = 2,\n};\n")),(0,m.kt)("h4",{id:"sampler-2"},"Sampler 2"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,m.kt)("h4",{id:"sampler-3"},"Sampler 3"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 2,\n    D3DSAMP_MINFILTER = 2,\n    D3DSAMP_MIPFILTER = 2,\n};\n")),(0,m.kt)("h4",{id:"sampler-4"},"Sampler 4"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,m.kt)("h4",{id:"sampler-5"},"Sampler 5"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,m.kt)("h3",{id:"shaders"},"Shaders"),(0,m.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-hlsl"},"float camera_near_range : register(vs_3_0, c12);\ncolumn_major float4x4 proj_matrix : register(vs_3_0, c8);\nfloat ref_time : register(vs_3_0, c16);\nfloat3 ref_water_settingz_b : register(vs_3_0, c17);\nfloat3 ref_water_settingz_c : register(vs_3_0, c18);\nfloat3 render_target_texel_offset : register(vs_3_0, c13);\ncolumn_major float4x4 view_matrix : register(vs_3_0, c4);\nfloat3 vp_offset : register(vs_3_0, c14);\nfloat3 vp_size : register(vs_3_0, c15);\ncolumn_major float4x4 world_matrix : register(vs_3_0, c0);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 color : COLOR;\n    float4 normal : NORMAL;\n    float4 texcoord1 : TEXCOORD1;\n    float4 texcoord4 : TEXCOORD4;\n    float4 texcoord : TEXCOORD;\n    float4 tangent : TANGENT;\n    float4 binormal : BINORMAL;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float4 color : COLOR;\n    float4 texcoord5 : TEXCOORD5;\n    float4 texcoord6 : TEXCOORD6;\n    float2 texcoord1 : TEXCOORD1;\n    float3 texcoord4 : TEXCOORD4;\n    float4 texcoord : TEXCOORD;\n    float3 texcoord2 : TEXCOORD2;\n    float3 texcoord3 : TEXCOORD3;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float4 temp0, temp1, temp2, temp3;\n    // def c19, 2, -1, 0.5, 0.2\n    // def c20, 0.15915494, 0.5, 6.2831855, -3.1415927\n    // def c21, 0.1, 0.01, 0.11, -0.011\n    // dcl_position v0\n    // dcl_color v1\n    // dcl_normal v2\n    // dcl_texcoord1 v3\n    // dcl_texcoord4 v4\n    // dcl_texcoord v5\n    // dcl_tangent v6\n    // dcl_binormal v7\n    // dcl_position o0\n    // dcl_color o1\n    // dcl_texcoord5 o2\n    // dcl_texcoord6 o3\n    // dcl_texcoord1 o4.xy\n    // dcl_texcoord4 o5.xyz\n    // dcl_texcoord o6\n    // dcl_texcoord2 o7.xyz\n    // dcl_texcoord3 o8.xyz\n    // mov r0.xz, c19\n    temp0.xz = float2(2, 0.5);\n    // add r0.yz, r0.z, c13.xxyw\n    temp0.yz = temp0.zz + render_target_texel_offset.xy;\n    // mov r1.xy, c15\n    temp1.xy = vp_size.xy;\n    // mad r0.xw, c14.xyzy, r0.x, r1.xyzy\n    temp0.xw = vp_offset.xy * temp0.xx + temp1.xy;\n    // add r0.xw, r0, c19.y\n    temp0.xw = temp0.xw + float2(-1, -1);\n    // dp4 r1.w, v0, c3\n    temp1.w = dot(i.position, (world_matrix._m03_m13_m23_m33));\n    // dp4 r1.z, v0, c2\n    temp1.z = dot(i.position, (world_matrix._m02_m12_m22_m32));\n    // dp4 r1.x, v0, c0\n    temp1.x = dot(i.position, (world_matrix._m00_m10_m20_m30));\n    // dp4 r1.y, v0, c1\n    temp1.y = dot(i.position, (world_matrix._m01_m11_m21_m31));\n    // dp4 r2.x, r1, c4\n    temp2.x = dot(temp1, (view_matrix._m00_m10_m20_m30));\n    // dp4 r2.y, r1, c5\n    temp2.y = dot(temp1, (view_matrix._m01_m11_m21_m31));\n    // dp4 r2.z, r1, c6\n    temp2.z = dot(temp1, (view_matrix._m02_m12_m22_m32));\n    // dp4 r2.w, r1, c7\n    temp2.w = dot(temp1, (view_matrix._m03_m13_m23_m33));\n    // mov o2.xyz, r1\n    o.texcoord5.xyz = temp1.xyz;\n    // dp4 r3.w, r2, c11\n    temp3.w = dot(temp2, (proj_matrix._m03_m13_m23_m33));\n    // mul r0.xw, r0, r3.w\n    temp0.xw = temp0.xw * temp3.ww;\n    // dp4 r3.x, r2, c8\n    temp3.x = dot(temp2, (proj_matrix._m00_m10_m20_m30));\n    // mad r0.x, r3.x, c15.x, r0.x\n    temp0.x = temp3.x * vp_size.x + temp0.x;\n    // add r1.z, r3.w, r3.w\n    temp1.z = temp3.w + temp3.w;\n    // mad o3.x, r1.z, r0.y, r0.x\n    o.texcoord6.x = temp1.z * temp0.y + temp0.x;\n    // dp4 r3.y, r2, c9\n    temp3.y = dot(temp2, (proj_matrix._m01_m11_m21_m31));\n    // dp4 r3.z, r2, c10\n    temp3.z = dot(temp2, (proj_matrix._m02_m12_m22_m32));\n    // mad r0.x, r3.y, -c15.y, r0.w\n    temp0.x = temp3.y * -vp_size.y + temp0.w;\n    // mov o0, r3\n    o.position = temp3;\n    // mul o3.zw, r3, c19_abs.xyyx\n    o.texcoord6.zw = temp3.zw * float2(1, 2);\n    // add o2.w, r3.z, c12.x\n    o.texcoord5.w = temp3.z + camera_near_range.x;\n    // mad o3.y, r1.z, r0.z, r0.x\n    o.texcoord6.y = temp1.z * temp0.z + temp0.x;\n    // mad r0.xyz, v6, c19.x, c19.y\n    temp0.xyz = i.tangent.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o7.x, r0, c0\n    o.texcoord2.x = dot(temp0.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o8.x, r0, c1\n    o.texcoord3.x = dot(temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o5.x, r0, c2\n    o.texcoord4.x = dot(temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mad r0.xyz, v7, c19.x, c19.y\n    temp0.xyz = i.binormal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o7.y, -r0, c0\n    o.texcoord2.y = dot(-temp0.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o8.y, -r0, c1\n    o.texcoord3.y = dot(-temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o5.y, -r0, c2\n    o.texcoord4.y = dot(-temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mad r0.xyz, v2, c19.x, c19.y\n    temp0.xyz = i.normal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o7.z, r0, c0\n    o.texcoord2.z = dot(temp0.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o8.z, r0, c1\n    o.texcoord3.z = dot(temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o5.z, r0, c2\n    o.texcoord4.z = dot(temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mul r0.x, r1.y, c17.y\n    temp0.x = temp1.y * ref_water_settingz_b.y;\n    // mad r0.x, r0.x, c20.x, c20.y\n    temp0.x = temp0.x * float1(0.15915494) + float1(0.5);\n    // frc r0.x, r0.x\n    temp0.x = frac(temp0.x);\n    // mad r0.x, r0.x, c20.z, c20.w\n    temp0.x = temp0.x * float1(6.2831855) + float1(-3.1415927);\n    // sincos r2.x, r0.x\n    temp2.x = cos(temp0.x);\n    // mad r0.x, r1.x, c17.y, r2.x\n    temp0.x = temp1.x * ref_water_settingz_b.y + temp2.x;\n    // mov r0.z, c17.z\n    temp0.z = ref_water_settingz_b.z;\n    // mad r0.x, c16.x, r0.z, r0.x\n    temp0.x = ref_time.x * temp0.z + temp0.x;\n    // mad r0.x, r0.x, c20.x, c20.y\n    temp0.x = temp0.x * float1(0.15915494) + float1(0.5);\n    // frc r0.x, r0.x\n    temp0.x = frac(temp0.x);\n    // mad r0.x, r0.x, c20.z, c20.w\n    temp0.x = temp0.x * float1(6.2831855) + float1(-3.1415927);\n    // sincos r2.y, r0.x\n    temp2.y = sin(temp0.x);\n    // sincos r3.y, r2.y\n    temp3.y = sin(temp2.y);\n    // mov r1.z, r2.y\n    temp1.z = temp2.y;\n    // mad r0.x, r1.y, c17.y, r3.y\n    temp0.x = temp1.y * ref_water_settingz_b.y + temp3.y;\n    // mad r0.x, c16.x, r0.z, r0.x\n    temp0.x = ref_time.x * temp0.z + temp0.x;\n    // mad r0.x, r0.x, c20.x, c20.y\n    temp0.x = temp0.x * float1(0.15915494) + float1(0.5);\n    // frc r0.x, r0.x\n    temp0.x = frac(temp0.x);\n    // mad r0.x, r0.x, c20.z, c20.w\n    temp0.x = temp0.x * float1(6.2831855) + float1(-3.1415927);\n    // sincos r2.x, r0.x\n    temp2.x = cos(temp0.x);\n    // mov r1.w, r2.x\n    temp1.w = temp2.x;\n    // mad r0.xy, r1.zwzw, c17.x, v5\n    temp0.xy = temp1.zw * ref_water_settingz_b.xx + i.texcoord.xy;\n    // mul r0.zw, r1, c17.x\n    temp0.zw = temp1.zw * ref_water_settingz_b.xx;\n    // mov r1.x, c16.x\n    temp1.x = ref_time.x;\n    // mul r1, r1.x, c18.xyxy\n    temp1 = temp1.x * ref_water_settingz_c.xyxy;\n    // mad o6.xy, r1, c21, r0\n    o.texcoord.xy = temp1.xy * float2(0.1, 0.01) + temp0.xy;\n    // add r0.xy, c19.w, v3\n    temp0.xy = float2(0.2, 0.2) + i.texcoord1.xy;\n    // mad r0.xy, r0.zwzw, c19.x, r0\n    temp0.xy = temp0.zw * float2(2, 2) + temp0.xy;\n    // add r0.xy, r0, c19.z\n    temp0.xy = temp0.xy + float2(0.5, 0.5);\n    // mad o6.zw, r1, c21, r0.xyxy\n    o.texcoord.zw = temp1.zw * float2(0.11, -0.011) + temp0.xy;\n    // mov o1, v1\n    o.color = i.color;\n    // mov o4.xy, v4\n    o.texcoord1 = i.texcoord4;\n    // \n\n    return o;\n}\n")),(0,m.kt)("p",null,"Decompiled by DXDecompiler."),(0,m.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-hlsl"},"float3 GLOBAL_ambient_color : register(ps_3_0, c21);\nfloat3 GLOBAL_fog_far_low_color : register(ps_3_0, c24);\nfloat GLOBAL_fog_max_range : register(ps_3_0, c26);\nfloat GLOBAL_fog_min_range : register(ps_3_0, c25);\nfloat3 GLOBAL_fog_start_color : register(ps_3_0, c23);\nfloat3 GLOBAL_shadow_slice_depths : register(ps_3_0, c16);\nsampler2D bump_normal_texture : register(ps_3_0, s5);\ncolumn_major float4x4 camera_world_matrix : register(ps_3_0, c12);\nsampler2D depth : register(ps_3_0, s0);\nsampler2D diffuse_texture : register(ps_3_0, s4);\nsampler2D distortion_source : register(ps_3_0, s1);\nfloat3 global_light_col : register(ps_3_0, c22);\nfloat3 global_light_dir : register(ps_3_0, c15);\ncolumn_major float4x4 global_shadow_projection[3] : register(ps_3_0, c0);\nfloat ref_depth_opacity : register(ps_3_0, c17);\nfloat3 ref_surface_settings : register(ps_3_0, c20);\nfloat3 ref_water_col_a : register(ps_3_0, c18);\nfloat3 ref_water_col_b : register(ps_3_0, c19);\nsamplerCUBE reflection_texture : register(ps_3_0, s2);\nsampler2D shadow_depth : register(ps_3_0, s3);\nstruct PixelMain_Input\n{\n    float4 color : COLOR;\n    float4 texcoord5 : TEXCOORD5;\n    float4 texcoord6 : TEXCOORD6;\n    float3 texcoord4 : TEXCOORD4;\n    float4 texcoord : TEXCOORD;\n    float3 texcoord2 : TEXCOORD2;\n    float3 texcoord3 : TEXCOORD3;\n};\n\nfloat4 PixelMain(PixelMain_Input i) : COLOR\n{\n    float4 out_color;\n    float4 temp0, temp1, temp2, temp3, temp4, temp5, temp6;\n    // def c27, -0.5, 1, 0, 0.5\n    // def c28, 4, 10, 0.05, 0.9\n    // def c29, 0.3, 0, 0, 0\n    // def c30, -1, -2, -3, 511.5\n    // dcl_color_pp v0\n    // dcl_texcoord5 v1\n    // dcl_texcoord6 v2\n    // dcl_texcoord4 v3.xyz\n    // dcl_texcoord v4\n    // dcl_texcoord2 v5.xyz\n    // dcl_texcoord3 v6.xyz\n    // dcl_2d s0\n    // dcl_2d s1\n    // dcl_cube s2\n    // dcl_2d s3\n    // dcl_2d s4\n    // dcl_2d s5\n    // texld_pp r0, v4, s5\n    temp0 = /* not implemented _pp modifier */ tex2D(bump_normal_texture, i.texcoord.xy);\n    // add_pp r0.yz, r0.xwxw, c27.x\n    temp0.yz = /* not implemented _pp modifier */ temp0.wx + float2(-0.5, -0.5);\n    // add_pp r0.yz, r0_abs, r0_abs\n    temp0.yz = /* not implemented _pp modifier */ abs(temp0).yz + abs(temp0).yz;\n    // dp2add_pp r1.x, r0.yzzw, c27.y, c27.z\n    temp1.x = /* not implemented _pp modifier */ dot(temp0.yz, float2(1, 1)) + float1(0);\n    // texld_pp r2, v4.zwzw, s5\n    temp2 = /* not implemented _pp modifier */ tex2D(bump_normal_texture, i.texcoord.zw);\n    // add_pp r1.yz, r2.xwxw, c27.x\n    temp1.yz = /* not implemented _pp modifier */ temp2.wx + float2(-0.5, -0.5);\n    // add_pp r1.yz, r1_abs, r1_abs\n    temp1.yz = /* not implemented _pp modifier */ abs(temp1).yz + abs(temp1).yz;\n    // dp2add r1.x, r1.yzzw, c27.y, -r1.x\n    temp1.x = dot(temp1.yz, float2(1, 1)) + -temp1.x;\n    // dp2add_pp r1.y, r1.yzzw, c27.y, c27.z\n    temp1.y = /* not implemented _pp modifier */ dot(temp1.yz, float2(1, 1)) + float1(0);\n    // dp2add_sat_pp r0.y, r0.yzzw, c27.y, -r1.y\n    ;// error\n    // add_sat_pp r0.y, r0.y, -v0.x\n    ;// error\n    // mul_sat_pp r0.y, r0.y, c28.y\n    ;// error\n    // lrp r0.z, v0.w, v0.z, r1_abs.x\n    temp0.z = lerp(abs(temp1).x, i.color.z, i.color.w);\n    // lrp_pp r1.xy, r0.z, r2.wxzw, r0.wxzw\n    temp1.xy = /* not implemented _pp modifier */ lerp(temp0.wx, temp2.wx, temp0.zz);\n    // add_pp r0.xz, r1.xyyw, c27.x\n    temp0.xz = /* not implemented _pp modifier */ temp1.xy + float2(-0.5, -0.5);\n    // mul_pp r0.xz, r0, v0.y\n    temp0.xz = /* not implemented _pp modifier */ temp0.xz * i.color.yy;\n    // add_pp r1.xy, r0.xzzw, r0.xzzw\n    temp1.xy = /* not implemented _pp modifier */ temp0.xz + temp0.xz;\n    // mov_pp r1.z, c27.y\n    temp1.z = /* not implemented _pp modifier */ float1(1);\n    // dp3 r2.x, r1, v5\n    temp2.x = dot(temp1.xyz, i.texcoord2.xyz);\n    // dp3 r2.y, r1, v6\n    temp2.y = dot(temp1.xyz, i.texcoord3.xyz);\n    // dp3 r2.z, r1, v3\n    temp2.z = dot(temp1.xyz, i.texcoord4.xyz);\n    // nrm_pp r3.xyz, r2\n    temp3.xyz = /* not implemented _pp modifier */ normalize(temp2.xyz).xyz;\n    // mov r2.x, -c12.w\n    temp2.x = -(camera_world_matrix._m00_m10_m20_m30).w;\n    // mov r2.y, -c13.w\n    temp2.y = -(camera_world_matrix._m01_m11_m21_m31).w;\n    // mov r2.z, -c14.w\n    temp2.z = -(camera_world_matrix._m02_m12_m22_m32).w;\n    // add r0.xzw, r2.xyyz, v1.xyyz\n    temp0.xzw = temp2.xyz + i.texcoord5.xyz;\n    // dp3 r1.z, r0.xzww, r0.xzww\n    temp1.z = dot(temp0.xzw, temp0.xzw);\n    // rsq r1.z, r1.z\n    temp1.z = 1 / sqrt(temp1.z);\n    // mul r2.xyz, r0.xzww, r1.z\n    temp2.xyz = temp0.xzw * temp1.zzz;\n    // mad r0.xzw, r0, -r1.z, -c15.xyyz\n    temp0.xzw = temp0.xzw * -temp1.zzz + -global_light_dir.xyz;\n    // nrm r4.xyz, r0.xzww\n    temp4.xyz = normalize(temp0.xzww.xyz).xyz;\n    // dp3_sat r0.x, r4, r3\n    temp0.x = saturate(dot(temp4.xyz, temp3.xyz));\n    // pow r1.z, r0.x, c30.w\n    temp1.z = pow(temp0.x, float1(511.5));\n    // dp3 r0.x, r3, -r2\n    temp0.x = dot(temp3.xyz, -temp2.xyz);\n    // mul r0.x, r0.x, c20.y\n    temp0.x = temp0.x * ref_surface_settings.y;\n    // add r0.z, r0.x, r0.x\n    temp0.z = temp0.x + temp0.x;\n    // mad_pp r4.xyz, r0.z, -r3, -r2\n    temp4.xyz = /* not implemented _pp modifier */ temp0.zzz * -temp3.xyz + -temp2.xyz;\n    // dp3_sat r0.z, -c15, r3\n    temp0.z = saturate(dot(-global_light_dir.xyz, temp3.xyz));\n    // dp3 r0.w, r2, c15\n    temp0.w = dot(temp2.xyz, global_light_dir.xyz);\n    // mad_sat r0.w, r0.w, c27.w, c27.w\n    temp0.w = saturate(temp0.w * float1(0.5) + float1(0.5));\n    // mul r0.w, r0.z, r0.w\n    temp0.w = temp0.z * temp0.w;\n    // mul r2.xyz, r0.w, c22\n    temp2.xyz = temp0.www * global_light_col.xyz;\n    // mad r2.xyz, c22, r0.z, r2\n    temp2.xyz = global_light_col.xyz * temp0.zzz + temp2.xyz;\n    // texld_pp r3, r4, s2\n    temp3 = /* not implemented _pp modifier */ texCUBE(reflection_texture, temp4.xyz);\n    // mov_pp r4.xyz, c18\n    temp4.xyz = /* not implemented _pp modifier */ ref_water_col_a.xyz;\n    // add r4.xyz, -r4, c19\n    temp4.xyz = -temp4.xyz + ref_water_col_b.xyz;\n    // mad_pp r4.xyz, r0.x, r4, c18\n    temp4.xyz = /* not implemented _pp modifier */ temp0.xxx * temp4.xyz + ref_water_col_a.xyz;\n    // mad_sat_pp r3.xyz, r3, c20.x, r4\n    ;// error\n    // lrp r0.xw, c27.w, v4.zyzw, v4.xyzy\n    temp0.xw = lerp(i.texcoord.xy, i.texcoord.zw, float2(0.5, 0.5));\n    // mul r0.xw, r0, c28.x\n    temp0.xw = temp0.xw * float2(4, 4);\n    // texld_pp r4, r0.xwzw, s4\n    temp4 = /* not implemented _pp modifier */ tex2D(diffuse_texture, temp0.xw);\n    // mul_pp r0.x, r0.y, r4.w\n    temp0.x = /* not implemented _pp modifier */ temp0.y * temp4.w;\n    // lrp_pp r5.xyz, r0.x, r4, r3\n    temp5.xyz = /* not implemented _pp modifier */ lerp(temp3.xyz, temp4.xyz, temp0.xxx);\n    // texld r3, v2, s0\n    temp3 = tex2D(depth, i.texcoord6.xy);\n    // add r0.x, -r3.x, v2.z\n    temp0.x = -temp3.x + i.texcoord6.z;\n    // rcp r0.y, c17.x\n    temp0.y = 1.0f / ref_depth_opacity.x;\n    // mul_sat_pp r0.x, r0.y, r0_abs.x\n    ;// error\n    // add r0.y, -r0.x, c27.y\n    temp0.y = -temp0.x + float1(1);\n    // mad r0.y, c20.z, r0.y, r0.x\n    temp0.y = ref_surface_settings.z * temp0.y + temp0.x;\n    // mul_pp r0.x, r0.x, c28.z\n    temp0.x = /* not implemented _pp modifier */ temp0.x * float1(0.05);\n    // mul r0.xw, r0.x, r1.xyzy\n    temp0.xw = temp0.xx * temp1.xy;\n    // rcp r1.x, v2.w\n    temp1.x = 1.0f / i.texcoord6.w;\n    // mad r0.xw, v2.xyzy, r1.x, r0\n    temp0.xw = i.texcoord6.xy * temp1.xx + temp0.xw;\n    // texld r3, r0.xwzw, s1\n    temp3 = tex2D(distortion_source, temp0.xw);\n    // lrp_pp r1.xyw, r0.y, r5.xyzz, r3.xyzz\n    temp1.xyw = /* not implemented _pp modifier */ lerp(temp3.xyz, temp5.xyz, temp0.yyy);\n    // mov r3.x, -v1.w\n    temp3.x = -i.texcoord5.w;\n    // add r3.yzw, c16.xxyz, -v1.w\n    temp3.yzw = GLOBAL_shadow_slice_depths.xyz + -i.texcoord5.www;\n    // cmp r3, r3, c27.z, c27.y\n    temp3 = (temp3 >= 0) ? float4(0, 0, 0, 0) : float4(1, 1, 1, 1);\n    // dp4 r0.x, r3, c27.y\n    temp0.x = dot(temp3, float4(1, 1, 1, 1));\n    // add r0.xyw, r0.x, c30.xyzz\n    temp0.xyw = temp0.xxx + float3(-1, -2, -3);\n    // mov r3.z, c27.z\n    temp3.z = float1(0);\n    // cmp r4, -r0_abs.x, c0, r3.z\n    temp4 = (-abs(temp0).x >= 0) ? (global_shadow_projection[0]._m00_m10_m20_m30) : temp3.z;\n    // cmp r4, -r0_abs.y, c4, r4\n    temp4 = (-abs(temp0).y >= 0) ? (global_shadow_projection[1]._m00_m10_m20_m30) : temp4;\n    // cmp r4, -r0_abs.w, c8, r4\n    temp4 = (-abs(temp0).w >= 0) ? (global_shadow_projection[2]._m00_m10_m20_m30) : temp4;\n    // mad r5, v1.xyzx, c27.yyyz, c27.zzzy\n    temp5 = i.texcoord5.xyzx * float4(1, 1, 1, 0) + float4(0, 0, 0, 1);\n    // dp4 r4.x, r5, r4\n    temp4.x = dot(temp5, temp4);\n    // cmp r6, -r0_abs.x, c1, r3.z\n    temp6 = (-abs(temp0).x >= 0) ? (global_shadow_projection[0]._m01_m11_m21_m31) : temp3.z;\n    // cmp r6, -r0_abs.y, c5, r6\n    temp6 = (-abs(temp0).y >= 0) ? (global_shadow_projection[1]._m01_m11_m21_m31) : temp6;\n    // cmp r6, -r0_abs.w, c9, r6\n    temp6 = (-abs(temp0).w >= 0) ? (global_shadow_projection[2]._m01_m11_m21_m31) : temp6;\n    // dp4 r4.y, r5, r6\n    temp4.y = dot(temp5, temp6);\n    // cmp r6, -r0_abs.x, c2, r3.z\n    temp6 = (-abs(temp0).x >= 0) ? (global_shadow_projection[0]._m02_m12_m22_m32) : temp3.z;\n    // cmp r6, -r0_abs.y, c6, r6\n    temp6 = (-abs(temp0).y >= 0) ? (global_shadow_projection[1]._m02_m12_m22_m32) : temp6;\n    // cmp r6, -r0_abs.w, c10, r6\n    temp6 = (-abs(temp0).w >= 0) ? (global_shadow_projection[2]._m02_m12_m22_m32) : temp6;\n    // dp4 r4.z, r5, r6\n    temp4.z = dot(temp5, temp6);\n    // cmp r3, -r0_abs.x, c3, r3.z\n    temp3 = (-abs(temp0).x >= 0) ? (global_shadow_projection[0]._m03_m13_m23_m33) : temp3.z;\n    // cmp r3, -r0_abs.y, c7, r3\n    temp3 = (-abs(temp0).y >= 0) ? (global_shadow_projection[1]._m03_m13_m23_m33) : temp3;\n    // cmp r3, -r0_abs.w, c11, r3\n    temp3 = (-abs(temp0).w >= 0) ? (global_shadow_projection[2]._m03_m13_m23_m33) : temp3;\n    // dp4 r4.w, r5, r3\n    temp4.w = dot(temp5, temp3);\n    // texld r3, r4, s3\n    temp3 = tex2D(shadow_depth, temp4.xy);\n    // mul r0.xyw, r3.x, c22.xyzz\n    temp0.xyw = temp3.xxx * global_light_col.xyz;\n    // mul r0.xyw, r0, c28.w\n    temp0.xyw = temp0.xyw * float3(0.9, 0.9, 0.9);\n    // mul r3.yzw, r1.z, r0.xxyw\n    temp3.yzw = temp1.zzz * temp0.xyw;\n    // mul r3.yzw, r3.x, r3\n    temp3.yzw = temp3.xxx * temp3.yzw;\n    // mad r2.xyz, r3.x, r2, c21\n    temp2.xyz = temp3.xxx * temp2.xyz + GLOBAL_ambient_color.xyz;\n    // add_sat r2.xyz, r2, c29.x\n    temp2.xyz = saturate(temp2.xyz + float3(0.3, 0.3, 0.3));\n    // cmp r3.xyz, -r0.z, c27.z, r3.yzww\n    temp3.xyz = (-temp0.zzz >= 0) ? float3(0, 0, 0) : temp3.yzw;\n    // mad r1.xyw, r2.xyzz, r1, r3.xyzz\n    temp1.xyw = temp2.xyz * temp1.xyw + temp3.xyz;\n    // mad_pp r0.xyz, r0.xyww, r1.z, r1.xyww\n    temp0.xyz = /* not implemented _pp modifier */ temp0.xyw * temp1.zzz + temp1.xyw;\n    // add r0.w, -c25.x, v1.w\n    temp0.w = -GLOBAL_fog_min_range.x + i.texcoord5.w;\n    // rcp r1.x, c26.x\n    temp1.x = 1.0f / GLOBAL_fog_max_range.x;\n    // mul_sat r0.w, r0.w, r1.x\n    temp0.w = saturate(temp0.w * temp1.x);\n    // add r0.w, -r0.w, c27.y\n    temp0.w = -temp0.w + float1(1);\n    // mul r0.w, r0.w, r0.w\n    temp0.w = temp0.w * temp0.w;\n    // mul r0.w, r0.w, r0.w\n    temp0.w = temp0.w * temp0.w;\n    // mov r1.xyz, c24\n    temp1.xyz = GLOBAL_fog_far_low_color.xyz;\n    // add r1.xyz, -r1, c23\n    temp1.xyz = -temp1.xyz + GLOBAL_fog_start_color.xyz;\n    // mad r1.xyz, r0.w, r1, c24\n    temp1.xyz = temp0.www * temp1.xyz + GLOBAL_fog_far_low_color.xyz;\n    // add r0.xyz, r0, -r1\n    temp0.xyz = temp0.xyz + -temp1.xyz;\n    // mad_pp oC0.xyz, r0.w, r0, r1\n    out_color.xyz = /* not implemented _pp modifier */ temp0.www * temp0.xyz + temp1.xyz;\n    // mov_pp oC0.w, c27.y\n    out_color.w = /* not implemented _pp modifier */ float1(1);\n    // \n\n    return out_color;\n}\n")),(0,m.kt)("p",null,"Decompiled by DXDecompiler."))}c.isMDXComponent=!0}}]);