"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[45379],{603905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>p});var a=r(667294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=a.createContext({}),s=function(e){var t=a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},c="mdxType",D={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,u=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=s(r),m=n,p=c["".concat(u,".").concat(m)]||c[m]||D[m]||l;return r?a.createElement(p,i(i({ref:t},d),{},{components:r})):a.createElement(p,i({ref:t},d))}));function p(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=m;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[c]="string"==typeof e?e:n,i[1]=o;for(var s=2;s<l;s++)i[s]=r[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},674170:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>D,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=r(487462),n=(r(667294),r(603905));const l={id:0xec354c39ffe6e800,title:"Generic Shadow Caster Detail Diffuse Texture Blue Detail Diffuse Texture Green Detail Normal Texture Blue Detail Normal Texture Green Detail Normal Texture Red Detail Rgb Mask Diffuse Texture Gsma Texture Normalmap"},i="Generic Shadow Caster Detail Diffuse Texture Blue Detail Diffuse Texture Green Detail Normal Texture Blue Detail Normal Texture Green Detail Normal Texture Red Detail Rgb Mask Diffuse Texture Gsma Texture Normalmap",o={unversionedId:"Generated/Shaders/Base/[4400-4500]/17020594178706827000",id:"Generated/Shaders/Base/[4400-4500]/17020594178706827000",title:"Generic Shadow Caster Detail Diffuse Texture Blue Detail Diffuse Texture Green Detail Normal Texture Blue Detail Normal Texture Green Detail Normal Texture Red Detail Rgb Mask Diffuse Texture Gsma Texture Normalmap",description:"(genericDETAILDIFFUSETEXTUREBLUEDETAILNORMALTEXTUREBLUEDETAILNORMALTEXTUREREDDIFFUSETEXTURENORMALMAP, 0xec354c39ffe6e942)",source:"@site/docs/Generated/Shaders/Base/[4400-4500]/0xec354c39ffe6e942.mdx",sourceDirName:"Generated/Shaders/Base/[4400-4500]",slug:"/Generated/Shaders/Base/[4400-4500]/17020594178706827000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[4400-4500]/17020594178706827000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/Generated/Shaders/Base/[4400-4500]/0xec354c39ffe6e942.mdx",tags:[],version:"current",frontMatter:{id:"17020594178706827000",title:"Generic Shadow Caster Detail Diffuse Texture Blue Detail Diffuse Texture Green Detail Normal Texture Blue Detail Normal Texture Green Detail Normal Texture Red Detail Rgb Mask Diffuse Texture Gsma Texture Normalmap"},sidebar:"docsSidebar",previous:{title:"Generic Shadow Caster Alpha Masked Ati Diffuse Texture Double Sided External Alpha Ref Instanced Normalmap Vegetation Bending",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[4400-4500]/17014299958298302000"},next:{title:"Generic Shadow Caster Ati Contour Cube Environment Mapping Diffuse Texture Gloss Blurs Cubemap Gloss Control Value Normalmap",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[4400-4500]/17021552315942650000"}},u={},s=[{value:"Technique <code>ambient</code>",id:"technique-ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],d={toc:s},c="wrapper";function D(e){let{components:t,...r}=e;return(0,n.kt)(c,(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"generic-shadow-caster-detail-diffuse-texture-blue-detail-diffuse-texture-green-detail-normal-texture-blue-detail-normal-texture-green-detail-normal-texture-red-detail-rgb-mask-diffuse-texture-gsma-texture-normalmap"},"Generic Shadow Caster Detail Diffuse Texture Blue Detail Diffuse Texture Green Detail Normal Texture Blue Detail Normal Texture Green Detail Normal Texture Red Detail Rgb Mask Diffuse Texture Gsma Texture Normalmap"),(0,n.kt)("p",null,"(",(0,n.kt)("inlineCode",{parentName:"p"},"generic:shadow_caster:DETAIL_DIFFUSE_TEXTURE_BLUE:DETAIL_DIFFUSE_TEXTURE_GREEN:DETAIL_NORMAL_TEXTURE_BLUE:DETAIL_NORMAL_TEXTURE_GREEN:DETAIL_NORMAL_TEXTURE_RED:DETAIL_RGB_MASK:DIFFUSE_TEXTURE:GSMA_TEXTURE:NORMALMAP"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"0xec354c39ffe6e942"),")"),(0,n.kt)("p",null,"This template is referenced 1 time by ",(0,n.kt)("a",{parentName:"p",href:"/docs/Generated/Render%20Templates/base.render_template_database#generic-detail-diffuse-texture-blue-detail-diffuse-texture-green-detail-normal-texture-blue-detail-normal-texture-green-detail-normal-texture-red-detail-rgb-mask-diffuse-texture-gsma-texture-normalmap"},"generic:DETAIL_DIFFUSE_TEXTURE_BLUE:DETAIL_DIFFUSE_TEXTURE_GREEN:DETAIL_NORMAL_TEXTURE_BLUE:DETAIL_NORMAL_TEXTURE_GREEN:DETAIL_NORMAL_TEXTURE_RED:DETAIL_RGB_MASK:DIFFUSE_TEXTURE:GSMA_TEXTURE:NORMALMAP"),".\nThis template uses the following inputs:\n|Name|UI Name|Type|\n|---|---|---|\n|diffuse_texture|Diffuse Texture (UV1)|texture|\n|material_texture|Gloss-Spec-Material-Alpha Texture (GSMA)|texture|\n|bump_normal_texture|Normal map (UV2 else UV1)|texture|\n|diffuse_layer0_texture|Mask Texture|texture|\n|normal_layer0_texture|Detail Normal Map(Red)|texture|\n|normal_layer1_texture|Detail Normal Map(Green)|texture|\n|normal_layer2_texture|Detail Normal Map(Blue)|texture|\n|diffuse_layer2_texture|Detail Diffuse(Green)|texture|\n|diffuse_layer3_texture|Detail Diffuse(Blue)|texture|\n|red_detail_scale|Detail Texture Scale(Red)|vector3|\n|red_detail_intensity|Detail Texture Intensity(Red)|scalar|\n|green_detail_scale|Detail Texture Scale(Green)|vector3|\n|green_detail_intensity|Detail Texture Intensity(Green)|scalar|\n|blue_detail_scale|Detail Texture Scale(Blue)|vector3|\n|blue_detail_intensity|Detail Texture Intensity(Blue)|scalar|."),(0,n.kt)("h3",{id:"technique-ambient"},"Technique ",(0,n.kt)("inlineCode",{parentName:"h3"},"ambient")),(0,n.kt)("h3",{id:"render-states"},"Render States"),(0,n.kt)("p",null,"More info can be found on the ",(0,n.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 1,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 2,\n    D3DRS_COLORWRITEENABLE = 15,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 961656599,\n    D3DRS_SLOPESCALEDEPTHBIAS = 1075838976,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,n.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,n.kt)("p",null,"More info can be found on the ",(0,n.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,n.kt)("h3",{id:"shaders"},"Shaders"),(0,n.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x4 view_proj_matrix : register(vs_3_0, c0);\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float texcoord1 : TEXCOORD1;\n};\n\nVertexMain_Output VertexMain(float4 position : POSITION)\n{\n    VertexMain_Output o;\n    float temp0;\n    // dcl_position v0\n    // dcl_position o0\n    // dcl_texcoord1 o1.x\n    // dp4 o0.x, v0, c0\n    o.position.x = dot(position, (view_proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, v0, c1\n    o.position.y = dot(position, (view_proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.w, v0, c3\n    o.position.w = dot(position, (view_proj_matrix._m03_m13_m23_m33));\n    // dp4 r0.x, v0, c2\n    temp0.x = dot(position, (view_proj_matrix._m02_m12_m22_m32));\n    // mov o0.z, r0.x\n    o.position.z = temp0.x;\n    // mov o1.x, r0.x\n    o.texcoord1 = temp0.x;\n    // \n\n    return o;\n}\n")),(0,n.kt)("p",null,"Decompiled by DXDecompiler."),(0,n.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-hlsl"},"float4 PixelMain(float texcoord1 : TEXCOORD1) : COLOR\n{\n    float4 out_color;\n    // def c0, 1, 0, 0, 0\n    // dcl_texcoord1 v0.x\n    // mul oC0, c0.xyyy, v0.x\n    out_color = float4(1, 0, 0, 0) * texcoord1.x;\n    // \n\n    return out_color;\n}\n")),(0,n.kt)("p",null,"Decompiled by DXDecompiler."))}D.isMDXComponent=!0}}]);