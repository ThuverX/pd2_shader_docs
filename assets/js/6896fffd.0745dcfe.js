"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[67902],{3905:(e,t,n)=>{n.d(t,{Zo:()=>_,kt:()=>x});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function m(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=r.createContext({}),l=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},_=function(e){var t=l(e.components);return r.createElement(d.Provider,{value:t},e.children)},i="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},D=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,d=e.parentName,_=m(e,["components","mdxType","originalType","parentName"]),i=l(n),D=o,x=i["".concat(d,".").concat(D)]||i[D]||c[D]||a;return n?r.createElement(x,p(p({ref:t},_),{},{components:n})):r.createElement(x,p({ref:t},_))}));function x(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,p=new Array(a);p[0]=D;var m={};for(var d in t)hasOwnProperty.call(t,d)&&(m[d]=t[d]);m.originalType=e,m[i]="string"==typeof e?e:o,p[1]=m;for(var l=2;l<a;l++)p[l]=n[l];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}D.displayName="MDXCreateElement"},76716:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>c,frontMatter:()=>a,metadata:()=>m,toc:()=>l});var r=n(87462),o=(n(67294),n(3905));const a={id:0x18ebf6f4b92d3500,title:"Decal Default Diffuse Texture Normalmap Opacity Texture Simple Tint"},p="Decal Default Diffuse Texture Normalmap Opacity Texture Simple Tint",m={unversionedId:"Generated/Shaders/Base/[400-500]/1795800407376475400",id:"Generated/Shaders/Base/[400-500]/1795800407376475400",title:"Decal Default Diffuse Texture Normalmap Opacity Texture Simple Tint",description:"(decalDIFFUSETEXTUREOPACITYTEXTURE:SIMPLE_TINT, 0x18ebf6f4b92d3481)",source:"@site/docs/Generated/Shaders/Base/[400-500]/0x18ebf6f4b92d3481.mdx",sourceDirName:"Generated/Shaders/Base/[400-500]",slug:"/Generated/Shaders/Base/[400-500]/1795800407376475400",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[400-500]/1795800407376475400",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/docs/Generated/Shaders/Base/[400-500]/0x18ebf6f4b92d3481.mdx",tags:[],version:"current",frontMatter:{id:"1795800407376475400",title:"Decal Default Diffuse Texture Normalmap Opacity Texture Simple Tint"},sidebar:"docsSidebar",previous:{title:"Generic Shadow Caster Ati Contour Cube Environment Mapping Diffuse Texture Normalmap Rl Players",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[400-500]/1794163132176464600"},next:{title:"Generic Shadow Caster Cube Environment Mapping Water Diffuse Texture Normalmap Nvidia Rl Bigprops Water Big",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[400-500]/1804573069208884700"}},d={},l=[{value:"Technique <code>deferred_semi_transparent_albedo</code>",id:"technique-deferred_semi_transparent_albedo",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Sampler 1",id:"sampler-1",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4},{value:"Technique <code>deferred_semi_transparent_normal</code>",id:"technique-deferred_semi_transparent_normal",level:3},{value:"Render States",id:"render-states-1",level:3},{value:"Sampler States",id:"sampler-states-1",level:3},{value:"Sampler 0",id:"sampler-0-1",level:4},{value:"Sampler 1",id:"sampler-1-1",level:4},{value:"Shaders",id:"shaders-1",level:3},{value:"Vertex Shader",id:"vertex-shader-1",level:4},{value:"Pixel Shader",id:"pixel-shader-1",level:4}],_={toc:l},i="wrapper";function c(e){let{components:t,...n}=e;return(0,o.kt)(i,(0,r.Z)({},_,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"decal-default-diffuse-texture-normalmap-opacity-texture-simple-tint"},"Decal Default Diffuse Texture Normalmap Opacity Texture Simple Tint"),(0,o.kt)("p",null,"(",(0,o.kt)("inlineCode",{parentName:"p"},"decal:default:DIFFUSE_TEXTURE:NORMALMAP:OPACITY_TEXTURE:SIMPLE_TINT"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"0x18ebf6f4b92d3481"),")"),(0,o.kt)("h3",{id:"technique-deferred_semi_transparent_albedo"},"Technique ",(0,o.kt)("inlineCode",{parentName:"h3"},"deferred_semi_transparent_albedo")),(0,o.kt)("h3",{id:"render-states"},"Render States"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 0,\n    D3DRS_ALPHABLENDENABLE = 1,\n    D3DRS_CULLMODE = 2,\n    D3DRS_COLORWRITEENABLE = 7,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n    D3DRS_BLENDOP = 1,\n    D3DRS_DESTBLEND = 6,\n    D3DRS_SRCBLEND = 5,\n};\n")),(0,o.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,o.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,o.kt)("h4",{id:"sampler-1"},"Sampler 1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,o.kt)("h3",{id:"shaders"},"Shaders"),(0,o.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x4 proj_matrix : register(vs_3_0, c4);\ncolumn_major float4x4 world_view_matrix : register(vs_3_0, c0);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 texcoord : TEXCOORD;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float2 texcoord : TEXCOORD;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float4 temp0;\n    // def c8, 0.0004, 9.995, 0.005, 0\n    // dcl_position v0\n    // dcl_texcoord v1\n    // dcl_position o0\n    // dcl_texcoord o1.xy\n    // dp4 r0.x, v0, c2\n    temp0.x = dot(i.position, (world_view_matrix._m02_m12_m22_m32));\n    // mul_sat r0.y, r0.x, c8.x\n    temp0.y = saturate(temp0.x * float1(0.0004));\n    // mad r0.y, r0.y, c8.y, c8.z\n    temp0.y = temp0.y * float1(9.995) + float1(0.005);\n    // add r0.z, -r0.y, r0.x\n    temp0.z = -temp0.y + temp0.x;\n    // dp4 r0.x, v0, c0\n    temp0.x = dot(i.position, (world_view_matrix._m00_m10_m20_m30));\n    // dp4 r0.y, v0, c1\n    temp0.y = dot(i.position, (world_view_matrix._m01_m11_m21_m31));\n    // dp4 r0.w, v0, c3\n    temp0.w = dot(i.position, (world_view_matrix._m03_m13_m23_m33));\n    // dp4 o0.x, r0, c4\n    o.position.x = dot(temp0, (proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, r0, c5\n    o.position.y = dot(temp0, (proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.z, r0, c6\n    o.position.z = dot(temp0, (proj_matrix._m02_m12_m22_m32));\n    // dp4 o0.w, r0, c7\n    o.position.w = dot(temp0, (proj_matrix._m03_m13_m23_m33));\n    // mov o1.xy, v1\n    o.texcoord = i.texcoord;\n    // \n\n    return o;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."),(0,o.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"sampler2D diffuse_texture : register(ps_3_0, s0);\nsampler2D opacity_texture : register(ps_3_0, s1);\nfloat3 ref_tint_color : register(ps_3_0, c0);\nfloat4 PixelMain(float2 texcoord : TEXCOORD) : COLOR\n{\n    float4 out_color;\n    float4 temp0;\n    // dcl_texcoord v0.xy\n    // dcl_2d s0\n    // dcl_2d s1\n    // texld_pp r0, v0, s0\n    temp0 = /* not implemented _pp modifier */ tex2D(diffuse_texture, texcoord.xy);\n    // mul r0.xyz, r0, c0\n    temp0.xyz = temp0.xyz * ref_tint_color.xyz;\n    // add_pp oC0.xyz, r0, r0\n    out_color.xyz = /* not implemented _pp modifier */ temp0.xyz + temp0.xyz;\n    // texld_pp r0, v0, s1\n    temp0 = /* not implemented _pp modifier */ tex2D(opacity_texture, texcoord.xy);\n    // mov_pp oC0.w, r0.x\n    out_color.w = /* not implemented _pp modifier */ temp0.x;\n    // \n\n    return out_color;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."),(0,o.kt)("h3",{id:"technique-deferred_semi_transparent_normal"},"Technique ",(0,o.kt)("inlineCode",{parentName:"h3"},"deferred_semi_transparent_normal")),(0,o.kt)("h3",{id:"render-states-1"},"Render States"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 0,\n    D3DRS_ALPHABLENDENABLE = 1,\n    D3DRS_CULLMODE = 2,\n    D3DRS_COLORWRITEENABLE = 7,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n    D3DRS_BLENDOP = 1,\n    D3DRS_DESTBLEND = 6,\n    D3DRS_SRCBLEND = 5,\n};\n")),(0,o.kt)("h3",{id:"sampler-states-1"},"Sampler States"),(0,o.kt)("h4",{id:"sampler-0-1"},"Sampler 0"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,o.kt)("h4",{id:"sampler-1-1"},"Sampler 1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,o.kt)("h3",{id:"shaders-1"},"Shaders"),(0,o.kt)("h4",{id:"vertex-shader-1"},"Vertex Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x4 proj_matrix : register(vs_3_0, c4);\ncolumn_major float4x4 world_matrix : register(vs_3_0, c8);\ncolumn_major float4x4 world_view_matrix : register(vs_3_0, c0);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 normal : NORMAL;\n    float4 texcoord : TEXCOORD;\n    float4 tangent : TANGENT;\n    float4 binormal : BINORMAL;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float2 texcoord : TEXCOORD;\n    float3 texcoord2 : TEXCOORD2;\n    float3 texcoord3 : TEXCOORD3;\n    float3 texcoord4 : TEXCOORD4;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float4 temp0;\n    // def c11, 2, -1, 0.0004, 0\n    // def c12, 9.995, 0.005, 0, 0\n    // dcl_position v0\n    // dcl_normal v1\n    // dcl_texcoord v2\n    // dcl_tangent v3\n    // dcl_binormal v4\n    // dcl_position o0\n    // dcl_texcoord o1.xy\n    // dcl_texcoord2 o2.xyz\n    // dcl_texcoord3 o3.xyz\n    // dcl_texcoord4 o4.xyz\n    // dp4 r0.x, v0, c2\n    temp0.x = dot(i.position, (world_view_matrix._m02_m12_m22_m32));\n    // mul_sat r0.y, r0.x, c11.z\n    temp0.y = saturate(temp0.x * float1(0.0004));\n    // mad r0.y, r0.y, c12.x, c12.y\n    temp0.y = temp0.y * float1(9.995) + float1(0.005);\n    // add r0.z, -r0.y, r0.x\n    temp0.z = -temp0.y + temp0.x;\n    // dp4 r0.x, v0, c0\n    temp0.x = dot(i.position, (world_view_matrix._m00_m10_m20_m30));\n    // dp4 r0.y, v0, c1\n    temp0.y = dot(i.position, (world_view_matrix._m01_m11_m21_m31));\n    // dp4 r0.w, v0, c3\n    temp0.w = dot(i.position, (world_view_matrix._m03_m13_m23_m33));\n    // dp4 o0.x, r0, c4\n    o.position.x = dot(temp0, (proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, r0, c5\n    o.position.y = dot(temp0, (proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.z, r0, c6\n    o.position.z = dot(temp0, (proj_matrix._m02_m12_m22_m32));\n    // dp4 o0.w, r0, c7\n    o.position.w = dot(temp0, (proj_matrix._m03_m13_m23_m33));\n    // mad r0.xyz, v3, c11.x, c11.y\n    temp0.xyz = i.tangent.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o2.x, r0, c8\n    o.texcoord2.x = dot(temp0.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o3.x, r0, c9\n    o.texcoord3.x = dot(temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o4.x, r0, c10\n    o.texcoord4.x = dot(temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mad r0.xyz, v4, c11.x, c11.y\n    temp0.xyz = i.binormal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o2.y, -r0, c8\n    o.texcoord2.y = dot(-temp0.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o3.y, -r0, c9\n    o.texcoord3.y = dot(-temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o4.y, -r0, c10\n    o.texcoord4.y = dot(-temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mad r0.xyz, v1, c11.x, c11.y\n    temp0.xyz = i.normal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o2.z, r0, c8\n    o.texcoord2.z = dot(temp0.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o3.z, r0, c9\n    o.texcoord3.z = dot(temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o4.z, r0, c10\n    o.texcoord4.z = dot(temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mov o1.xy, v2\n    o.texcoord = i.texcoord;\n    // \n\n    return o;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."),(0,o.kt)("h4",{id:"pixel-shader-1"},"Pixel Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"sampler2D bump_normal_texture : register(ps_3_0, s1);\nsampler2D opacity_texture : register(ps_3_0, s0);\nstruct PixelMain_Input\n{\n    float2 texcoord : TEXCOORD;\n    float3 texcoord2 : TEXCOORD2;\n    float3 texcoord3 : TEXCOORD3;\n    float3 texcoord4 : TEXCOORD4;\n};\n\nfloat4 PixelMain(PixelMain_Input i) : COLOR\n{\n    float4 out_color;\n    float4 temp0;\n    float3 temp1;\n    // def c0, -0.5, 1, 0.5, 0\n    // dcl_texcoord v0.xy\n    // dcl_texcoord2 v1.xyz\n    // dcl_texcoord3 v2.xyz\n    // dcl_texcoord4 v3.xyz\n    // dcl_2d s0\n    // dcl_2d s1\n    // texld_pp r0, v0, s1\n    temp0 = /* not implemented _pp modifier */ tex2D(bump_normal_texture, i.texcoord.xy);\n    // add_pp r0.xy, r0.wyzw, c0.x\n    temp0.xy = /* not implemented _pp modifier */ temp0.wy + float2(-0.5, -0.5);\n    // add_pp r0.xy, r0, r0\n    temp0.xy = /* not implemented _pp modifier */ temp0.xy + temp0.xy;\n    // mul_pp r0.w, r0.x, r0.x\n    temp0.w = /* not implemented _pp modifier */ temp0.x * temp0.x;\n    // mad_pp r0.w, r0.y, r0.y, -r0.w\n    temp0.w = /* not implemented _pp modifier */ temp0.y * temp0.y + -temp0.w;\n    // add_pp r0.w, -r0.w, c0.y\n    temp0.w = /* not implemented _pp modifier */ -temp0.w + float1(1);\n    // rsq_pp r0.w, r0.w\n    temp0.w = /* not implemented _pp modifier */ 1 / sqrt(temp0.w);\n    // rcp_pp r0.z, r0.w\n    temp0.z = /* not implemented _pp modifier */ 1.0f / temp0.w;\n    // dp3 r1.x, r0, v1\n    temp1.x = dot(temp0.xyz, i.texcoord2.xyz);\n    // dp3 r1.y, r0, v2\n    temp1.y = dot(temp0.xyz, i.texcoord3.xyz);\n    // dp3 r1.z, r0, v3\n    temp1.z = dot(temp0.xyz, i.texcoord4.xyz);\n    // nrm_pp r0.xyz, r1\n    temp0.xyz = /* not implemented _pp modifier */ normalize(temp1.xyz).xyz;\n    // mad_pp oC0.xyz, r0, c0.z, c0.z\n    out_color.xyz = /* not implemented _pp modifier */ temp0.xyz * float3(0.5, 0.5, 0.5) + float3(0.5, 0.5, 0.5);\n    // texld_pp r0, v0, s0\n    temp0 = /* not implemented _pp modifier */ tex2D(opacity_texture, i.texcoord.xy);\n    // mov_pp oC0.w, r0.y\n    out_color.w = /* not implemented _pp modifier */ temp0.y;\n    // \n\n    return out_color;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."))}c.isMDXComponent=!0}}]);