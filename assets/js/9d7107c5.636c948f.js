"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[6056],{3905:(e,t,n)=>{n.d(t,{Zo:()=>i,kt:()=>x});var r=n(7294);function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){p(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function m(e,t){if(null==e)return{};var n,r,p=function(e,t){if(null==e)return{};var n,r,p={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(p[n]=e[n]);return p}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(p[n]=e[n])}return p}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},i=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},_="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,p=e.mdxType,o=e.originalType,l=e.parentName,i=m(e,["components","mdxType","originalType","parentName"]),_=d(n),s=p,x=_["".concat(l,".").concat(s)]||_[s]||c[s]||o;return n?r.createElement(x,a(a({ref:t},i),{},{components:n})):r.createElement(x,a({ref:t},i))}));function x(e,t){var n=arguments,p=t&&t.mdxType;if("string"==typeof e||p){var o=n.length,a=new Array(o);a[0]=s;var m={};for(var l in t)hasOwnProperty.call(t,l)&&(m[l]=t[l]);m.originalType=e,m[_]="string"==typeof e?e:p,a[1]=m;for(var d=2;d<o;d++)a[d]=n[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},8420:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>m,toc:()=>d});var r=n(7462),p=(n(7294),n(3905));const o={id:0x397081f188edce00,title:"Dof Apply Default"},a="Dof Apply Default",m={unversionedId:"Generated/Shaders/Filters/4138950931937873400",id:"Generated/Shaders/Filters/4138950931937873400",title:"Dof Apply Default",description:"(dof_apply:default, 0x397081f188edcd2b)",source:"@site/docs/Generated/Shaders/Filters/0x397081f188edcd2b.mdx",sourceDirName:"Generated/Shaders/Filters",slug:"/Generated/Shaders/Filters/4138950931937873400",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Filters/4138950931937873400",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/Generated/Shaders/Filters/0x397081f188edcd2b.mdx",tags:[],version:"current",frontMatter:{id:"4138950931937873400",title:"Dof Apply Default"},sidebar:"docsSidebar",previous:{title:"Depth Visualization Default",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Filters/3728860358607013000"},next:{title:"Super Blur Apply Default",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Filters/4339239144983621600"}},l={},d=[{value:"Technique <code>ambient</code>",id:"technique-ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Sampler 1",id:"sampler-1",level:4},{value:"Sampler 2",id:"sampler-2",level:4},{value:"Sampler 3",id:"sampler-3",level:4},{value:"Sampler 4",id:"sampler-4",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],i={toc:d},_="wrapper";function c(e){let{components:t,...n}=e;return(0,p.kt)(_,(0,r.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"dof-apply-default"},"Dof Apply Default"),(0,p.kt)("p",null,"(",(0,p.kt)("inlineCode",{parentName:"p"},"dof_apply:default"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"0x397081f188edcd2b"),")"),(0,p.kt)("p",null,"This template is referenced 1 time by ",(0,p.kt)("a",{parentName:"p",href:"/docs/Generated/Render%20Templates/filters.render_template_database#dof-apply"},"dof_apply"),"."),(0,p.kt)("h3",{id:"technique-ambient"},"Technique ",(0,p.kt)("inlineCode",{parentName:"h3"},"ambient")),(0,p.kt)("h3",{id:"render-states"},"Render States"),(0,p.kt)("p",null,"More info can be found on the ",(0,p.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 0,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 0,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 1,\n    D3DRS_COLORWRITEENABLE = 15,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,p.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,p.kt)("p",null,"More info can be found on the ",(0,p.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,p.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 2,\n    D3DSAMP_MINFILTER = 2,\n    D3DSAMP_MIPFILTER = 2,\n};\n")),(0,p.kt)("h4",{id:"sampler-1"},"Sampler 1"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 1,\n    D3DSAMP_MINFILTER = 1,\n    D3DSAMP_MIPFILTER = 1,\n};\n")),(0,p.kt)("h4",{id:"sampler-2"},"Sampler 2"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 1,\n    D3DSAMP_MINFILTER = 1,\n    D3DSAMP_MIPFILTER = 1,\n};\n")),(0,p.kt)("h4",{id:"sampler-3"},"Sampler 3"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 2,\n    D3DSAMP_MINFILTER = 2,\n    D3DSAMP_MIPFILTER = 2,\n};\n")),(0,p.kt)("h4",{id:"sampler-4"},"Sampler 4"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 2,\n    D3DSAMP_MINFILTER = 2,\n    D3DSAMP_MIPFILTER = 2,\n};\n")),(0,p.kt)("h3",{id:"shaders"},"Shaders"),(0,p.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-hlsl"},"float ref_far_focus_distance_min : register(vs_3_0, c6);\nfloat ref_near_focus_distance_max : register(vs_3_0, c4);\nfloat ref_near_focus_distance_min : register(vs_3_0, c5);\ncolumn_major float4x4 view_proj_matrix : register(vs_3_0, c0);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 texcoord : TEXCOORD;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float2 texcoord : TEXCOORD;\n    float4 texcoord1 : TEXCOORD1;\n    float4 texcoord2 : TEXCOORD2;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float2 temp0, temp1;\n    // def c7, 1, -1, 0, 0\n    // dcl_position v0\n    // dcl_texcoord v1\n    // dcl_position o0\n    // dcl_texcoord o1.xy\n    // dcl_texcoord1 o2\n    // dcl_texcoord2 o3\n    // dp4 o0.x, v0, c0\n    o.position.x = dot(i.position, (view_proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, v0, c1\n    o.position.y = dot(i.position, (view_proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.w, v0, c3\n    o.position.w = dot(i.position, (view_proj_matrix._m03_m13_m23_m33));\n    // rcp r0.x, c4.x\n    temp0.x = 1.0f / ref_near_focus_distance_max.x;\n    // mov o2.x, -r0.x\n    o.texcoord1.x = -temp0.x;\n    // rcp r0.x, c5.x\n    temp0.x = 1.0f / ref_near_focus_distance_min.x;\n    // mov o2.y, -r0.x\n    o.texcoord1.y = -temp0.x;\n    // mov r1.xy, c7\n    temp1.xy = float2(1, -1);\n    // add r0.y, r1.x, -c6.x\n    temp0.y = temp1.x + -ref_far_focus_distance_min.x;\n    // mul o3.y, r0.x, r0.y\n    o.texcoord2.y = temp0.x * temp0.y;\n    // add r0.x, r1.y, c6.x\n    temp0.x = temp1.y + ref_far_focus_distance_min.x;\n    // rcp r0.y, c6.x\n    temp0.y = 1.0f / ref_far_focus_distance_min.x;\n    // mul o3.w, r0.y, r0.x\n    o.texcoord2.w = temp0.y * temp0.x;\n    // mul r0.xy, r0.y, c7.yxzw\n    temp0.xy = temp0.yy * float2(-1, 1);\n    // mov o0.z, c7.x\n    o.position.z = float1(1);\n    // mov o1.xy, v1\n    o.texcoord = i.texcoord;\n    // mov o2.zw, r0.xyxy\n    o.texcoord1.zw = temp0.xy;\n    // mad o3.xz, r0.y, c7.zyxw, c7\n    o.texcoord2.xz = temp0.yy * float2(0, 1) + float2(1, 0);\n    // \n\n    return o;\n}\n")),(0,p.kt)("p",null,"Decompiled by DXDecompiler."),(0,p.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-hlsl"},"sampler2D depth : register(ps_3_0, s2);\nsampler2D diffuse_texture : register(ps_3_0, s0);\nsampler2D filter_color_texture : register(ps_3_0, s3);\nsampler2D opacity_texture : register(ps_3_0, s1);\nfloat ref_clamp : register(ps_3_0, c1);\nfloat ref_far_focus_distance_max : register(ps_3_0, c3);\nfloat ref_far_focus_distance_min : register(ps_3_0, c2);\nfloat3 render_target_size : register(ps_3_0, c0);\nfloat2 render_target_texel_offset : register(ps_3_0, c4);\nsampler2D self_illumination_texture : register(ps_3_0, s4);\nfloat4 PixelMain(float2 texcoord : TEXCOORD) : COLOR\n{\n    float4 out_color;\n    float4 temp0, temp1, temp2, temp3;\n    float2 temp4;\n    float3 temp5;\n    // def c5, 3, 0, 1, 0.9411765\n    // def c6, 1, 1.0769231, 3.3333333, -2.3333333\n    // def c7, -20, -1.5384616, -3.3333333, 3.3333333\n    // def c8, 0.5, -1.5, -0.5, 0.23529412\n    // dcl_texcoord v0.xy\n    // dcl_2d s0\n    // dcl_2d s1\n    // dcl_2d s2\n    // dcl_2d s3\n    // dcl_2d s4\n    // rcp r0.x, c0.x\n    temp0.x = 1.0f / render_target_size.x;\n    // rcp r0.y, c0.y\n    temp0.y = 1.0f / render_target_size.y;\n    // mad r1, r0.xyxy, c8.xyyz, v0.xyxy\n    temp1 = temp0.xyxy * float4(0.5, -1.5, -1.5, -0.5) + texcoord.xyxy;\n    // mad r0, r0.xyxy, -c8.xyyz, v0.xyxy\n    temp0 = temp0.xyxy * float4(-0.5, 1.5, 1.5, 0.5) + texcoord.xyxy;\n    // texld r2, r1.zwzw, s0\n    temp2 = tex2D(diffuse_texture, temp1.zw);\n    // texld r1, r1, s0\n    temp1 = tex2D(diffuse_texture, temp1.xy);\n    // mul r2.xyz, r2, c8.w\n    temp2.xyz = temp2.xyz * float3(0.23529412, 0.23529412, 0.23529412);\n    // mad_pp r1.xyz, r1, c8.w, r2\n    temp1.xyz = /* not implemented _pp modifier */ temp1.xyz * float3(0.23529412, 0.23529412, 0.23529412) + temp2.xyz;\n    // texld r2, r0, s0\n    temp2 = tex2D(diffuse_texture, temp0.xy);\n    // texld r0, r0.zwzw, s0\n    temp0 = tex2D(diffuse_texture, temp0.zw);\n    // mad_pp r1.xyz, r2, c8.w, r1\n    temp1.xyz = /* not implemented _pp modifier */ temp2.xyz * float3(0.23529412, 0.23529412, 0.23529412) + temp1.xyz;\n    // mad_pp r0.xyz, r0, c8.w, r1\n    temp0.xyz = /* not implemented _pp modifier */ temp0.xyz * float3(0.23529412, 0.23529412, 0.23529412) + temp1.xyz;\n    // rcp r0.w, c3.x\n    temp0.w = 1.0f / ref_far_focus_distance_max.x;\n    // mul r1.x, r0.w, -c2.x\n    temp1.x = temp0.w * -ref_far_focus_distance_min.x;\n    // texld r2, v0, s2\n    temp2 = tex2D(depth, texcoord.xy);\n    // mad_sat_pp r0.w, r0.w, r2.x, r1.x\n    ;// error\n    // mul_pp r0.w, r0.w, c8.x\n    temp0.w = /* not implemented _pp modifier */ temp0.w * float1(0.5);\n    // mov r1.x, c5.x\n    temp1.x = float1(3);\n    // mad r1.xy, c4, r1.x, v0\n    temp1.xy = render_target_texel_offset.xy * temp1.xx + texcoord.xy;\n    // texld_pp r3, r1, s4\n    temp3 = /* not implemented _pp modifier */ tex2D(self_illumination_texture, temp1.xy);\n    // texld_pp r1, r1, s3\n    temp1 = /* not implemented _pp modifier */ tex2D(filter_color_texture, temp1.xy);\n    // max_pp r1.w, r3.w, r0.w\n    temp1.w = /* not implemented _pp modifier */ max(temp3.w, temp0.w);\n    // cmp_pp r0.w, -r2_abs.x, r3.w, r1.w\n    temp0.w = /* not implemented _pp modifier */ (-abs(temp2).x >= 0) ? temp3.w : temp1.w;\n    // max_pp r1.w, r0.w, c5.y\n    temp1.w = /* not implemented _pp modifier */ max(temp0.w, float1(0));\n    // min_pp r0.w, c1.x, r1.w\n    temp0.w = /* not implemented _pp modifier */ min(ref_clamp.x, temp1.w);\n    // mov r2, c7\n    temp2 = float4(-20, -1.5384616, -3.3333333, 3.3333333);\n    // mad_sat_pp r2, r0.w, r2, c6\n    ;// error\n    // add_pp r4.xy, -r2, c5.z\n    temp4.xy = /* not implemented _pp modifier */ -temp2.xy + float2(1, 1);\n    // min_pp r5.xy, r4, r2.yzzw\n    temp5.xy = /* not implemented _pp modifier */ min(temp4.xy, temp2.yz);\n    // mul_pp r2.xyz, r3, r5.y\n    temp2.xyz = /* not implemented _pp modifier */ temp3.xyz * temp5.yyy;\n    // mad_pp r0.xyz, r5.x, r0, r2\n    temp0.xyz = /* not implemented _pp modifier */ temp5.xxx * temp0.xyz + temp2.xyz;\n    // mad_pp r0.xyz, r2.w, r1, r0\n    temp0.xyz = /* not implemented _pp modifier */ temp2.www * temp1.xyz + temp0.xyz;\n    // mov_pp r5.z, r2.w\n    temp5.z = /* not implemented _pp modifier */ temp2.w;\n    // dp3_pp r0.w, r5.yzxw, c5.zzww\n    temp0.w = /* not implemented _pp modifier */ dot(temp5.yzx, float3(1, 1, 0.9411765));\n    // add_pp r0.w, -r0.w, c5.z\n    temp0.w = /* not implemented _pp modifier */ -temp0.w + float1(1);\n    // texld r1, v0, s1\n    temp1 = tex2D(opacity_texture, texcoord.xy);\n    // mad oC0.xyz, r1, r0.w, r0\n    out_color.xyz = temp1.xyz * temp0.www + temp0.xyz;\n    // mov oC0.w, c5.z\n    out_color.w = float1(1);\n    // \n\n    return out_color;\n}\n")),(0,p.kt)("p",null,"Decompiled by DXDecompiler."))}c.isMDXComponent=!0}}]);