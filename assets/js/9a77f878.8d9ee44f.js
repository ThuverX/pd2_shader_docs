"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[930],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>z});var m=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(e);t&&(m=m.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,m)}return r}function x(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,m,n=function(e,t){if(null==e)return{};var r,m,n={},p=Object.keys(e);for(m=0;m<p.length;m++)r=p[m],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(m=0;m<p.length;m++)r=p[m],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var o=m.createContext({}),y=function(e){var t=m.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):x(x({},t),e)),r},d=function(e){var t=y(e.components);return m.createElement(o.Provider,{value:t},e.children)},l="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return m.createElement(m.Fragment,{},t)}},s=m.forwardRef((function(e,t){var r=e.components,n=e.mdxType,p=e.originalType,o=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),l=y(r),s=n,z=l["".concat(o,".").concat(s)]||l[s]||c[s]||p;return r?m.createElement(z,x(x({ref:t},d),{},{components:r})):m.createElement(z,x({ref:t},d))}));function z(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var p=r.length,x=new Array(p);x[0]=s;var a={};for(var o in t)hasOwnProperty.call(t,o)&&(a[o]=t[o]);a.originalType=e,a[l]="string"==typeof e?e:n,x[1]=a;for(var y=2;y<p;y++)x[y]=r[y];return m.createElement.apply(null,x)}return m.createElement.apply(null,r)}s.displayName="MDXCreateElement"},8463:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>x,default:()=>c,frontMatter:()=>p,metadata:()=>a,toc:()=>y});var m=r(7462),n=(r(7294),r(3905));const p={id:0xe74ee320ebd89800,title:"Post Fxaa Default"},x="Post Fxaa Default",a={unversionedId:"Generated/Shaders/Post/16667509001480083000",id:"Generated/Shaders/Post/16667509001480083000",title:"Post Fxaa Default",description:"(post_FXAA:default, 0xe74ee320ebd89534)",source:"@site/docs/Generated/Shaders/Post/0xe74ee320ebd89534.mdx",sourceDirName:"Generated/Shaders/Post",slug:"/Generated/Shaders/Post/16667509001480083000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Post/16667509001480083000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/Generated/Shaders/Post/0xe74ee320ebd89534.mdx",tags:[],version:"current",frontMatter:{id:"16667509001480083000",title:"Post Fxaa Default"},sidebar:"docsSidebar",previous:{title:"Post Lex Prepare Default",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Post/16604228519914527000"},next:{title:"Post Gamma Default",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Post/16834969369898710000"}},o={},y=[{value:"Technique <code>ambient</code>",id:"technique-ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],d={toc:y},l="wrapper";function c(e){let{components:t,...r}=e;return(0,n.kt)(l,(0,m.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"post-fxaa-default"},"Post Fxaa Default"),(0,n.kt)("p",null,"(",(0,n.kt)("inlineCode",{parentName:"p"},"post_FXAA:default"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"0xe74ee320ebd89534"),")"),(0,n.kt)("p",null,"This template is referenced 1 time by ",(0,n.kt)("a",{parentName:"p",href:"/docs/Generated/Render%20Templates/post.render_template_database#post-fxaa"},"post_FXAA"),"."),(0,n.kt)("h3",{id:"technique-ambient"},"Technique ",(0,n.kt)("inlineCode",{parentName:"h3"},"ambient")),(0,n.kt)("h3",{id:"render-states"},"Render States"),(0,n.kt)("p",null,"More info can be found on the ",(0,n.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 0,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 0,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 1,\n    D3DRS_COLORWRITEENABLE = 7,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,n.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,n.kt)("p",null,"More info can be found on the ",(0,n.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,n.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 2,\n    D3DSAMP_MINFILTER = 2,\n    D3DSAMP_MIPFILTER = 2,\n};\n")),(0,n.kt)("h3",{id:"shaders"},"Shaders"),(0,n.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x4 view_proj_matrix : register(vs_3_0, c0);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 texcoord : TEXCOORD;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float2 texcoord : TEXCOORD;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    // def c4, 1, 0, 0, 0\n    // dcl_position v0\n    // dcl_texcoord v1\n    // dcl_position o0\n    // dcl_texcoord o1.xy\n    // dp4 o0.x, v0, c0\n    o.position.x = dot(i.position, (view_proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, v0, c1\n    o.position.y = dot(i.position, (view_proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.w, v0, c3\n    o.position.w = dot(i.position, (view_proj_matrix._m03_m13_m23_m33));\n    // mov o0.z, c4.x\n    o.position.z = float1(1);\n    // mov o1.xy, v1\n    o.texcoord = i.texcoord;\n    // \n\n    return o;\n}\n")),(0,n.kt)("p",null,"Decompiled by DXDecompiler."),(0,n.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-hlsl"},"sampler2D diffuse_texture : register(ps_3_0, s0);\nfloat2 render_target_size : register(ps_3_0, c0);\nfloat4 PixelMain(float2 texcoord : TEXCOORD) : COLOR\n{\n    float4 out_color;\n    float4 temp0, temp1, temp2, temp3, temp4, temp5, temp6, temp7, temp8, temp9;\n    // def c1, 1, 0, -1, 0.166\n    // def c2, -0.0833, -2, 2, 0.083333336\n    // def c3, 0.5, -2, 3, 0.25\n    // def c4, 1.5, 4, 12, 0.75\n    // dcl_texcoord v0.xy\n    // dcl_2d s0\n    // rcp r0.x, c0.x\n    temp0.x = 1.0f / render_target_size.x;\n    // rcp r0.y, c0.y\n    temp0.y = 1.0f / render_target_size.y;\n    // mul r1, c1.xxyy, v0.xyxx\n    temp1 = float4(1, 1, 0, 0) * texcoord.xyxx;\n    // texldl r1, r1, s0\n    temp1 = tex2Dlod(diffuse_texture, temp1);\n    // mov r0.z, r0.y\n    temp0.z = temp0.y;\n    // add r2.y, r0.z, v0.y\n    temp2.y = temp0.z + texcoord.y;\n    // mul r2.zw, c1.xyxy, v0.x\n    temp2.zw = float2(1, 0) * texcoord.xx;\n    // texldl r2, r2.zyww, s0\n    temp2 = tex2Dlod(diffuse_texture, temp2.zyww);\n    // mad r3.xy, r0, c1, v0\n    temp3.xy = temp0.xy * float2(1, 0) + texcoord.xy;\n    // mov r3.zw, c1.y\n    temp3.zw = float2(0, 0);\n    // texldl r3, r3, s0\n    temp3 = tex2Dlod(diffuse_texture, temp3);\n    // mad r4.y, r0.y, c1.z, v0.y\n    temp4.y = temp0.y * float1(-1) + texcoord.y;\n    // mul r4.zw, c1.xyxy, v0.x\n    temp4.zw = float2(1, 0) * texcoord.xx;\n    // texldl r4, r4.zyww, s0\n    temp4 = tex2Dlod(diffuse_texture, temp4.zyww);\n    // mad r5.xy, r0, c1.zyzw, v0\n    temp5.xy = temp0.xy * float2(-1, 0) + texcoord.xy;\n    // mov r5.zw, c1.y\n    temp5.zw = float2(0, 0);\n    // texldl r5, r5, s0\n    temp5 = tex2Dlod(diffuse_texture, temp5);\n    // max r0.z, r2.y, r1.y\n    temp0.z = max(temp2.y, temp1.y);\n    // min r0.w, r1.y, r2.y\n    temp0.w = min(temp1.y, temp2.y);\n    // max r2.x, r3.y, r0.z\n    temp2.x = max(temp3.y, temp0.z);\n    // min r2.z, r0.w, r3.y\n    temp2.z = min(temp0.w, temp3.y);\n    // max r0.z, r4.y, r5.y\n    temp0.z = max(temp4.y, temp5.y);\n    // min r0.w, r5.y, r4.y\n    temp0.w = min(temp5.y, temp4.y);\n    // max r3.x, r0.z, r2.x\n    temp3.x = max(temp0.z, temp2.x);\n    // min r3.z, r2.z, r0.w\n    temp3.z = min(temp2.z, temp0.w);\n    // mul r0.z, r3.x, c1.w\n    temp0.z = temp3.x * float1(0.166);\n    // add r0.w, -r3.z, r3.x\n    temp0.w = -temp3.z + temp3.x;\n    // min r2.x, -r0.z, c2.x\n    temp2.x = min(-temp0.z, float1(-0.0833));\n    // if_lt r0.w, -r2.x\n    if (temp0.w < -temp2.x) {\n        // mov oC0, r1\n        out_color = temp1;\n        // else\n    } else {\n        // add r6.xy, -r0, v0\n        temp6.xy = -temp0.xy + texcoord.xy;\n        // mov r6.zw, c1.y\n        temp6.zw = float2(0, 0);\n        // texldl r6, r6, s0\n        temp6 = tex2Dlod(diffuse_texture, temp6);\n        // add r7.xy, r0, v0\n        temp7.xy = temp0.xy + texcoord.xy;\n        // mov r7.zw, c1.y\n        temp7.zw = float2(0, 0);\n        // texldl r7, r7, s0\n        temp7 = tex2Dlod(diffuse_texture, temp7);\n        // mad r8.xy, r0, c1.xzzw, v0\n        temp8.xy = temp0.xy * float2(1, -1) + texcoord.xy;\n        // mov r8.zw, c1.y\n        temp8.zw = float2(0, 0);\n        // texldl r8, r8, s0\n        temp8 = tex2Dlod(diffuse_texture, temp8);\n        // mad r9.xy, r0, c1.zxzw, v0\n        temp9.xy = temp0.xy * float2(-1, 1) + texcoord.xy;\n        // mov r9.zw, c1.y\n        temp9.zw = float2(0, 0);\n        // texldl r9, r9, s0\n        temp9 = tex2Dlod(diffuse_texture, temp9);\n        // add r0.z, r2.y, r4.y\n        temp0.z = temp2.y + temp4.y;\n        // add r1.x, r3.y, r5.y\n        temp1.x = temp3.y + temp5.y;\n        // rcp r0.w, r0.w\n        temp0.w = 1.0f / temp0.w;\n        // add r1.z, r0.z, r1.x\n        temp1.z = temp0.z + temp1.x;\n        // mad r0.z, r1.y, c2.y, r0.z\n        temp0.z = temp1.y * float1(-2) + temp0.z;\n        // mad r1.x, r1.y, c2.y, r1.x\n        temp1.x = temp1.y * float1(-2) + temp1.x;\n        // add r1.w, r7.y, r8.y\n        temp1.w = temp7.y + temp8.y;\n        // add r2.x, r6.y, r8.y\n        temp2.x = temp6.y + temp8.y;\n        // mad r2.z, r3.y, c2.y, r1.w\n        temp2.z = temp3.y * float1(-2) + temp1.w;\n        // mad r2.x, r4.y, c2.y, r2.x\n        temp2.x = temp4.y * float1(-2) + temp2.x;\n        // add r2.w, r6.y, r9.y\n        temp2.w = temp6.y + temp9.y;\n        // add r3.x, r7.y, r9.y\n        temp3.x = temp7.y + temp9.y;\n        // mad r0.z, r0_abs.z, c2.z, r2_abs.z\n        temp0.z = abs(temp0).z * float1(2) + abs(temp2).z;\n        // mad r1.x, r1_abs.x, c2.z, r2_abs.x\n        temp1.x = abs(temp1).x * float1(2) + abs(temp2).x;\n        // mad r2.x, r5.y, c2.y, r2.w\n        temp2.x = temp5.y * float1(-2) + temp2.w;\n        // mad r2.z, r2.y, c2.y, r3.x\n        temp2.z = temp2.y * float1(-2) + temp3.x;\n        // add r0.z, r0.z, r2_abs.x\n        temp0.z = temp0.z + abs(temp2).x;\n        // add r1.x, r1.x, r2_abs.z\n        temp1.x = temp1.x + abs(temp2).z;\n        // add r1.w, r1.w, r2.w\n        temp1.w = temp1.w + temp2.w;\n        // add r0.z, r0.z, -r1.x\n        temp0.z = temp0.z + -temp1.x;\n        // mad r1.x, r1.z, c2.z, r1.w\n        temp1.x = temp1.z * float1(2) + temp1.w;\n        // cmp r1.z, r0.z, r4.y, r5.y\n        temp1.z = (temp0.z >= 0) ? temp4.y : temp5.y;\n        // cmp r1.w, r0.z, r2.y, r3.y\n        temp1.w = (temp0.z >= 0) ? temp2.y : temp3.y;\n        // cmp r2.x, r0.z, r0.y, r0.x\n        temp2.x = (temp0.z >= 0) ? temp0.y : temp0.x;\n        // mad r1.x, r1.x, c2.w, -r1.y\n        temp1.x = temp1.x * float1(0.083333336) + -temp1.y;\n        // add r2.yz, -r1.y, r1.xzww\n        temp2.yz = -temp1.yy + temp1.zw;\n        // add r1.zw, r1.y, r1\n        temp1.zw = temp1.yy + temp1.zw;\n        // add r2.w, -r2_abs.z, r2_abs.y\n        temp2.w = -abs(temp2).z + abs(temp2).y;\n        // max r3.x, r2_abs.y, r2_abs.z\n        temp3.x = max(abs(temp2).y, abs(temp2).z);\n        // cmp r2.x, r2.w, -r2.x, r2.x\n        temp2.x = (temp2.w >= 0) ? -temp2.x : temp2.x;\n        // mul_sat r0.w, r0.w, r1_abs.x\n        temp0.w = saturate(temp0.w * abs(temp1).x);\n        // cmp r0.x, r0.z, r0.x, c1.y\n        temp0.x = (temp0.z >= 0) ? temp0.x : float1(0);\n        // cmp r0.y, r0.z, c1.y, r0.y\n        temp0.y = (temp0.z >= 0) ? float1(0) : temp0.y;\n        // mad r2.yz, r2.x, c3.x, v0.xxyw\n        temp2.yz = temp2.xx * float2(0.5, 0.5) + texcoord.xy;\n        // cmp r1.x, r0.z, v0.x, r2.y\n        temp1.x = (temp0.z >= 0) ? texcoord.x : temp2.y;\n        // cmp r2.y, r0.z, r2.z, v0.y\n        temp2.y = (temp0.z >= 0) ? temp2.z : texcoord.y;\n        // add r4.x, -r0.x, r1.x\n        temp4.x = -temp0.x + temp1.x;\n        // add r4.y, -r0.y, r2.y\n        temp4.y = -temp0.y + temp2.y;\n        // add r5.x, r0.x, r1.x\n        temp5.x = temp0.x + temp1.x;\n        // add r5.y, r0.y, r2.y\n        temp5.y = temp0.y + temp2.y;\n        // mad r1.x, r0.w, c3.y, c3.z\n        temp1.x = temp0.w * float1(-2) + float1(3);\n        // mov r4.zw, c1.y\n        temp4.zw = float2(0, 0);\n        // texldl r6, r4, s0\n        temp6 = tex2Dlod(diffuse_texture, temp4);\n        // mul r0.w, r0.w, r0.w\n        temp0.w = temp0.w * temp0.w;\n        // mov r5.zw, c1.y\n        temp5.zw = float2(0, 0);\n        // texldl r7, r5, s0\n        temp7 = tex2Dlod(diffuse_texture, temp5);\n        // cmp r1.z, r2.w, r1.z, r1.w\n        temp1.z = (temp2.w >= 0) ? temp1.z : temp1.w;\n        // mul r1.w, r3.x, c3.w\n        temp1.w = temp3.x * float1(0.25);\n        // mad r2.y, r1.z, -c3.x, r1.y\n        temp2.y = temp1.z * float1(-0.5) + temp1.y;\n        // mul r0.w, r0.w, r1.x\n        temp0.w = temp0.w * temp1.x;\n        // mad r2.z, r1.z, -c3.x, r6.y\n        temp2.z = temp1.z * float1(-0.5) + temp6.y;\n        // mad r2.w, r1.z, -c3.x, r7.y\n        temp2.w = temp1.z * float1(-0.5) + temp7.y;\n        // mad r3.yz, r3.x, -c3.w, r2_abs.xzww\n        temp3.yz = temp3.xx * float2(-0.25, -0.25) + abs(temp2).zw;\n        // mad r1.x, r0.x, -c4.x, r4.x\n        temp1.x = temp0.x * float1(-1.5) + temp4.x;\n        // cmp r6.x, r3.y, r4.x, r1.x\n        temp6.x = (temp3.y >= 0) ? temp4.x : temp1.x;\n        // mad r1.x, r0.y, -c4.x, r4.y\n        temp1.x = temp0.y * float1(-1.5) + temp4.y;\n        // cmp r6.y, r3.y, r4.y, r1.x\n        temp6.y = (temp3.y >= 0) ? temp4.y : temp1.x;\n        // cmp r4.xy, r3.yzzw, c1.y, c1.x\n        temp4.xy = (temp3.yz >= 0) ? float2(0, 0) : float2(1, 1);\n        // add r1.x, r4.y, r4.x\n        temp1.x = temp4.y + temp4.x;\n        // mad r3.w, r0.x, c4.x, r5.x\n        temp3.w = temp0.x * float1(1.5) + temp5.x;\n        // cmp r4.x, r3.z, r5.x, r3.w\n        temp4.x = (temp3.z >= 0) ? temp5.x : temp3.w;\n        // mad r3.w, r0.y, c4.x, r5.y\n        temp3.w = temp0.y * float1(1.5) + temp5.y;\n        // cmp r4.y, r3.z, r5.y, r3.w\n        temp4.y = (temp3.z >= 0) ? temp5.y : temp3.w;\n        // if_lt -r1.x, c1.y\n        if (-temp1.x < float4(0, 0, 0, 0)) {\n            // if_ge r2_abs.z, r1.w\n            if (abs(temp2).z >= temp1.w) {\n                // else\n            } else {\n                // mov r6.zw, c1.y\n                temp6.zw = float2(0, 0);\n                // texldl r5, r6, s0\n                temp5 = tex2Dlod(diffuse_texture, temp6);\n                // mov r2.z, r5.y\n                temp2.z = temp5.y;\n                // endif\n            }\n            // if_ge r2_abs.w, r1.w\n            if (abs(temp2).w >= temp1.w) {\n                // else\n            } else {\n                // mov r4.zw, c1.y\n                temp4.zw = float2(0, 0);\n                // texldl r5, r4, s0\n                temp5 = tex2Dlod(diffuse_texture, temp4);\n                // mov r2.w, r5.y\n                temp2.w = temp5.y;\n                // endif\n            }\n            // mad r1.x, r1.z, -c3.x, r2.z\n            temp1.x = temp1.z * float1(-0.5) + temp2.z;\n            // cmp r2.z, r3.y, r2.z, r1.x\n            temp2.z = (temp3.y >= 0) ? temp2.z : temp1.x;\n            // mad r1.x, r1.z, -c3.x, r2.w\n            temp1.x = temp1.z * float1(-0.5) + temp2.w;\n            // cmp r2.w, r3.z, r2.w, r1.x\n            temp2.w = (temp3.z >= 0) ? temp2.w : temp1.x;\n            // mad r3.yz, r3.x, -c3.w, r2_abs.xzww\n            temp3.yz = temp3.xx * float2(-0.25, -0.25) + abs(temp2).zw;\n            // mad r1.x, r0.x, -c2.z, r6.x\n            temp1.x = temp0.x * float1(-2) + temp6.x;\n            // cmp r6.x, r3.y, r6.x, r1.x\n            temp6.x = (temp3.y >= 0) ? temp6.x : temp1.x;\n            // mad r1.x, r0.y, -c2.z, r6.y\n            temp1.x = temp0.y * float1(-2) + temp6.y;\n            // cmp r6.y, r3.y, r6.y, r1.x\n            temp6.y = (temp3.y >= 0) ? temp6.y : temp1.x;\n            // cmp r5.xy, r3.yzzw, c1.y, c1.x\n            temp5.xy = (temp3.yz >= 0) ? float2(0, 0) : float2(1, 1);\n            // add r1.x, r5.y, r5.x\n            temp1.x = temp5.y + temp5.x;\n            // mad r3.w, r0.x, c2.z, r4.x\n            temp3.w = temp0.x * float1(2) + temp4.x;\n            // cmp r4.x, r3.z, r4.x, r3.w\n            temp4.x = (temp3.z >= 0) ? temp4.x : temp3.w;\n            // mad r3.w, r0.y, c2.z, r4.y\n            temp3.w = temp0.y * float1(2) + temp4.y;\n            // cmp r4.y, r3.z, r4.y, r3.w\n            temp4.y = (temp3.z >= 0) ? temp4.y : temp3.w;\n            // if_lt -r1.x, c1.y\n            if (-temp1.x < float4(0, 0, 0, 0)) {\n                // if_ge r2_abs.z, r1.w\n                if (abs(temp2).z >= temp1.w) {\n                    // else\n                } else {\n                    // mov r6.zw, c1.y\n                    temp6.zw = float2(0, 0);\n                    // texldl r5, r6, s0\n                    temp5 = tex2Dlod(diffuse_texture, temp6);\n                    // mov r2.z, r5.y\n                    temp2.z = temp5.y;\n                    // endif\n                }\n                // if_ge r2_abs.w, r1.w\n                if (abs(temp2).w >= temp1.w) {\n                    // else\n                } else {\n                    // mov r4.zw, c1.y\n                    temp4.zw = float2(0, 0);\n                    // texldl r5, r4, s0\n                    temp5 = tex2Dlod(diffuse_texture, temp4);\n                    // mov r2.w, r5.y\n                    temp2.w = temp5.y;\n                    // endif\n                }\n                // mad r1.x, r1.z, -c3.x, r2.z\n                temp1.x = temp1.z * float1(-0.5) + temp2.z;\n                // cmp r2.z, r3.y, r2.z, r1.x\n                temp2.z = (temp3.y >= 0) ? temp2.z : temp1.x;\n                // mad r1.x, r1.z, -c3.x, r2.w\n                temp1.x = temp1.z * float1(-0.5) + temp2.w;\n                // cmp r2.w, r3.z, r2.w, r1.x\n                temp2.w = (temp3.z >= 0) ? temp2.w : temp1.x;\n                // mad r3.yz, r3.x, -c3.w, r2_abs.xzww\n                temp3.yz = temp3.xx * float2(-0.25, -0.25) + abs(temp2).zw;\n                // mad r1.x, r0.x, -c4.y, r6.x\n                temp1.x = temp0.x * float1(-4) + temp6.x;\n                // cmp r6.x, r3.y, r6.x, r1.x\n                temp6.x = (temp3.y >= 0) ? temp6.x : temp1.x;\n                // mad r1.x, r0.y, -c4.y, r6.y\n                temp1.x = temp0.y * float1(-4) + temp6.y;\n                // cmp r6.y, r3.y, r6.y, r1.x\n                temp6.y = (temp3.y >= 0) ? temp6.y : temp1.x;\n                // cmp r5.xy, r3.yzzw, c1.y, c1.x\n                temp5.xy = (temp3.yz >= 0) ? float2(0, 0) : float2(1, 1);\n                // add r1.x, r5.y, r5.x\n                temp1.x = temp5.y + temp5.x;\n                // mad r3.w, r0.x, c4.y, r4.x\n                temp3.w = temp0.x * float1(4) + temp4.x;\n                // cmp r4.x, r3.z, r4.x, r3.w\n                temp4.x = (temp3.z >= 0) ? temp4.x : temp3.w;\n                // mad r3.w, r0.y, c4.y, r4.y\n                temp3.w = temp0.y * float1(4) + temp4.y;\n                // cmp r4.y, r3.z, r4.y, r3.w\n                temp4.y = (temp3.z >= 0) ? temp4.y : temp3.w;\n                // if_lt -r1.x, c1.y\n                if (-temp1.x < float4(0, 0, 0, 0)) {\n                    // if_ge r2_abs.z, r1.w\n                    if (abs(temp2).z >= temp1.w) {\n                        // else\n                    } else {\n                        // mov r6.zw, c1.y\n                        temp6.zw = float2(0, 0);\n                        // texldl r5, r6, s0\n                        temp5 = tex2Dlod(diffuse_texture, temp6);\n                        // mov r2.z, r5.y\n                        temp2.z = temp5.y;\n                        // endif\n                    }\n                    // if_ge r2_abs.w, r1.w\n                    if (abs(temp2).w >= temp1.w) {\n                        // else\n                    } else {\n                        // mov r4.zw, c1.y\n                        temp4.zw = float2(0, 0);\n                        // texldl r5, r4, s0\n                        temp5 = tex2Dlod(diffuse_texture, temp4);\n                        // mov r2.w, r5.y\n                        temp2.w = temp5.y;\n                        // endif\n                    }\n                    // mad r1.x, r1.z, -c3.x, r2.z\n                    temp1.x = temp1.z * float1(-0.5) + temp2.z;\n                    // cmp r2.z, r3.y, r2.z, r1.x\n                    temp2.z = (temp3.y >= 0) ? temp2.z : temp1.x;\n                    // mad r1.x, r1.z, -c3.x, r2.w\n                    temp1.x = temp1.z * float1(-0.5) + temp2.w;\n                    // cmp r2.w, r3.z, r2.w, r1.x\n                    temp2.w = (temp3.z >= 0) ? temp2.w : temp1.x;\n                    // mad r1.xz, r3.x, -c3.w, r2_abs.zyww\n                    temp1.xz = temp3.xx * float2(-0.25, -0.25) + abs(temp2).zw;\n                    // mad r1.w, r0.x, -c4.z, r6.x\n                    temp1.w = temp0.x * float1(-12) + temp6.x;\n                    // cmp r6.x, r1.x, r6.x, r1.w\n                    temp6.x = (temp1.x >= 0) ? temp6.x : temp1.w;\n                    // mad r1.w, r0.y, -c4.z, r6.y\n                    temp1.w = temp0.y * float1(-12) + temp6.y;\n                    // cmp r6.y, r1.x, r6.y, r1.w\n                    temp6.y = (temp1.x >= 0) ? temp6.y : temp1.w;\n                    // mad r0.x, r0.x, c4.z, r4.x\n                    temp0.x = temp0.x * float1(12) + temp4.x;\n                    // cmp r4.x, r1.z, r4.x, r0.x\n                    temp4.x = (temp1.z >= 0) ? temp4.x : temp0.x;\n                    // mad r0.x, r0.y, c4.z, r4.y\n                    temp0.x = temp0.y * float1(12) + temp4.y;\n                    // cmp r4.y, r1.z, r4.y, r0.x\n                    temp4.y = (temp1.z >= 0) ? temp4.y : temp0.x;\n                    // endif\n                }\n                // endif\n            }\n            // endif\n        }\n        // add r0.x, -r6.x, v0.x\n        temp0.x = -temp6.x + texcoord.x;\n        // add r0.y, r4.x, -v0.x\n        temp0.y = temp4.x + -texcoord.x;\n        // add r1.x, -r6.y, v0.y\n        temp1.x = -temp6.y + texcoord.y;\n        // cmp r0.x, r0.z, r0.x, r1.x\n        temp0.x = (temp0.z >= 0) ? temp0.x : temp1.x;\n        // add r1.x, r4.y, -v0.y\n        temp1.x = temp4.y + -texcoord.y;\n        // cmp r0.y, r0.z, r0.y, r1.x\n        temp0.y = (temp0.z >= 0) ? temp0.y : temp1.x;\n        // cmp r1.xz, r2.zyww, c1.y, c1.x\n        temp1.xz = (temp2.zw >= 0) ? float2(0, 0) : float2(1, 1);\n        // cmp r1.w, r2.y, -c1.y, -c1.x\n        temp1.w = (temp2.y >= 0) ? float1(-0) : float1(-1);\n        // add r1.xz, r1.w, r1\n        temp1.xz = temp1.ww + temp1.xz;\n        // add r1.w, r0.x, r0.y\n        temp1.w = temp0.x + temp0.y;\n        // rcp r1.w, r1.w\n        temp1.w = 1.0f / temp1.w;\n        // add r2.y, -r0.y, r0.x\n        temp2.y = -temp0.y + temp0.x;\n        // min r2.z, r0.y, r0.x\n        temp2.z = min(temp0.y, temp0.x);\n        // cmp r0.x, r2.y, r1_abs.z, r1_abs.x\n        temp0.x = (temp2.y >= 0) ? abs(temp1).z : abs(temp1).x;\n        // mul r0.y, r0.w, r0.w\n        temp0.y = temp0.w * temp0.w;\n        // mad r0.w, r2.z, -r1.w, c3.x\n        temp0.w = temp2.z * -temp1.w + float1(0.5);\n        // mul r0.y, r0.y, c4.w\n        temp0.y = temp0.y * float1(0.75);\n        // cmp r0.x, -r0.x, c1.y, r0.w\n        temp0.x = (-temp0.x >= 0) ? float1(0) : temp0.w;\n        // max r1.x, r0.x, r0.y\n        temp1.x = max(temp0.x, temp0.y);\n        // mad r0.xy, r1.x, r2.x, v0\n        temp0.xy = temp1.xx * temp2.xx + texcoord.xy;\n        // cmp r2.x, r0.z, v0.x, r0.x\n        temp2.x = (temp0.z >= 0) ? texcoord.x : temp0.x;\n        // cmp r2.y, r0.z, r0.y, v0.y\n        temp2.y = (temp0.z >= 0) ? temp0.y : texcoord.y;\n        // mov r2.zw, c1.y\n        temp2.zw = float2(0, 0);\n        // texldl r0, r2, s0\n        temp0 = tex2Dlod(diffuse_texture, temp2);\n        // mov oC0.xyz, r0\n        out_color.xyz = temp0.xyz;\n        // mov oC0.w, r1.y\n        out_color.w = temp1.y;\n        // endif\n    }\n    // \n\n    return out_color;\n}\n")),(0,n.kt)("p",null,"Decompiled by DXDecompiler."))}c.isMDXComponent=!0}}]);