"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[30489],{603905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>s});var r=n(667294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function m(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):m(m({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},_="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},x=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),_=l(n),x=o,s=_["".concat(i,".").concat(x)]||_[x]||c[x]||a;return n?r.createElement(s,m(m({ref:t},p),{},{components:n})):r.createElement(s,m({ref:t},p))}));function s(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,m=new Array(a);m[0]=x;var d={};for(var i in t)hasOwnProperty.call(t,i)&&(d[i]=t[i]);d.originalType=e,d[_]="string"==typeof e?e:o,m[1]=d;for(var l=2;l<a;l++)m[l]=n[l];return r.createElement.apply(null,m)}return r.createElement.apply(null,n)}x.displayName="MDXCreateElement"},668773:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>m,default:()=>c,frontMatter:()=>a,metadata:()=>d,toc:()=>l});var r=n(487462),o=(n(667294),n(603905));const a={id:0x30485c9cbf749e00,title:"Opacity Default Cube Environment Mapping Diffuse Texture Normalmap Self Illumination Skinned 1weight"},m="Opacity Default Cube Environment Mapping Diffuse Texture Normalmap Self Illumination Skinned 1weight",d={unversionedId:"Generated/Shaders/Base/[900-1000]/3479132540440452600",id:"Generated/Shaders/Base/[900-1000]/3479132540440452600",title:"Opacity Default Cube Environment Mapping Diffuse Texture Normalmap Self Illumination Skinned 1weight",description:"(opacityCUBEENVIRONMENTMAPPINGNORMALMAPSKINNED_1WEIGHT, 0x30485c9cbf749d02)",source:"@site/docs/Generated/Shaders/Base/[900-1000]/0x30485c9cbf749d02.mdx",sourceDirName:"Generated/Shaders/Base/[900-1000]",slug:"/Generated/Shaders/Base/[900-1000]/3479132540440452600",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[900-1000]/3479132540440452600",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/Generated/Shaders/Base/[900-1000]/0x30485c9cbf749d02.mdx",tags:[],version:"current",frontMatter:{id:"3479132540440452600",title:"Opacity Default Cube Environment Mapping Diffuse Texture Normalmap Self Illumination Skinned 1weight"},sidebar:"docsSidebar",previous:{title:"Generic Shadow Caster Rl Cops Skinned 1weight Vertex Color Vertex Color Alpha Vertex Color Character",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[900-1000]/3471819416990458000"},next:{title:"Generic Shadow Caster Ati Cube Environment Mapping Diffuse Texture Gsma Texture Normalmap Normalmap Depth Texture Normalmap Uv1 Parallax",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[900-1000]/3479406134351024600"}},i={},l=[{value:"Technique <code>transparent</code>",id:"technique-transparent",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],p={toc:l},_="wrapper";function c(e){let{components:t,...n}=e;return(0,o.kt)(_,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"opacity-default-cube-environment-mapping-diffuse-texture-normalmap-self-illumination-skinned-1weight"},"Opacity Default Cube Environment Mapping Diffuse Texture Normalmap Self Illumination Skinned 1weight"),(0,o.kt)("p",null,"(",(0,o.kt)("inlineCode",{parentName:"p"},"opacity:default:CUBE_ENVIRONMENT_MAPPING:DIFFUSE_TEXTURE:NORMALMAP:SELF_ILLUMINATION:SKINNED_1WEIGHT"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"0x30485c9cbf749d02"),")"),(0,o.kt)("p",null,"This template is referenced 1 time by ",(0,o.kt)("a",{parentName:"p",href:"/docs/Generated/Render%20Templates/base.render_template_database#opacity-cube-environment-mapping-diffuse-texture-normalmap-self-illumination-skinned-1weight"},"opacity:CUBE_ENVIRONMENT_MAPPING:DIFFUSE_TEXTURE:NORMALMAP:SELF_ILLUMINATION:SKINNED_1WEIGHT"),".\nThis template uses the following inputs:\n|Name|UI Name|Type|\n|---|---|---|\n|self_illumination_texture|Self Illumination Texture (UV4)|texture|\n|reflection_texture|Reflection Cube|texture|\n|opacity_texture|Opacity Texture (UV5)|texture|\n|diffuse_texture|Diffuse Texture (UV1)|texture|\n|bump_normal_texture|Normal Map (UV2 else UV1)|texture|\n|il_multiplier|Self Illumination Intensity Multiplier|scalar|."),(0,o.kt)("h3",{id:"technique-transparent"},"Technique ",(0,o.kt)("inlineCode",{parentName:"h3"},"transparent")),(0,o.kt)("h3",{id:"render-states"},"Render States"),(0,o.kt)("p",null,"More info can be found on the ",(0,o.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 0,\n    D3DRS_ALPHABLENDENABLE = 1,\n    D3DRS_CULLMODE = 2,\n    D3DRS_COLORWRITEENABLE = 7,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 1,\n    D3DRS_STENCILFUNC = 6,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 5,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 4,\n    D3DRS_STENCILWRITEMASK = 5,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n    D3DRS_BLENDOP = 1,\n    D3DRS_DESTBLEND = 6,\n    D3DRS_SRCBLEND = 5,\n};\n")),(0,o.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,o.kt)("p",null,"More info can be found on the ",(0,o.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,o.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,o.kt)("h3",{id:"shaders"},"Shaders"),(0,o.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x3 bones[54] : register(vs_3_0, c0);\nfloat camera_near_range : register(vs_3_0, c174);\ncolumn_major float4x4 proj_matrix : register(vs_3_0, c170);\ncolumn_major float4x4 view_matrix : register(vs_3_0, c166);\ncolumn_major float4x4 world_matrix : register(vs_3_0, c162);\nstruct VertexMain_Input\n{\n    float4 blendindices : BLENDINDICES;\n    float4 position : POSITION;\n    float4 texcoord : TEXCOORD;\n    float4 texcoord3 : TEXCOORD3;\n    float4 normal : NORMAL;\n    float4 texcoord1 : TEXCOORD1;\n    float4 texcoord4 : TEXCOORD4;\n    float4 tangent : TANGENT;\n    float4 binormal : BINORMAL;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float4 texcoord : TEXCOORD;\n    float3 texcoord3 : TEXCOORD3;\n    float2 texcoord6 : TEXCOORD6;\n    float4 texcoord5 : TEXCOORD5;\n    float2 texcoord1 : TEXCOORD1;\n    float3 texcoord4 : TEXCOORD4;\n    float3 texcoord2 : TEXCOORD2;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float4 temp0, temp1;\n    float addr0;\n    float3 temp2;\n    // def c175, 2, -1, 3, 1\n    // dcl_blendindices v0\n    // dcl_position v1\n    // dcl_texcoord v2\n    // dcl_texcoord3 v3\n    // dcl_normal v4\n    // dcl_texcoord1 v5\n    // dcl_texcoord4 v6\n    // dcl_tangent v7\n    // dcl_binormal v8\n    // dcl_position o0\n    // dcl_texcoord o1\n    // dcl_texcoord3 o2.xyz\n    // dcl_texcoord6 o3.xy\n    // dcl_texcoord5 o4\n    // dcl_texcoord1 o5.xy\n    // dcl_texcoord4 o6.xyz\n    // dcl_texcoord2 o7.xyz\n    // mov r0.w, c175.w\n    temp0.w = float1(1);\n    // mul r1.x, c175.z, v0.x\n    temp1.x = float1(3) * i.blendindices.x;\n    // mova a0.x, r1.x\n    addr0.x = temp1.x;\n    // dp4 r0.x, v1, c0[a0.x]\n    temp0.x = dot(i.position, (bones[0 + (addr0.x / 3)]._m00_m10_m20_m30));\n    // dp4 r0.y, v1, c1[a0.x]\n    temp0.y = dot(i.position, (bones[0 + (addr0.x / 3)]._m01_m11_m21_m31));\n    // dp4 r0.z, v1, c2[a0.x]\n    temp0.z = dot(i.position, (bones[0 + (addr0.x / 3)]._m02_m12_m22_m32));\n    // dp4 r1.w, r0, c165\n    temp1.w = dot(temp0, (world_matrix._m03_m13_m23_m33));\n    // dp4 r1.x, r0, c162\n    temp1.x = dot(temp0, (world_matrix._m00_m10_m20_m30));\n    // dp4 r1.y, r0, c163\n    temp1.y = dot(temp0, (world_matrix._m01_m11_m21_m31));\n    // dp4 r1.z, r0, c164\n    temp1.z = dot(temp0, (world_matrix._m02_m12_m22_m32));\n    // dp4 r0.x, r1, c166\n    temp0.x = dot(temp1, (view_matrix._m00_m10_m20_m30));\n    // dp4 r0.y, r1, c167\n    temp0.y = dot(temp1, (view_matrix._m01_m11_m21_m31));\n    // dp4 r0.z, r1, c168\n    temp0.z = dot(temp1, (view_matrix._m02_m12_m22_m32));\n    // dp4 r0.w, r1, c169\n    temp0.w = dot(temp1, (view_matrix._m03_m13_m23_m33));\n    // mov o4.xyz, r1\n    o.texcoord5.xyz = temp1.xyz;\n    // dp4 o0.x, r0, c170\n    o.position.x = dot(temp0, (proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, r0, c171\n    o.position.y = dot(temp0, (proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.w, r0, c173\n    o.position.w = dot(temp0, (proj_matrix._m03_m13_m23_m33));\n    // dp4 r0.x, r0, c172\n    temp0.x = dot(temp0, (proj_matrix._m02_m12_m22_m32));\n    // mad r0.yzw, v7.xxyz, c175.x, c175.y\n    temp0.yzw = i.tangent.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 r1.x, r0.yzww, c0[a0.x]\n    temp1.x = dot(temp0.yzw, (bones[0 + (addr0.x / 3)]._m00_m10_m20_m30).xyz);\n    // dp3 r1.y, r0.yzww, c1[a0.x]\n    temp1.y = dot(temp0.yzw, (bones[0 + (addr0.x / 3)]._m01_m11_m21_m31).xyz);\n    // dp3 r1.z, r0.yzww, c2[a0.x]\n    temp1.z = dot(temp0.yzw, (bones[0 + (addr0.x / 3)]._m02_m12_m22_m32).xyz);\n    // nrm r2.xyz, r1\n    temp2.xyz = normalize(temp1.xyz).xyz;\n    // dp3 o7.x, r2, c162\n    o.texcoord2.x = dot(temp2.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o2.x, r2, c163\n    o.texcoord3.x = dot(temp2.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o6.x, r2, c164\n    o.texcoord4.x = dot(temp2.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mad r0.yzw, v8.xxyz, c175.x, c175.y\n    temp0.yzw = i.binormal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 r1.x, r0.yzww, c0[a0.x]\n    temp1.x = dot(temp0.yzw, (bones[0 + (addr0.x / 3)]._m00_m10_m20_m30).xyz);\n    // dp3 r1.y, r0.yzww, c1[a0.x]\n    temp1.y = dot(temp0.yzw, (bones[0 + (addr0.x / 3)]._m01_m11_m21_m31).xyz);\n    // dp3 r1.z, r0.yzww, c2[a0.x]\n    temp1.z = dot(temp0.yzw, (bones[0 + (addr0.x / 3)]._m02_m12_m22_m32).xyz);\n    // nrm r2.xyz, r1\n    temp2.xyz = normalize(temp1.xyz).xyz;\n    // dp3 o7.y, -r2, c162\n    o.texcoord2.y = dot(-temp2.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o2.y, -r2, c163\n    o.texcoord3.y = dot(-temp2.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o6.y, -r2, c164\n    o.texcoord4.y = dot(-temp2.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mad r0.yzw, v4.xxyz, c175.x, c175.y\n    temp0.yzw = i.normal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 r1.x, r0.yzww, c0[a0.x]\n    temp1.x = dot(temp0.yzw, (bones[0 + (addr0.x / 3)]._m00_m10_m20_m30).xyz);\n    // dp3 r1.y, r0.yzww, c1[a0.x]\n    temp1.y = dot(temp0.yzw, (bones[0 + (addr0.x / 3)]._m01_m11_m21_m31).xyz);\n    // dp3 r1.z, r0.yzww, c2[a0.x]\n    temp1.z = dot(temp0.yzw, (bones[0 + (addr0.x / 3)]._m02_m12_m22_m32).xyz);\n    // nrm r2.xyz, r1\n    temp2.xyz = normalize(temp1.xyz).xyz;\n    // dp3 o7.z, r2, c162\n    o.texcoord2.z = dot(temp2.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o2.z, r2, c163\n    o.texcoord3.z = dot(temp2.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o6.z, r2, c164\n    o.texcoord4.z = dot(temp2.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // add o4.w, r0.x, c174.x\n    o.texcoord5.w = temp0.x + camera_near_range.x;\n    // mov o0.z, r0.x\n    o.position.z = temp0.x;\n    // mov o1.xy, v2\n    o.texcoord.xy = i.texcoord.xy;\n    // mov o1.zw, v5.xyxy\n    o.texcoord.zw = i.texcoord1.xy;\n    // mov o3.xy, v3\n    o.texcoord6 = i.texcoord3;\n    // mov o5.xy, v6\n    o.texcoord1 = i.texcoord4;\n    // \n\n    return o;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."),(0,o.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"float ref_il_multiplier : register(ps_3_0, c0);\nsampler2D self_illumination_texture : register(ps_3_0, s0);\nfloat4 PixelMain(float2 texcoord : TEXCOORD) : COLOR\n{\n    float4 out_color;\n    float4 temp0;\n    // def c1, 1, 0, 0, 0\n    // dcl_texcoord v0.xy\n    // dcl_2d s0\n    // texld_pp r0, v0, s0\n    temp0 = /* not implemented _pp modifier */ tex2D(self_illumination_texture, texcoord.xy);\n    // mul_pp oC0.xyz, r0, c0.x\n    out_color.xyz = /* not implemented _pp modifier */ temp0.xyz * ref_il_multiplier.xxx;\n    // mov_pp oC0.w, c1.x\n    out_color.w = /* not implemented _pp modifier */ float1(1);\n    // \n\n    return out_color;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."))}c.isMDXComponent=!0}}]);