"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[10608],{603905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>_});var r=a(667294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var d=r.createContext({}),i=function(e){var t=r.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=i(e.components);return r.createElement(d.Provider,{value:t},e.children)},M="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,d=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),M=i(a),p=n,_=M["".concat(d,".").concat(p)]||M[p]||c[p]||l;return a?r.createElement(_,o(o({ref:t},m),{},{components:a})):r.createElement(_,o({ref:t},m))}));function _(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=p;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s[M]="string"==typeof e?e:n,o[1]=s;for(var i=2;i<l;i++)o[i]=a[i];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"},676713:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>s,toc:()=>i});var r=a(487462),n=(a(667294),a(603905));const l={id:0x7cd5a2f8cbfd7400,title:"Landscape Shadow Caster Blend Masks Mat0 Mat0 Blend World Mask Mat0 Nm Mat1 Mat1 Blend World Mask Mat1 Nm Mat2 Mat2 Blend World Mask Mat2 Nm Mat3 Mat3 Blend World Mask Mat3 Nm Overlay Over Detail World Mask A Wetness World Overlay Mask Texture World Overlay Texture"},o="Landscape Shadow Caster Blend Masks Mat0 Mat0 Blend World Mask Mat0 Nm Mat1 Mat1 Blend World Mask Mat1 Nm Mat2 Mat2 Blend World Mask Mat2 Nm Mat3 Mat3 Blend World Mask Mat3 Nm Overlay Over Detail World Mask A Wetness World Overlay Mask Texture World Overlay Texture",s={unversionedId:"Generated/Shaders/Base/[2300-2400]/8995275020200408000",id:"Generated/Shaders/Base/[2300-2400]/8995275020200408000",title:"Landscape Shadow Caster Blend Masks Mat0 Mat0 Blend World Mask Mat0 Nm Mat1 Mat1 Blend World Mask Mat1 Nm Mat2 Mat2 Blend World Mask Mat2 Nm Mat3 Mat3 Blend World Mask Mat3 Nm Overlay Over Detail World Mask A Wetness World Overlay Mask Texture World Overlay Texture",description:"(landscapeBLENDMASKSMAT0BLENDWORLDMASKMAT1MAT1NMMAT2BLENDWORLDMASKMAT3MAT3NMWORLDMASKAWETNESSWORLDOVERLAYTEXTURE, 0x7cd5a2f8cbfd740c)",source:"@site/docs/Generated/Shaders/Base/[2300-2400]/0x7cd5a2f8cbfd740c.mdx",sourceDirName:"Generated/Shaders/Base/[2300-2400]",slug:"/Generated/Shaders/Base/[2300-2400]/8995275020200408000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[2300-2400]/8995275020200408000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/Generated/Shaders/Base/[2300-2400]/0x7cd5a2f8cbfd740c.mdx",tags:[],version:"current",frontMatter:{id:"8995275020200408000",title:"Landscape Shadow Caster Blend Masks Mat0 Mat0 Blend World Mask Mat0 Nm Mat1 Mat1 Blend World Mask Mat1 Nm Mat2 Mat2 Blend World Mask Mat2 Nm Mat3 Mat3 Blend World Mask Mat3 Nm Overlay Over Detail World Mask A Wetness World Overlay Mask Texture World Overlay Texture"},sidebar:"docsSidebar",previous:{title:"Generic Shadow Caster Ati Cube Environment Mapping Diffuse Texture Instanced Simple Tint",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[2300-2400]/8992133006711676000"},next:{title:"Generic Shadow Caster Diffuse Texture Distance Fade 1 Instanced Normalmap",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[2300-2400]/9000109540709106000"}},d={},i=[{value:"Technique <code>ambient</code>",id:"technique-ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],m={toc:i},M="wrapper";function c(e){let{components:t,...a}=e;return(0,n.kt)(M,(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"landscape-shadow-caster-blend-masks-mat0-mat0-blend-world-mask-mat0-nm-mat1-mat1-blend-world-mask-mat1-nm-mat2-mat2-blend-world-mask-mat2-nm-mat3-mat3-blend-world-mask-mat3-nm-overlay-over-detail-world-mask-a-wetness-world-overlay-mask-texture-world-overlay-texture"},"Landscape Shadow Caster Blend Masks Mat0 Mat0 Blend World Mask Mat0 Nm Mat1 Mat1 Blend World Mask Mat1 Nm Mat2 Mat2 Blend World Mask Mat2 Nm Mat3 Mat3 Blend World Mask Mat3 Nm Overlay Over Detail World Mask A Wetness World Overlay Mask Texture World Overlay Texture"),(0,n.kt)("p",null,"(",(0,n.kt)("inlineCode",{parentName:"p"},"landscape:shadow_caster:BLEND_MASKS:MAT0:MAT0_BLEND_WORLD_MASK:MAT0_NM:MAT1:MAT1_BLEND_WORLD_MASK:MAT1_NM:MAT2:MAT2_BLEND_WORLD_MASK:MAT2_NM:MAT3:MAT3_BLEND_WORLD_MASK:MAT3_NM:OVERLAY_OVER_DETAIL:WORLD_MASK_A_WETNESS:WORLD_OVERLAY_MASK_TEXTURE:WORLD_OVERLAY_TEXTURE"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"0x7cd5a2f8cbfd740c"),")"),(0,n.kt)("p",null,"This template is referenced 1 time by ",(0,n.kt)("a",{parentName:"p",href:"/docs/Generated/Render%20Templates/base.render_template_database#landscape-blend-masks-mat0-mat0-blend-world-mask-mat0-nm-mat1-mat1-blend-world-mask-mat1-nm-mat2-mat2-blend-world-mask-mat2-nm-mat3-mat3-blend-world-mask-mat3-nm-overlay-over-detail-world-mask-a-wetness-world-overlay-mask-texture-world-overlay-texture"},"landscape:BLEND_MASKS:MAT0:MAT0_BLEND_WORLD_MASK:MAT0_NM:MAT1:MAT1_BLEND_WORLD_MASK:MAT1_NM:MAT2:MAT2_BLEND_WORLD_MASK:MAT2_NM:MAT3:MAT3_BLEND_WORLD_MASK:MAT3_NM:OVERLAY_OVER_DETAIL:WORLD_MASK_A_WETNESS:WORLD_OVERLAY_MASK_TEXTURE:WORLD_OVERLAY_TEXTURE"),".\nThis template uses the following inputs:\n|Name|UI Name|Type|\n|---|---|---|\n|world_overlay_texture|World Overlay Texture|texture|\n|world_overlay_mask_texture|World Mask Texture|texture|\n|diffuse_layer0_texture|Diffuse Texture Layer 0 ","[mask.r]"," (UV2 else UV1)|texture|\n|normal_layer0_texture|Normal Map Layer 0 ","[mask.r]"," (UV2 else UV1)|texture|\n|diffuse_layer1_texture|Diffuse Texture Layer 1 ","[mask.g]"," (UV2 else UV1)|texture|\n|normal_layer1_texture|Normal Map Layer 1 ","[mask.g]"," (UV2 else UV1)|texture|\n|diffuse_layer2_texture|Diffuse Texture Layer 2 ","[mask.b]"," (UV2 else UV1)|texture|\n|normal_layer2_texture|Normal Map Layer 2 ","[mask.b]"," (UV2 else UV1)|texture|\n|diffuse_layer3_texture|Diffuse Texture Layer 3 ","[mask.a]"," (UV2 else UV1)|texture|\n|normal_layer3_texture|Normal Map Layer 3 ","[mask.a]"," (UV2 else UV1)|texture|\n|specular_power|Glossiness|scalar|\n|detail_fadeout|Detail Fade Out (start, end)|vector3|\n|mask_weight|Detail Texture Masks Weighting|vector3|."),(0,n.kt)("h3",{id:"technique-ambient"},"Technique ",(0,n.kt)("inlineCode",{parentName:"h3"},"ambient")),(0,n.kt)("h3",{id:"render-states"},"Render States"),(0,n.kt)("p",null,"More info can be found on the ",(0,n.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 1,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 2,\n    D3DRS_COLORWRITEENABLE = 15,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 961656599,\n    D3DRS_SLOPESCALEDEPTHBIAS = 1075838976,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,n.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,n.kt)("p",null,"More info can be found on the ",(0,n.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,n.kt)("h3",{id:"shaders"},"Shaders"),(0,n.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x4 view_proj_matrix : register(vs_3_0, c0);\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float texcoord1 : TEXCOORD1;\n};\n\nVertexMain_Output VertexMain(float4 position : POSITION)\n{\n    VertexMain_Output o;\n    float temp0;\n    // dcl_position v0\n    // dcl_position o0\n    // dcl_texcoord1 o1.x\n    // dp4 o0.x, v0, c0\n    o.position.x = dot(position, (view_proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, v0, c1\n    o.position.y = dot(position, (view_proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.w, v0, c3\n    o.position.w = dot(position, (view_proj_matrix._m03_m13_m23_m33));\n    // dp4 r0.x, v0, c2\n    temp0.x = dot(position, (view_proj_matrix._m02_m12_m22_m32));\n    // mov o0.z, r0.x\n    o.position.z = temp0.x;\n    // mov o1.x, r0.x\n    o.texcoord1 = temp0.x;\n    // \n\n    return o;\n}\n")),(0,n.kt)("p",null,"Decompiled by DXDecompiler."),(0,n.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-hlsl"},"float4 PixelMain(float texcoord1 : TEXCOORD1) : COLOR\n{\n    float4 out_color;\n    // def c0, 1, 0, 0, 0\n    // dcl_texcoord1 v0.x\n    // mul oC0, c0.xyyy, v0.x\n    out_color = float4(1, 0, 0, 0) * texcoord1.x;\n    // \n\n    return out_color;\n}\n")),(0,n.kt)("p",null,"Decompiled by DXDecompiler."))}c.isMDXComponent=!0}}]);