"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[8312],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>x});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function m(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},p=Object.keys(e);for(r=0;r<p.length;r++)n=p[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)n=p[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),i=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=i(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},_=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,p=e.originalType,l=e.parentName,d=m(e,["components","mdxType","originalType","parentName"]),c=i(n),_=o,x=c["".concat(l,".").concat(_)]||c[_]||s[_]||p;return n?r.createElement(x,a(a({ref:t},d),{},{components:n})):r.createElement(x,a({ref:t},d))}));function x(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var p=n.length,a=new Array(p);a[0]=_;var m={};for(var l in t)hasOwnProperty.call(t,l)&&(m[l]=t[l]);m.originalType=e,m[c]="string"==typeof e?e:o,a[1]=m;for(var i=2;i<p;i++)a[i]=n[i];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}_.displayName="MDXCreateElement"},3296:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>s,frontMatter:()=>p,metadata:()=>m,toc:()=>i});var r=n(7462),o=(n(7294),n(3905));const p={id:0x950ea7c1ff367000,title:"Post Rain Ripples Default"},a="Post Rain Ripples Default",m={unversionedId:"Generated/Shaders/Post/10740706612977496000",id:"Generated/Shaders/Post/10740706612977496000",title:"Post Rain Ripples Default",description:"(postrainripples:default, 0x950ea7c1ff366f09)",source:"@site/docs/Generated/Shaders/Post/0x950ea7c1ff366f09.mdx",sourceDirName:"Generated/Shaders/Post",slug:"/Generated/Shaders/Post/10740706612977496000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Post/10740706612977496000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/Generated/Shaders/Post/0x950ea7c1ff366f09.mdx",tags:[],version:"current",frontMatter:{id:"10740706612977496000",title:"Post Rain Ripples Default"},sidebar:"docsSidebar",previous:{title:"Post Downscale Default No A",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Post/10476193342307690000"},next:{title:"Filter Night Vision Gaussian Blur Default",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Post/10965193127332583000"}},l={},i=[{value:"Technique <code>ambient</code>",id:"technique-ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Sampler 1",id:"sampler-1",level:4},{value:"Sampler 2",id:"sampler-2",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],d={toc:i},c="wrapper";function s(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"post-rain-ripples-default"},"Post Rain Ripples Default"),(0,o.kt)("p",null,"(",(0,o.kt)("inlineCode",{parentName:"p"},"post_rain_ripples:default"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"0x950ea7c1ff366f09"),")"),(0,o.kt)("p",null,"This template is referenced 1 time by ",(0,o.kt)("a",{parentName:"p",href:"/docs/Generated/Render%20Templates/post.render_template_database#post-rain-ripples"},"post_rain_ripples"),"."),(0,o.kt)("h3",{id:"technique-ambient"},"Technique ",(0,o.kt)("inlineCode",{parentName:"h3"},"ambient")),(0,o.kt)("h3",{id:"render-states"},"Render States"),(0,o.kt)("p",null,"More info can be found on the ",(0,o.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 0,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 0,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 1,\n    D3DRS_COLORWRITEENABLE = 15,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 1,\n    D3DRS_STENCILFUNC = 3,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 7,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,o.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,o.kt)("p",null,"More info can be found on the ",(0,o.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,o.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 2,\n    D3DSAMP_MINFILTER = 2,\n    D3DSAMP_MIPFILTER = 2,\n};\n")),(0,o.kt)("h4",{id:"sampler-1"},"Sampler 1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,o.kt)("h4",{id:"sampler-2"},"Sampler 2"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 2,\n    D3DSAMP_MINFILTER = 2,\n    D3DSAMP_MIPFILTER = 2,\n};\n")),(0,o.kt)("h3",{id:"shaders"},"Shaders"),(0,o.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x4 camera_inv_view_matrix : register(vs_3_0, c4);\nfloat3 camera_unprojection : register(vs_3_0, c7);\nfloat ref_time : register(vs_3_0, c8);\ncolumn_major float4x4 view_proj_matrix : register(vs_3_0, c0);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 texcoord : TEXCOORD;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float2 texcoord : TEXCOORD;\n    float3 texcoord1 : TEXCOORD1;\n    float2 texcoord2 : TEXCOORD2;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float3 temp0, temp1;\n    // def c9, 1, 5, 20, 0.25\n    // def c10, 8, -4, 0, 0\n    // dcl_position v0\n    // dcl_texcoord v1\n    // dcl_position o0\n    // dcl_texcoord o1.xy\n    // dcl_texcoord1 o2.xyz\n    // dcl_texcoord2 o3.xy\n    // dp4 o0.w, v0, c3\n    o.position.w = dot(i.position, (view_proj_matrix._m03_m13_m23_m33));\n    // dp4 r0.x, v0, c0\n    temp0.x = dot(i.position, (view_proj_matrix._m00_m10_m20_m30));\n    // dp4 r0.y, v0, c1\n    temp0.y = dot(i.position, (view_proj_matrix._m01_m11_m21_m31));\n    // mul r1.xy, r0, c7\n    temp1.xy = temp0.xy * camera_unprojection.xy;\n    // mov o0.xy, r0\n    o.position.xy = temp0.xy;\n    // mov r1.z, c9.x\n    temp1.z = float1(1);\n    // dp3 o2.x, r1, c4\n    o.texcoord1.x = dot(temp1.xyz, (camera_inv_view_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o2.y, r1, c5\n    o.texcoord1.y = dot(temp1.xyz, (camera_inv_view_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o2.z, r1, c6\n    o.texcoord1.z = dot(temp1.xyz, (camera_inv_view_matrix._m02_m12_m22_m32).xyz);\n    // mov r0.yz, c9\n    temp0.yz = float2(5, 20);\n    // mul r0.xy, r0.yzzw, c8.x\n    temp0.xy = temp0.yz * ref_time.xx;\n    // frc r0.z, r0.y\n    temp0.z = frac(temp0.y);\n    // add r0.z, -r0.z, r0.y\n    temp0.z = -temp0.z + temp0.y;\n    // mul o3.x, r0.z, c9.w\n    o.texcoord2.x = temp0.z * float1(0.25);\n    // sge r0.y, r0.y, -r0.y\n    temp0.y = (temp0.y >= -temp0.y) ? 1 : 0;\n    // mad r0.y, r0.y, c10.x, c10.y\n    temp0.y = temp0.y * float1(8) + float1(-4);\n    // rcp r0.z, r0.y\n    temp0.z = 1.0f / temp0.y;\n    // mul r0.x, r0.z, r0.x\n    temp0.x = temp0.z * temp0.x;\n    // frc r0.x, r0.x\n    temp0.x = frac(temp0.x);\n    // mul r0.x, r0.x, r0.y\n    temp0.x = temp0.x * temp0.y;\n    // frc r0.y, r0.x\n    temp0.y = frac(temp0.x);\n    // add r0.x, -r0.y, r0.x\n    temp0.x = -temp0.y + temp0.x;\n    // mul o3.y, r0.x, c9.w\n    o.texcoord2.y = temp0.x * float1(0.25);\n    // mov o0.z, c9.x\n    o.position.z = float1(1);\n    // mov o1.xy, v1\n    o.texcoord = i.texcoord;\n    // \n\n    return o;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."),(0,o.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x4 camera_world_matrix : register(ps_3_0, c0);\nsampler2D depth : register(ps_3_0, s2);\nsampler2D diffuse_texture : register(ps_3_0, s0);\nsampler2D filter_color_texture : register(ps_3_0, s1);\nfloat ref_time : register(ps_3_0, c2);\nstruct PixelMain_Input\n{\n    float2 texcoord : TEXCOORD;\n    float2 texcoord1 : TEXCOORD1;\n    float2 texcoord2 : TEXCOORD2;\n};\n\nfloat4 PixelMain(PixelMain_Input i) : COLOR\n{\n    float4 out_color;\n    float4 temp0, temp1;\n    float3 temp2;\n    // def c3, 15, 3, 100000, 0.0025\n    // def c4, 100, 0.01, -100, -0.01\n    // def c5, -0.5, 0.5, -0.75, 4\n    // def c6, 0, 0, 0, 0\n    // dcl_texcoord v0.xy\n    // dcl_texcoord1 v1.xy\n    // dcl_texcoord2 v2.xy\n    // dcl_2d s0\n    // dcl_2d s1\n    // dcl_2d s2\n    // texld_pp r0, v0, s2\n    temp0 = /* not implemented _pp modifier */ tex2D(depth, i.texcoord.xy);\n    // mad r1.x, v1.x, r0.x, c0.w\n    temp1.x = i.texcoord1.x * temp0.x + (camera_world_matrix._m00_m10_m20_m30).w;\n    // mad r1.y, v1.y, r0.x, c1.w\n    temp1.y = i.texcoord1.y * temp0.x + (camera_world_matrix._m01_m11_m21_m31).w;\n    // mov r0.xy, c3\n    temp0.xy = float2(15, 3);\n    // mad r0.xy, c2.x, -r0, r1\n    temp0.xy = ref_time.xx * -temp0.xy + temp1.xy;\n    // add r0.xy, r0, c3.z\n    temp0.xy = temp0.xy + float2(100000, 100000);\n    // cmp r1, r0.xxyy, c4.xyxy, c4.zwzw\n    temp1 = (temp0.xxyy >= 0) ? float4(100, 0.01, 100, 0.01) : float4(-100, -0.01, -100, -0.01);\n    // mul r0.xy, r0, r1.ywzw\n    temp0.xy = temp0.xy * temp1.yw;\n    // frc r0.xy, r0\n    temp0.xy = frac(temp0.xy);\n    // mul r0.xy, r0, r1.xzzw\n    temp0.xy = temp0.xy * temp1.xz;\n    // mad r0.xy, r0, c3.w, v2\n    temp0.xy = temp0.xy * float2(0.0025, 0.0025) + i.texcoord2.xy;\n    // texld_pp r0, r0, s1\n    temp0 = /* not implemented _pp modifier */ tex2D(filter_color_texture, temp0.xy);\n    // add_pp r0.xy, r0.wyzw, c5.x\n    temp0.xy = /* not implemented _pp modifier */ temp0.wy + float2(-0.5, -0.5);\n    // mul_pp r0.xy, r0, c5.y\n    temp0.xy = /* not implemented _pp modifier */ temp0.xy * float2(0.5, 0.5);\n    // texld_pp r1, v0, s0\n    temp1 = /* not implemented _pp modifier */ tex2D(diffuse_texture, i.texcoord.xy);\n    // add_pp r0.z, r1.z, c5.z\n    temp0.z = /* not implemented _pp modifier */ temp1.z + float1(-0.75);\n    // mul_sat_pp r0.z, r0.z, c5.w\n    ;// error\n    // mul_pp r2.xy, r0.z, r0\n    temp2.xy = /* not implemented _pp modifier */ temp0.zz * temp0.xy;\n    // add_pp oC0.w, r0.z, r1.w\n    out_color.w = /* not implemented _pp modifier */ temp0.z + temp1.w;\n    // mov_pp r2.z, c6.x\n    temp2.z = /* not implemented _pp modifier */ float1(0);\n    // add_pp oC0.xyz, r1, r2\n    out_color.xyz = /* not implemented _pp modifier */ temp1.xyz + temp2.xyz;\n    // \n\n    return out_color;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."))}s.isMDXComponent=!0}}]);