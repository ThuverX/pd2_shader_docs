"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[71900],{3905:(e,t,r)=>{r.d(t,{Zo:()=>_,kt:()=>s});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function m(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?m(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):m(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},m=Object.keys(e);for(n=0;n<m.length;n++)r=m[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(e);for(n=0;n<m.length;n++)r=m[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var d=n.createContext({}),l=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},_=function(e){var t=l(e.components);return n.createElement(d.Provider,{value:t},e.children)},i="mdxType",x={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,m=e.originalType,d=e.parentName,_=a(e,["components","mdxType","originalType","parentName"]),i=l(r),c=o,s=i["".concat(d,".").concat(c)]||i[c]||x[c]||m;return r?n.createElement(s,p(p({ref:t},_),{},{components:r})):n.createElement(s,p({ref:t},_))}));function s(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var m=r.length,p=new Array(m);p[0]=c;var a={};for(var d in t)hasOwnProperty.call(t,d)&&(a[d]=t[d]);a.originalType=e,a[i]="string"==typeof e?e:o,p[1]=a;for(var l=2;l<m;l++)p[l]=r[l];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},90003:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>x,frontMatter:()=>m,metadata:()=>a,toc:()=>l});var n=r(87462),o=(r(67294),r(3905));const m={id:0xeab93cdd9e429000,title:"Opacity Default Cube Environment Mapping Cube Fresnel Diffuse Texture Double Sided Normalmap"},p="Opacity Default Cube Environment Mapping Cube Fresnel Diffuse Texture Double Sided Normalmap",a={unversionedId:"Generated/Shaders/Base/[4300-4400]/16913616798107210000",id:"Generated/Shaders/Base/[4300-4400]/16913616798107210000",title:"Opacity Default Cube Environment Mapping Cube Fresnel Diffuse Texture Double Sided Normalmap",description:"(opacityCUBEENVIRONMENTMAPPINGDIFFUSETEXTURENORMALMAP, 0xeab93cdd9e42927b)",source:"@site/docs/Generated/Shaders/Base/[4300-4400]/0xeab93cdd9e42927b.mdx",sourceDirName:"Generated/Shaders/Base/[4300-4400]",slug:"/Generated/Shaders/Base/[4300-4400]/16913616798107210000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[4300-4400]/16913616798107210000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/docs/Generated/Shaders/Base/[4300-4400]/0xeab93cdd9e42927b.mdx",tags:[],version:"current",frontMatter:{id:"16913616798107210000",title:"Opacity Default Cube Environment Mapping Cube Fresnel Diffuse Texture Double Sided Normalmap"},sidebar:"docsSidebar",previous:{title:"Opacity Default Ati Cube Environment Mapping Cube Fresnel Diffuse Texture Diffuse Uvanim Normalmap Normal Uvanim",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[4300-4400]/16897594754124812000"},next:{title:"Generic Shadow Caster Alpha Masked Diffuse Texture External Alpha Ref Normalmap Nvidia Rl Backdrop",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[4300-4400]/16918730239753980000"}},d={},l=[{value:"Technique <code>transparent</code>",id:"technique-transparent",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Sampler 1",id:"sampler-1",level:4},{value:"Sampler 2",id:"sampler-2",level:4},{value:"Sampler 3",id:"sampler-3",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],_={toc:l},i="wrapper";function x(e){let{components:t,...r}=e;return(0,o.kt)(i,(0,n.Z)({},_,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"opacity-default-cube-environment-mapping-cube-fresnel-diffuse-texture-double-sided-normalmap"},"Opacity Default Cube Environment Mapping Cube Fresnel Diffuse Texture Double Sided Normalmap"),(0,o.kt)("p",null,"(",(0,o.kt)("inlineCode",{parentName:"p"},"opacity:default:CUBE_ENVIRONMENT_MAPPING:CUBE_FRESNEL:DIFFUSE_TEXTURE:DOUBLE_SIDED:NORMALMAP"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"0xeab93cdd9e42927b"),")"),(0,o.kt)("h3",{id:"technique-transparent"},"Technique ",(0,o.kt)("inlineCode",{parentName:"h3"},"transparent")),(0,o.kt)("h3",{id:"render-states"},"Render States"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 0,\n    D3DRS_ALPHABLENDENABLE = 1,\n    D3DRS_CULLMODE = 1,\n    D3DRS_COLORWRITEENABLE = 7,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 1,\n    D3DRS_STENCILFUNC = 6,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 5,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 4,\n    D3DRS_STENCILWRITEMASK = 5,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n    D3DRS_BLENDOP = 1,\n    D3DRS_DESTBLEND = 6,\n    D3DRS_SRCBLEND = 5,\n};\n")),(0,o.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,o.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,o.kt)("h4",{id:"sampler-1"},"Sampler 1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,o.kt)("h4",{id:"sampler-2"},"Sampler 2"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,o.kt)("h4",{id:"sampler-3"},"Sampler 3"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,o.kt)("h3",{id:"shaders"},"Shaders"),(0,o.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"float camera_near_range : register(vs_3_0, c12);\ncolumn_major float4x4 proj_matrix : register(vs_3_0, c8);\ncolumn_major float4x4 view_matrix : register(vs_3_0, c4);\ncolumn_major float4x4 world_matrix : register(vs_3_0, c0);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 normal : NORMAL;\n    float4 texcoord1 : TEXCOORD1;\n    float4 texcoord4 : TEXCOORD4;\n    float4 texcoord : TEXCOORD;\n    float4 tangent : TANGENT;\n    float4 binormal : BINORMAL;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float4 texcoord5 : TEXCOORD5;\n    float2 texcoord1 : TEXCOORD1;\n    float3 texcoord4 : TEXCOORD4;\n    float4 texcoord : TEXCOORD;\n    float3 texcoord2 : TEXCOORD2;\n    float3 texcoord3 : TEXCOORD3;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float4 temp0, temp1;\n    // def c13, 2, -1, 0, 0\n    // dcl_position v0\n    // dcl_normal v1\n    // dcl_texcoord1 v2\n    // dcl_texcoord4 v3\n    // dcl_texcoord v4\n    // dcl_tangent v5\n    // dcl_binormal v6\n    // dcl_position o0\n    // dcl_texcoord5 o1\n    // dcl_texcoord1 o2.xy\n    // dcl_texcoord4 o3.xyz\n    // dcl_texcoord o4\n    // dcl_texcoord2 o5.xyz\n    // dcl_texcoord3 o6.xyz\n    // dp4 r0.w, v0, c3\n    temp0.w = dot(i.position, (world_matrix._m03_m13_m23_m33));\n    // dp4 r0.x, v0, c0\n    temp0.x = dot(i.position, (world_matrix._m00_m10_m20_m30));\n    // dp4 r0.y, v0, c1\n    temp0.y = dot(i.position, (world_matrix._m01_m11_m21_m31));\n    // dp4 r0.z, v0, c2\n    temp0.z = dot(i.position, (world_matrix._m02_m12_m22_m32));\n    // dp4 r1.x, r0, c4\n    temp1.x = dot(temp0, (view_matrix._m00_m10_m20_m30));\n    // dp4 r1.y, r0, c5\n    temp1.y = dot(temp0, (view_matrix._m01_m11_m21_m31));\n    // dp4 r1.z, r0, c6\n    temp1.z = dot(temp0, (view_matrix._m02_m12_m22_m32));\n    // dp4 r1.w, r0, c7\n    temp1.w = dot(temp0, (view_matrix._m03_m13_m23_m33));\n    // mov o1.xyz, r0\n    o.texcoord5.xyz = temp0.xyz;\n    // dp4 o0.x, r1, c8\n    o.position.x = dot(temp1, (proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, r1, c9\n    o.position.y = dot(temp1, (proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.w, r1, c11\n    o.position.w = dot(temp1, (proj_matrix._m03_m13_m23_m33));\n    // dp4 r0.x, r1, c10\n    temp0.x = dot(temp1, (proj_matrix._m02_m12_m22_m32));\n    // mad r0.yzw, v5.xxyz, c13.x, c13.y\n    temp0.yzw = i.tangent.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o5.x, r0.yzww, c0\n    o.texcoord2.x = dot(temp0.yzw, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o6.x, r0.yzww, c1\n    o.texcoord3.x = dot(temp0.yzw, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o3.x, r0.yzww, c2\n    o.texcoord4.x = dot(temp0.yzw, (world_matrix._m02_m12_m22_m32).xyz);\n    // mad r0.yzw, v6.xxyz, c13.x, c13.y\n    temp0.yzw = i.binormal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o5.y, -r0.yzww, c0\n    o.texcoord2.y = dot(-temp0.yzw, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o6.y, -r0.yzww, c1\n    o.texcoord3.y = dot(-temp0.yzw, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o3.y, -r0.yzww, c2\n    o.texcoord4.y = dot(-temp0.yzw, (world_matrix._m02_m12_m22_m32).xyz);\n    // mad r0.yzw, v1.xxyz, c13.x, c13.y\n    temp0.yzw = i.normal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o5.z, r0.yzww, c0\n    o.texcoord2.z = dot(temp0.yzw, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o6.z, r0.yzww, c1\n    o.texcoord3.z = dot(temp0.yzw, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o3.z, r0.yzww, c2\n    o.texcoord4.z = dot(temp0.yzw, (world_matrix._m02_m12_m22_m32).xyz);\n    // add o1.w, r0.x, c12.x\n    o.texcoord5.w = temp0.x + camera_near_range.x;\n    // mov o0.z, r0.x\n    o.position.z = temp0.x;\n    // mov o2.xy, v3\n    o.texcoord1 = i.texcoord4;\n    // mov o4.xy, v4\n    o.texcoord.xy = i.texcoord.xy;\n    // mov o4.zw, v2.xyxy\n    o.texcoord.zw = i.texcoord1.xy;\n    // \n\n    return o;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."),(0,o.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"sampler2D bump_normal_texture : register(ps_3_0, s3);\ncolumn_major float4x4 camera_world_matrix : register(ps_3_0, c0);\nsampler2D diffuse_texture : register(ps_3_0, s2);\nsampler2D opacity_texture : register(ps_3_0, s1);\nfloat3 ref_fresnel_settings : register(ps_3_0, c3);\nsamplerCUBE reflection_texture : register(ps_3_0, s0);\nstruct PixelMain_Input\n{\n    float3 texcoord5 : TEXCOORD5;\n    float3 texcoord4 : TEXCOORD4;\n    float4 texcoord : TEXCOORD;\n    float3 texcoord2 : TEXCOORD2;\n    float3 texcoord3 : TEXCOORD3;\n};\n\nfloat4 PixelMain(PixelMain_Input i) : COLOR\n{\n    float4 out_color;\n    float4 temp0, temp1, temp2, temp3;\n    // def c4, -0.5, 1, -1, 0.5773672\n    // dcl_texcoord5 v0.xyz\n    // dcl_texcoord4 v1.xyz\n    // dcl_texcoord v2\n    // dcl_texcoord2 v3.xyz\n    // dcl_texcoord3 v4.xyz\n    // dcl_cube s0\n    // dcl_2d s1\n    // dcl_2d s2\n    // dcl_2d s3\n    // texld_pp r0, v2.zwzw, s3\n    temp0 = /* not implemented _pp modifier */ tex2D(bump_normal_texture, i.texcoord.zw);\n    // add_pp r0.xy, r0.wyzw, c4.x\n    temp0.xy = /* not implemented _pp modifier */ temp0.wy + float2(-0.5, -0.5);\n    // add_pp r0.xy, r0, r0\n    temp0.xy = /* not implemented _pp modifier */ temp0.xy + temp0.xy;\n    // mul_pp r0.w, r0.x, r0.x\n    temp0.w = /* not implemented _pp modifier */ temp0.x * temp0.x;\n    // mad_pp r0.w, r0.y, r0.y, -r0.w\n    temp0.w = /* not implemented _pp modifier */ temp0.y * temp0.y + -temp0.w;\n    // add_pp r0.w, -r0.w, c4.y\n    temp0.w = /* not implemented _pp modifier */ -temp0.w + float1(1);\n    // rsq_pp r0.w, r0.w\n    temp0.w = /* not implemented _pp modifier */ 1 / sqrt(temp0.w);\n    // rcp_pp r0.z, r0.w\n    temp0.z = /* not implemented _pp modifier */ 1.0f / temp0.w;\n    // dp3 r1.x, r0, v3\n    temp1.x = dot(temp0.xyz, i.texcoord2.xyz);\n    // dp3 r1.y, r0, v4\n    temp1.y = dot(temp0.xyz, i.texcoord3.xyz);\n    // dp3 r1.z, r0, v1\n    temp1.z = dot(temp0.xyz, i.texcoord4.xyz);\n    // nrm_pp r0.xyz, r1\n    temp0.xyz = /* not implemented _pp modifier */ normalize(temp1.xyz).xyz;\n    // mov r1.x, -c0.w\n    temp1.x = -(camera_world_matrix._m00_m10_m20_m30).w;\n    // mov r1.y, -c1.w\n    temp1.y = -(camera_world_matrix._m01_m11_m21_m31).w;\n    // mov r1.z, -c2.w\n    temp1.z = -(camera_world_matrix._m02_m12_m22_m32).w;\n    // add r1.xyz, r1, v0\n    temp1.xyz = temp1.xyz + i.texcoord5.xyz;\n    // nrm r2.xyz, r1\n    temp2.xyz = normalize(temp1.xyz).xyz;\n    // dp3 r0.w, r0, -r2\n    temp0.w = dot(temp0.xyz, -temp2.xyz);\n    // add r1.x, r0.w, r0.w\n    temp1.x = temp0.w + temp0.w;\n    // mov_sat r0.w, r0.w\n    temp0.w = saturate(temp0.w);\n    // mad_pp r0.xyz, r1.x, -r0, -r2\n    temp0.xyz = /* not implemented _pp modifier */ temp1.xxx * -temp0.xyz + -temp2.xyz;\n    // texld_pp r1, r0, s0\n    temp1 = /* not implemented _pp modifier */ texCUBE(reflection_texture, temp0.xyz);\n    // texld_pp r2, v2, s2\n    temp2 = /* not implemented _pp modifier */ tex2D(diffuse_texture, i.texcoord.xy);\n    // texld_pp r3, v2, s1\n    temp3 = /* not implemented _pp modifier */ tex2D(opacity_texture, i.texcoord.xy);\n    // mad_pp oC0.xyz, r1, r3.z, r2\n    out_color.xyz = /* not implemented _pp modifier */ temp1.xyz * temp3.zzz + temp2.xyz;\n    // dp3 r0.x, r1, r1\n    temp0.x = dot(temp1.xyz, temp1.xyz);\n    // rsq r0.x, r0.x\n    temp0.x = 1 / sqrt(temp0.x);\n    // rcp r0.x, r0.x\n    temp0.x = 1.0f / temp0.x;\n    // mul_sat_pp r0.x, r0.x, c4.w\n    ;// error\n    // add r0.yw, -r0.xxzw, c4.y\n    temp0.yw = -temp0.xw + float2(1, 1);\n    // mad_pp r0.x, c3.z, r0.y, r0.x\n    temp0.x = /* not implemented _pp modifier */ ref_fresnel_settings.z * temp0.y + temp0.x;\n    // mul_pp r0.x, r0.x, r3.x\n    temp0.x = /* not implemented _pp modifier */ temp0.x * temp3.x;\n    // mov r0.y, c4.y\n    temp0.y = float1(1);\n    // add r0.z, r0.y, c3.x\n    temp0.z = temp0.y + ref_fresnel_settings.x;\n    // pow r1.x, r0.w, r0.z\n    temp1.x = pow(temp0.w, temp0.z);\n    // add r0.z, r1.x, c4.z\n    temp0.z = temp1.x + float1(-1);\n    // mad r0.y, c3.y, r0.z, r0.y\n    temp0.y = ref_fresnel_settings.y * temp0.z + temp0.y;\n    // mad_pp oC0.w, r0.x, r0.y, r3.y\n    out_color.w = /* not implemented _pp modifier */ temp0.x * temp0.y + temp3.y;\n    // \n\n    return out_color;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."))}x.isMDXComponent=!0}}]);