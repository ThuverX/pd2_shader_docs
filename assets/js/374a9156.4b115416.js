"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[78660],{3905:(e,t,n)=>{n.d(t,{Zo:()=>i,kt:()=>_});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),d=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},i=function(e){var t=d(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",x={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,i=c(e,["components","mdxType","originalType","parentName"]),m=d(n),s=o,_=m["".concat(p,".").concat(s)]||m[s]||x[s]||a;return n?r.createElement(_,l(l({ref:t},i),{},{components:n})):r.createElement(_,l({ref:t},i))}));function _(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=s;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c[m]="string"==typeof e?e:o,l[1]=c;for(var d=2;d<a;d++)l[d]=n[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},62643:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>x,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var r=n(87462),o=(n(67294),n(3905));const a={id:0x2f3b3c1e75cfc000,title:"Generic Default Alpha Masked Diffuse Texture Distance Fade 3 External Alpha Ref Opacity Texture Vertex Color"},l="Generic Default Alpha Masked Diffuse Texture Distance Fade 3 External Alpha Ref Opacity Texture Vertex Color",c={unversionedId:"Generated/Shaders/Base/[800-900]/3403380044931776500",id:"Generated/Shaders/Base/[800-900]/3403380044931776500",title:"Generic Default Alpha Masked Diffuse Texture Distance Fade 3 External Alpha Ref Opacity Texture Vertex Color",description:"(genericALPHAMASKEDDISTANCEFADE3OPACITYTEXTURE:VERTEXCOLOR, 0x2f3b3c1e75cfc09c)",source:"@site/docs/Generated/Shaders/Base/[800-900]/0x2f3b3c1e75cfc09c.mdx",sourceDirName:"Generated/Shaders/Base/[800-900]",slug:"/Generated/Shaders/Base/[800-900]/3403380044931776500",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[800-900]/3403380044931776500",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/docs/Generated/Shaders/Base/[800-900]/0x2f3b3c1e75cfc09c.mdx",tags:[],version:"current",frontMatter:{id:"3403380044931776500",title:"Generic Default Alpha Masked Diffuse Texture Distance Fade 3 External Alpha Ref Opacity Texture Vertex Color"},sidebar:"docsSidebar",previous:{title:"Generic Shadow Caster Diffuse Texture Instanced Simple Tint Vertex Color",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[800-900]/3397892562064398000"},next:{title:"Generic Default Diffuse Texture Gsma Texture Normalmap Self Illumination Self Illumination Bloom",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[800-900]/3406195741167887000"}},p={},d=[{value:"Technique <code>deferred_ambient_alpha_masked</code>",id:"technique-deferred_ambient_alpha_masked",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Sampler 1",id:"sampler-1",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],i={toc:d},m="wrapper";function x(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,r.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"generic-default-alpha-masked-diffuse-texture-distance-fade-3-external-alpha-ref-opacity-texture-vertex-color"},"Generic Default Alpha Masked Diffuse Texture Distance Fade 3 External Alpha Ref Opacity Texture Vertex Color"),(0,o.kt)("p",null,"(",(0,o.kt)("inlineCode",{parentName:"p"},"generic:default:ALPHA_MASKED:DIFFUSE_TEXTURE:DISTANCE_FADE_3:EXTERNAL_ALPHA_REF:OPACITY_TEXTURE:VERTEX_COLOR"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"0x2f3b3c1e75cfc09c"),")"),(0,o.kt)("h3",{id:"technique-deferred_ambient_alpha_masked"},"Technique ",(0,o.kt)("inlineCode",{parentName:"h3"},"deferred_ambient_alpha_masked")),(0,o.kt)("h3",{id:"render-states"},"Render States"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 1,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 2,\n    D3DRS_COLORWRITEENABLE = 15,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,o.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,o.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,o.kt)("h4",{id:"sampler-1"},"Sampler 1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 2,\n    D3DSAMP_MINFILTER = 2,\n    D3DSAMP_MIPFILTER = 2,\n};\n")),(0,o.kt)("h3",{id:"shaders"},"Shaders"),(0,o.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"float GLOBAL_fov_ratio : register(vs_3_0, c8);\nfloat camera_near_range : register(vs_3_0, c7);\ncolumn_major float4x4 view_proj_matrix : register(vs_3_0, c0);\ncolumn_major float4x4 world_matrix : register(vs_3_0, c4);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 normal : NORMAL;\n    float4 texcoord : TEXCOORD;\n    float4 color : COLOR;\n    float4 texcoord4 : TEXCOORD4;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float2 texcoord1 : TEXCOORD1;\n    float2 texcoord : TEXCOORD;\n    float3 texcoord2 : TEXCOORD2;\n    float4 color : COLOR;\n    float2 texcoord7 : TEXCOORD7;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float3 temp0;\n    // def c9, 2, -1, -3900, 0.00047619047\n    // dcl_position v0\n    // dcl_normal v1\n    // dcl_texcoord v2\n    // dcl_color v3\n    // dcl_texcoord4 v4\n    // dcl_position o0\n    // dcl_texcoord1 o1.xy\n    // dcl_texcoord o2.xy\n    // dcl_texcoord2 o3.xyz\n    // dcl_color o4\n    // dcl_texcoord7 o5.xy\n    // dp4 o0.x, v0, c0\n    o.position.x = dot(i.position, (view_proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, v0, c1\n    o.position.y = dot(i.position, (view_proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.w, v0, c3\n    o.position.w = dot(i.position, (view_proj_matrix._m03_m13_m23_m33));\n    // rsq r0.x, c8.x\n    temp0.x = 1 / sqrt(GLOBAL_fov_ratio.x);\n    // dp4 r0.y, v0, c2\n    temp0.y = dot(i.position, (view_proj_matrix._m02_m12_m22_m32));\n    // add r0.z, r0.y, c7.x\n    temp0.z = temp0.y + camera_near_range.x;\n    // mov o0.z, r0.y\n    o.position.z = temp0.y;\n    // mad r0.x, r0.z, r0.x, c9.z\n    temp0.x = temp0.z * temp0.x + float1(-3900);\n    // mov o1.x, r0.z\n    o.texcoord1.x = temp0.z;\n    // mul_sat r0.x, r0.x, c9.w\n    temp0.x = saturate(temp0.x * float1(0.00047619047));\n    // add o1.y, -r0.x, -c9.y\n    o.texcoord1.y = -temp0.x + float1(1);\n    // mad r0.xyz, v1, c9.x, c9.y\n    temp0.xyz = i.normal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o3.x, r0, c4\n    o.texcoord2.x = dot(temp0.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o3.y, r0, c5\n    o.texcoord2.y = dot(temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o3.z, r0, c6\n    o.texcoord2.z = dot(temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mov o2.xy, v2\n    o.texcoord = i.texcoord;\n    // mul o4, c9_abs.xxxy, v3\n    o.color = float4(2, 2, 2, 1) * i.color;\n    // mov o5.xy, v4\n    o.texcoord7 = i.texcoord4;\n    // \n\n    return o;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."),(0,o.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"sampler2D diffuse_texture : register(ps_3_0, s0);\nsampler2D opacity_texture : register(ps_3_0, s1);\nfloat ref_alpha_ref : register(ps_3_0, c0);\nstruct PixelMain_Input\n{\n    float2 texcoord1 : TEXCOORD1;\n    float2 texcoord : TEXCOORD;\n    float3 texcoord2 : TEXCOORD2;\n    float3 color : COLOR;\n    float2 texcoord7 : TEXCOORD7;\n    float2 vface : vFace;\n};\n\nstruct PixelMain_Output\n{\n    float4 color : COLOR;\n    float4 color1 : COLOR1;\n    float4 color2 : COLOR2;\n};\n\nPixelMain_Output PixelMain(PixelMain_Input i)\n{\n    PixelMain_Output o;\n    float4 temp0, temp1, temp2;\n    // def c1, 4, 0.25, -4, -0.25\n    // def c2, -0, -1, -2, -3\n    // def c3, 1, -1, 0.5, 0.4\n    // def c4, 0.05882353, 0.7647059, 0.23529412, 0.9411765\n    // def c5, 0.5294118, 0.29411766, 0.7058824, 0.47058824\n    // def c6, 0.1764706, 0.88235295, 0.11764706, 0.8235294\n    // def c7, 0.64705884, 0.4117647, 0.5882353, 0.3529412\n    // dcl_texcoord1 v0.xy\n    // dcl_texcoord v1.xy\n    // dcl_texcoord2_pp v2.xyz\n    // dcl_color v3.xyz\n    // dcl_texcoord7 v4.xy\n    // dcl vFace.xy\n    // dcl_2d s0\n    // dcl_2d s1\n    // cmp r0, vFace.yyxx, c1.xyxy, c1.zwzw\n    temp0 = (vFace.yyxx >= 0) ? float4(4, 0.25, 4, 0.25) : float4(-4, -0.25, -4, -0.25);\n    // mul r0.yw, r0.xwzy, vFace.xxzy\n    temp0.yw = temp0.wy * vFace.xy;\n    // frc r0.yw, r0\n    temp0.yw = frac(temp0.yw);\n    // mul r0.xy, r0.ywzw, r0.zxzw\n    temp0.xy = temp0.yw * temp0.zx;\n    // frc r0.zw, r0.xyxy\n    temp0.zw = frac(temp0.xy);\n    // add r0.xy, r0, -r0.zwzw\n    temp0.xy = temp0.xy + -temp0.zw;\n    // add r1, r0.y, c2\n    temp1 = temp0.y + float4(-0, -1, -2, -3);\n    // add r0, r0.x, c2\n    temp0 = temp0.x + float4(-0, -1, -2, -3);\n    // cmp r0, -r0_abs, -c2.y, -c2.x\n    temp0 = (-abs(temp0) >= 0) ? float4(1, 1, 1, 1) : float4(0, 0, 0, 0);\n    // cmp r1, -r1_abs, -c2.y, -c2.x\n    temp1 = (-abs(temp1) >= 0) ? float4(1, 1, 1, 1) : float4(0, 0, 0, 0);\n    // dp4 r2.x, c4, r0\n    temp2.x = dot(float4(0.05882353, 0.7647059, 0.23529412, 0.9411765), temp0);\n    // dp4 r2.y, c5, r0\n    temp2.y = dot(float4(0.5294118, 0.29411766, 0.7058824, 0.47058824), temp0);\n    // dp4 r2.z, c6, r0\n    temp2.z = dot(float4(0.1764706, 0.88235295, 0.11764706, 0.8235294), temp0);\n    // dp4 r2.w, c7, r0\n    temp2.w = dot(float4(0.64705884, 0.4117647, 0.5882353, 0.3529412), temp0);\n    // dp4 r0.x, r2, r1\n    temp0.x = dot(temp2, temp1);\n    // mul r0.x, r0.x, c0.x\n    temp0.x = temp0.x * ref_alpha_ref.x;\n    // texld_pp r1, v4, s1\n    temp1 = /* not implemented _pp modifier */ tex2D(opacity_texture, i.texcoord7.xy);\n    // mad r0.x, r1.x, v0.y, -r0.x\n    temp0.x = temp1.x * i.texcoord1.y + -temp0.x;\n    // cmp r0, r0.x, c3.x, c3.y\n    temp0 = (temp0.x >= 0) ? float4(1, 1, 1, 1) : float4(-1, -1, -1, -1);\n    // texkill r0\n    clip(temp0);\n    // texld_pp r0, v1, s0\n    temp0 = /* not implemented _pp modifier */ tex2D(diffuse_texture, i.texcoord.xy);\n    // mul_pp oC0.xyz, r0, v3\n    o.color.xyz = /* not implemented _pp modifier */ temp0.xyz * i.color.xyz;\n    // mov_pp oC1.w, r0.w\n    o.color1.w = /* not implemented _pp modifier */ temp0.w;\n    // nrm_pp r0.xyz, v2\n    temp0.xyz = /* not implemented _pp modifier */ normalize(i.texcoord2.xyz).xyz;\n    // mad_pp oC1.xyz, r0, c3.z, c3.z\n    o.color1.xyz = /* not implemented _pp modifier */ temp0.xyz * float3(0.5, 0.5, 0.5) + float3(0.5, 0.5, 0.5);\n    // mov oC0.w, c3.w\n    o.color.w = float1(0.4);\n    // mov oC2, v0.x\n    o.color2 = i.texcoord1.x;\n    // \n\n    return o;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."))}x.isMDXComponent=!0}}]);