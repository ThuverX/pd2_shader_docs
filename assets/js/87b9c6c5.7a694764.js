"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[4620],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>u});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),c=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},_=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=c(r),_=a,u=d["".concat(i,".").concat(_)]||d[_]||m[_]||o;return r?n.createElement(u,l(l({ref:t},s),{},{components:r})):n.createElement(u,l({ref:t},s))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=_;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[d]="string"==typeof e?e:a,l[1]=p;for(var c=2;c<o;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}_.displayName="MDXCreateElement"},7625:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const o={id:0x4547b81f5e400800,title:"Grayscale Default Vertex Color"},l="Grayscale Default Vertex Color",p={unversionedId:"Generated/Shaders/Filters/4992161156828236000",id:"Generated/Shaders/Filters/4992161156828236000",title:"Grayscale Default Vertex Color",description:"(grayscaleVERTEX_COLOR, 0x4547b81f5e400791)",source:"@site/docs/Generated/Shaders/Filters/0x4547b81f5e400791.mdx",sourceDirName:"Generated/Shaders/Filters",slug:"/Generated/Shaders/Filters/4992161156828236000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Filters/4992161156828236000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/Generated/Shaders/Filters/0x4547b81f5e400791.mdx",tags:[],version:"current",frontMatter:{id:"4992161156828236000",title:"Grayscale Default Vertex Color"},sidebar:"docsSidebar",previous:{title:"Scene Luminance Default",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Filters/4851809214548009000"},next:{title:"Gaussian Blur Alpha Not 0 Default",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Filters/5330468984049464000"}},i={},c=[{value:"Technique <code>ambient</code>",id:"technique-ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],s={toc:c},d="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"grayscale-default-vertex-color"},"Grayscale Default Vertex Color"),(0,a.kt)("p",null,"(",(0,a.kt)("inlineCode",{parentName:"p"},"grayscale:default:VERTEX_COLOR"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"0x4547b81f5e400791"),")"),(0,a.kt)("p",null,"This template is referenced 1 time by ",(0,a.kt)("a",{parentName:"p",href:"/docs/Generated/Render%20Templates/filters.render_template_database#grayscale-vertex-color"},"grayscale:VERTEX_COLOR"),"."),(0,a.kt)("h3",{id:"technique-ambient"},"Technique ",(0,a.kt)("inlineCode",{parentName:"h3"},"ambient")),(0,a.kt)("h3",{id:"render-states"},"Render States"),(0,a.kt)("p",null,"More info can be found on the ",(0,a.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 0,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 0,\n    D3DRS_ALPHABLENDENABLE = 1,\n    D3DRS_CULLMODE = 1,\n    D3DRS_COLORWRITEENABLE = 15,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n    D3DRS_BLENDOP = 1,\n    D3DRS_DESTBLEND = 6,\n    D3DRS_SRCBLEND = 5,\n};\n")),(0,a.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,a.kt)("p",null,"More info can be found on the ",(0,a.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,a.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 2,\n    D3DSAMP_MINFILTER = 2,\n    D3DSAMP_MIPFILTER = 2,\n};\n")),(0,a.kt)("h3",{id:"shaders"},"Shaders"),(0,a.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-hlsl"},"float3 render_target_texel_offset : register(vs_3_0, c4);\ncolumn_major float4x4 view_proj_matrix : register(vs_3_0, c0);\nfloat3 vp_offset : register(vs_3_0, c5);\nfloat3 vp_size : register(vs_3_0, c6);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 color : COLOR;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float4 texcoord1 : TEXCOORD1;\n    float4 color : COLOR;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float4 temp0, temp2;\n    float2 temp1;\n    // def c7, 2, 1, -1, 0.5\n    // dcl_position v0\n    // dcl_color v1\n    // dcl_position o0\n    // dcl_texcoord1 o1\n    // dcl_color o2\n    // mov r0, c7\n    temp0 = float4(2, 1, -1, 0.5);\n    // add r1.xy, r0.w, c4\n    temp1.xy = temp0.ww + render_target_texel_offset.xy;\n    // mul r0.yz, r0, c6.xxyw\n    temp0.yz = temp0.yz * vp_size.xy;\n    // mov r2.xy, c6\n    temp2.xy = vp_size.xy;\n    // mad r0.xw, c5.xyzy, r0.x, r2.xyzy\n    temp0.xw = vp_offset.xy * temp0.xx + temp2.xy;\n    // add r0.xw, r0, c7.z\n    temp0.xw = temp0.xw + float2(-1, -1);\n    // dp4 r2.w, v0, c3\n    temp2.w = dot(i.position, (view_proj_matrix._m03_m13_m23_m33));\n    // mul r0.xw, r0, r2.w\n    temp0.xw = temp0.xw * temp2.ww;\n    // dp4 r2.x, v0, c0\n    temp2.x = dot(i.position, (view_proj_matrix._m00_m10_m20_m30));\n    // dp4 r2.y, v0, c1\n    temp2.y = dot(i.position, (view_proj_matrix._m01_m11_m21_m31));\n    // mad r0.xy, r2, r0.yzzw, r0.xwzw\n    temp0.xy = temp2.xy * temp0.yz + temp0.xw;\n    // add r0.z, r2.w, r2.w\n    temp0.z = temp2.w + temp2.w;\n    // mad o1.xy, r0.z, r1, r0\n    o.texcoord1.xy = temp0.zz * temp1.xy + temp0.xy;\n    // dp4 r2.z, v0, c2\n    temp2.z = dot(i.position, (view_proj_matrix._m02_m12_m22_m32));\n    // mov o0, r2\n    o.position = temp2;\n    // mul o1.zw, r2, c7.xyyx\n    o.texcoord1.zw = temp2.zw * float2(1, 2);\n    // mov o2, v1\n    o.color = i.color;\n    // \n\n    return o;\n}\n")),(0,a.kt)("p",null,"Decompiled by DXDecompiler."),(0,a.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-hlsl"},"sampler2D back_buffer_copy : register(ps_3_0, s0);\nstruct PixelMain_Input\n{\n    float4 texcoord1 : TEXCOORD1;\n    float4 color : COLOR;\n};\n\nfloat4 PixelMain(PixelMain_Input i) : COLOR\n{\n    float4 out_color;\n    float4 temp0;\n    // def c0, 0.27, 0.67, 0.06, 0\n    // dcl_texcoord1 v0.xyw\n    // dcl_color v1\n    // dcl_2d s0\n    // rcp r0.x, v0.w\n    temp0.x = 1.0f / i.texcoord1.w;\n    // mul r0.xy, r0.x, v0\n    temp0.xy = temp0.xx * i.texcoord1.xy;\n    // texld r0, r0, s0\n    temp0 = tex2D(back_buffer_copy, temp0.xy);\n    // mul r0.xyz, r0, v1\n    temp0.xyz = temp0.xyz * i.color.xyz;\n    // dp3 r0.x, r0, c0\n    temp0.x = dot(temp0.xyz, float3(0.27, 0.67, 0.06));\n    // mov r0.y, v1.w\n    temp0.y = i.color.w;\n    // mov oC0, r0.xxxy\n    out_color = temp0.xxxy;\n    // \n\n    return out_color;\n}\n")),(0,a.kt)("p",null,"Decompiled by DXDecompiler."))}m.isMDXComponent=!0}}]);