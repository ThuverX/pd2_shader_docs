"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[28584],{603905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>_});var a=r(667294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function d(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),i=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},m=function(e){var t=i(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,m=d(e,["components","mdxType","originalType","parentName"]),p=i(r),u=n,_=p["".concat(s,".").concat(u)]||p[u]||c[u]||o;return r?a.createElement(_,l(l({ref:t},m),{},{components:r})):a.createElement(_,l({ref:t},m))}));function _(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=u;var d={};for(var s in t)hasOwnProperty.call(t,s)&&(d[s]=t[s]);d.originalType=e,d[p]="string"==typeof e?e:n,l[1]=d;for(var i=2;i<o;i++)l[i]=r[i];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},619535:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>d,toc:()=>i});var a=r(487462),n=(r(667294),r(603905));const o={id:0x6204c654e5fd140,title:"Landscape Shadow Caster Blend Masks Cubemap Mat0 Mat0 Blend World Mask Mat0 Nm Mat0 Uv2 Mat1 Mat1 Blend World Mask Mat1 Nm Mat1 Uv2 Overlay Over Detail World Mask A Wetness World Nm World Overlay Mask Texture World Overlay Texture World Tex Uv1"},l="Landscape Shadow Caster Blend Masks Cubemap Mat0 Mat0 Blend World Mask Mat0 Nm Mat0 Uv2 Mat1 Mat1 Blend World Mask Mat1 Nm Mat1 Uv2 Overlay Over Detail World Mask A Wetness World Nm World Overlay Mask Texture World Overlay Texture World Tex Uv1",d={unversionedId:"Generated/Shaders/Base/[100-200]/441436761472618800",id:"Generated/Shaders/Base/[100-200]/441436761472618800",title:"Landscape Shadow Caster Blend Masks Cubemap Mat0 Mat0 Blend World Mask Mat0 Nm Mat0 Uv2 Mat1 Mat1 Blend World Mask Mat1 Nm Mat1 Uv2 Overlay Over Detail World Mask A Wetness World Nm World Overlay Mask Texture World Overlay Texture World Tex Uv1",description:"(landscapeBLENDMASKSMAT0MAT0NMMAT1MAT1NMOVERLAYOVERDETAILWORLDNMWORLDOVERLAYTEXTURE:WORLDTEX_UV1, 0x6204c654e5fd154)",source:"@site/docs/Generated/Shaders/Base/[100-200]/0x6204c654e5fd154.mdx",sourceDirName:"Generated/Shaders/Base/[100-200]",slug:"/Generated/Shaders/Base/[100-200]/441436761472618800",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[100-200]/441436761472618800",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/Generated/Shaders/Base/[100-200]/0x6204c654e5fd154.mdx",tags:[],version:"current",frontMatter:{id:"441436761472618800",title:"Landscape Shadow Caster Blend Masks Cubemap Mat0 Mat0 Blend World Mask Mat0 Nm Mat0 Uv2 Mat1 Mat1 Blend World Mask Mat1 Nm Mat1 Uv2 Overlay Over Detail World Mask A Wetness World Nm World Overlay Mask Texture World Overlay Texture World Tex Uv1"},sidebar:"docsSidebar",previous:{title:"Generic Shadow Caster Contour Nvidia Vertex Color",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[100-200]/440722577606671170"},next:{title:"Shadow Caster Only Shadow Caster Nvidia Shadow Caster Only Skinned 2weights",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[100-200]/444046694660142140"}},s={},i=[{value:"Technique <code>ambient</code>",id:"technique-ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],m={toc:i},p="wrapper";function c(e){let{components:t,...r}=e;return(0,n.kt)(p,(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"landscape-shadow-caster-blend-masks-cubemap-mat0-mat0-blend-world-mask-mat0-nm-mat0-uv2-mat1-mat1-blend-world-mask-mat1-nm-mat1-uv2-overlay-over-detail-world-mask-a-wetness-world-nm-world-overlay-mask-texture-world-overlay-texture-world-tex-uv1"},"Landscape Shadow Caster Blend Masks Cubemap Mat0 Mat0 Blend World Mask Mat0 Nm Mat0 Uv2 Mat1 Mat1 Blend World Mask Mat1 Nm Mat1 Uv2 Overlay Over Detail World Mask A Wetness World Nm World Overlay Mask Texture World Overlay Texture World Tex Uv1"),(0,n.kt)("p",null,"(",(0,n.kt)("inlineCode",{parentName:"p"},"landscape:shadow_caster:BLEND_MASKS:CUBEMAP:MAT0:MAT0_BLEND_WORLD_MASK:MAT0_NM:MAT0_UV2:MAT1:MAT1_BLEND_WORLD_MASK:MAT1_NM:MAT1_UV2:OVERLAY_OVER_DETAIL:WORLD_MASK_A_WETNESS:WORLD_NM:WORLD_OVERLAY_MASK_TEXTURE:WORLD_OVERLAY_TEXTURE:WORLD_TEX_UV1"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"0x6204c654e5fd154"),")"),(0,n.kt)("p",null,"This template is referenced 1 time by ",(0,n.kt)("a",{parentName:"p",href:"/docs/Generated/Render%20Templates/base.render_template_database#landscape-blend-masks-cubemap-mat0-mat0-blend-world-mask-mat0-nm-mat0-uv2-mat1-mat1-blend-world-mask-mat1-nm-mat1-uv2-overlay-over-detail-world-mask-a-wetness-world-nm-world-overlay-mask-texture-world-overlay-texture-world-tex-uv1"},"landscape:BLEND_MASKS:CUBEMAP:MAT0:MAT0_BLEND_WORLD_MASK:MAT0_NM:MAT0_UV2:MAT1:MAT1_BLEND_WORLD_MASK:MAT1_NM:MAT1_UV2:OVERLAY_OVER_DETAIL:WORLD_MASK_A_WETNESS:WORLD_NM:WORLD_OVERLAY_MASK_TEXTURE:WORLD_OVERLAY_TEXTURE:WORLD_TEX_UV1"),".\nThis template uses the following inputs:\n|Name|UI Name|Type|\n|---|---|---|\n|world_overlay_texture|World Overlay Texture|texture|\n|world_overlay_mask_texture|World Mask Texture|texture|\n|bump_normal_texture|World Normal Map|texture|\n|reflection_texture|Reflection Cube|texture|\n|diffuse_layer0_texture|Diffuse Texture Layer 0 ","[mask.r]"," (UV2 else UV1)|texture|\n|normal_layer0_texture|Normal Map Layer 0 ","[mask.r]"," (UV2 else UV1)|texture|\n|diffuse_layer1_texture|Diffuse Texture Layer 1 ","[mask.g]"," (UV2 else UV1)|texture|\n|normal_layer1_texture|Normal Map Layer 1 ","[mask.g]"," (UV2 else UV1)|texture|\n|specular_power|Glossiness|scalar|\n|detail_fadeout|Detail Fade Out (start, end)|vector3|\n|mask_weight|Detail Texture Masks Weighting|vector3|."),(0,n.kt)("h3",{id:"technique-ambient"},"Technique ",(0,n.kt)("inlineCode",{parentName:"h3"},"ambient")),(0,n.kt)("h3",{id:"render-states"},"Render States"),(0,n.kt)("p",null,"More info can be found on the ",(0,n.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 1,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 2,\n    D3DRS_COLORWRITEENABLE = 15,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 961656599,\n    D3DRS_SLOPESCALEDEPTHBIAS = 1075838976,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,n.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,n.kt)("p",null,"More info can be found on the ",(0,n.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,n.kt)("h3",{id:"shaders"},"Shaders"),(0,n.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x4 view_proj_matrix : register(vs_3_0, c0);\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float texcoord1 : TEXCOORD1;\n};\n\nVertexMain_Output VertexMain(float4 position : POSITION)\n{\n    VertexMain_Output o;\n    float temp0;\n    // dcl_position v0\n    // dcl_position o0\n    // dcl_texcoord1 o1.x\n    // dp4 o0.x, v0, c0\n    o.position.x = dot(position, (view_proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, v0, c1\n    o.position.y = dot(position, (view_proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.w, v0, c3\n    o.position.w = dot(position, (view_proj_matrix._m03_m13_m23_m33));\n    // dp4 r0.x, v0, c2\n    temp0.x = dot(position, (view_proj_matrix._m02_m12_m22_m32));\n    // mov o0.z, r0.x\n    o.position.z = temp0.x;\n    // mov o1.x, r0.x\n    o.texcoord1 = temp0.x;\n    // \n\n    return o;\n}\n")),(0,n.kt)("p",null,"Decompiled by DXDecompiler."),(0,n.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-hlsl"},"float4 PixelMain(float texcoord1 : TEXCOORD1) : COLOR\n{\n    float4 out_color;\n    // def c0, 1, 0, 0, 0\n    // dcl_texcoord1 v0.x\n    // mul oC0, c0.xyyy, v0.x\n    out_color = float4(1, 0, 0, 0) * texcoord1.x;\n    // \n\n    return out_color;\n}\n")),(0,n.kt)("p",null,"Decompiled by DXDecompiler."))}c.isMDXComponent=!0}}]);