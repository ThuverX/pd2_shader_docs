"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[14910],{3905:(e,t,r)=>{r.d(t,{Zo:()=>_,kt:()=>D});var n=r(67294);function p(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function m(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){p(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,p=function(e,t){if(null==e)return{};var r,n,p={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(p[r]=e[r]);return p}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(p[r]=e[r])}return p}var l=n.createContext({}),d=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):m(m({},t),e)),r},_=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},i="mdxType",x={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,p=e.mdxType,a=e.originalType,l=e.parentName,_=o(e,["components","mdxType","originalType","parentName"]),i=d(r),s=p,D=i["".concat(l,".").concat(s)]||i[s]||x[s]||a;return r?n.createElement(D,m(m({ref:t},_),{},{components:r})):n.createElement(D,m({ref:t},_))}));function D(e,t){var r=arguments,p=t&&t.mdxType;if("string"==typeof e||p){var a=r.length,m=new Array(a);m[0]=s;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[i]="string"==typeof e?e:p,m[1]=o;for(var d=2;d<a;d++)m[d]=r[d];return n.createElement.apply(null,m)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},85798:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>m,default:()=>x,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var n=r(87462),p=(r(67294),r(3905));const a={id:0xc5d1c80bd630a800,title:"Landscape Default Blend Masks Cubemap Mat0 Mat0 Blend World Mask Mat0 Nm Mat0 Uv2 Mat1 Mat1 Blend World Mask Mat1 Nm Mat1 Uv2 Mat2 Mat2 Blend World Mask Mat2 Nm Mat2 Uv2 Mat3 Mat3 Blend World Mask Mat3 Nm Mat3 Uv2 Overlay Over Detail World Mask A Wetness World Overlay Mask Texture World Overlay Texture World Tex Uv1"},m="Landscape Default Blend Masks Cubemap Mat0 Mat0 Blend World Mask Mat0 Nm Mat0 Uv2 Mat1 Mat1 Blend World Mask Mat1 Nm Mat1 Uv2 Mat2 Mat2 Blend World Mask Mat2 Nm Mat2 Uv2 Mat3 Mat3 Blend World Mask Mat3 Nm Mat3 Uv2 Overlay Over Detail World Mask A Wetness World Overlay Mask Texture World Overlay Texture World Tex Uv1",o={unversionedId:"Generated/Shaders/Base/[3700-3800]/14254394248768039000",id:"Generated/Shaders/Base/[3700-3800]/14254394248768039000",title:"Landscape Default Blend Masks Cubemap Mat0 Mat0 Blend World Mask Mat0 Nm Mat0 Uv2 Mat1 Mat1 Blend World Mask Mat1 Nm Mat1 Uv2 Mat2 Mat2 Blend World Mask Mat2 Nm Mat2 Uv2 Mat3 Mat3 Blend World Mask Mat3 Nm Mat3 Uv2 Overlay Over Detail World Mask A Wetness World Overlay Mask Texture World Overlay Texture World Tex Uv1",description:"(landscapeBLENDMASKSMAT0MAT0NMMAT1MAT1NMMAT2MAT2NMMAT3MAT3NMOVERLAYOVERDETAILWORLDOVERLAYMASKTEXTUREWORLDTEX_UV1, 0xc5d1c80bd630a4e7)",source:"@site/docs/Generated/Shaders/Base/[3700-3800]/0xc5d1c80bd630a4e7.mdx",sourceDirName:"Generated/Shaders/Base/[3700-3800]",slug:"/Generated/Shaders/Base/[3700-3800]/14254394248768039000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[3700-3800]/14254394248768039000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/docs/Generated/Shaders/Base/[3700-3800]/0xc5d1c80bd630a4e7.mdx",tags:[],version:"current",frontMatter:{id:"14254394248768039000",title:"Landscape Default Blend Masks Cubemap Mat0 Mat0 Blend World Mask Mat0 Nm Mat0 Uv2 Mat1 Mat1 Blend World Mask Mat1 Nm Mat1 Uv2 Mat2 Mat2 Blend World Mask Mat2 Nm Mat2 Uv2 Mat3 Mat3 Blend World Mask Mat3 Nm Mat3 Uv2 Overlay Over Detail World Mask A Wetness World Overlay Mask Texture World Overlay Texture World Tex Uv1"},sidebar:"docsSidebar",previous:{title:"Generic Shadow Caster Contour Diffuse Texture Global Environment Mapping Gloss Blurs Cubemap Gsma Texture Normalmap Nvidia Rl Civilians Skinned 3weights",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[3700-3800]/14238402077278196000"},next:{title:"Generic Shadow Caster Align Normal World Z Alpha Masked Diffuse Texture Double Sided External Alpha Ref Instanced Vegetation Bending",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[3700-3800]/14255067353135903000"}},l={},d=[{value:"Technique <code>deferred_ambient</code>",id:"technique-deferred_ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Sampler 1",id:"sampler-1",level:4},{value:"Sampler 2",id:"sampler-2",level:4},{value:"Sampler 3",id:"sampler-3",level:4},{value:"Sampler 4",id:"sampler-4",level:4},{value:"Sampler 5",id:"sampler-5",level:4},{value:"Sampler 6",id:"sampler-6",level:4},{value:"Sampler 7",id:"sampler-7",level:4},{value:"Sampler 8",id:"sampler-8",level:4},{value:"Sampler 9",id:"sampler-9",level:4},{value:"Sampler 10",id:"sampler-10",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],_={toc:d},i="wrapper";function x(e){let{components:t,...r}=e;return(0,p.kt)(i,(0,n.Z)({},_,r,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"landscape-default-blend-masks-cubemap-mat0-mat0-blend-world-mask-mat0-nm-mat0-uv2-mat1-mat1-blend-world-mask-mat1-nm-mat1-uv2-mat2-mat2-blend-world-mask-mat2-nm-mat2-uv2-mat3-mat3-blend-world-mask-mat3-nm-mat3-uv2-overlay-over-detail-world-mask-a-wetness-world-overlay-mask-texture-world-overlay-texture-world-tex-uv1"},"Landscape Default Blend Masks Cubemap Mat0 Mat0 Blend World Mask Mat0 Nm Mat0 Uv2 Mat1 Mat1 Blend World Mask Mat1 Nm Mat1 Uv2 Mat2 Mat2 Blend World Mask Mat2 Nm Mat2 Uv2 Mat3 Mat3 Blend World Mask Mat3 Nm Mat3 Uv2 Overlay Over Detail World Mask A Wetness World Overlay Mask Texture World Overlay Texture World Tex Uv1"),(0,p.kt)("p",null,"(",(0,p.kt)("inlineCode",{parentName:"p"},"landscape:default:BLEND_MASKS:CUBEMAP:MAT0:MAT0_BLEND_WORLD_MASK:MAT0_NM:MAT0_UV2:MAT1:MAT1_BLEND_WORLD_MASK:MAT1_NM:MAT1_UV2:MAT2:MAT2_BLEND_WORLD_MASK:MAT2_NM:MAT2_UV2:MAT3:MAT3_BLEND_WORLD_MASK:MAT3_NM:MAT3_UV2:OVERLAY_OVER_DETAIL:WORLD_MASK_A_WETNESS:WORLD_OVERLAY_MASK_TEXTURE:WORLD_OVERLAY_TEXTURE:WORLD_TEX_UV1"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"0xc5d1c80bd630a4e7"),")"),(0,p.kt)("h3",{id:"technique-deferred_ambient"},"Technique ",(0,p.kt)("inlineCode",{parentName:"h3"},"deferred_ambient")),(0,p.kt)("h3",{id:"render-states"},"Render States"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 1,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 2,\n    D3DRS_COLORWRITEENABLE = 15,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,p.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,p.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,p.kt)("h4",{id:"sampler-1"},"Sampler 1"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,p.kt)("h4",{id:"sampler-2"},"Sampler 2"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,p.kt)("h4",{id:"sampler-3"},"Sampler 3"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,p.kt)("h4",{id:"sampler-4"},"Sampler 4"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,p.kt)("h4",{id:"sampler-5"},"Sampler 5"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,p.kt)("h4",{id:"sampler-6"},"Sampler 6"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,p.kt)("h4",{id:"sampler-7"},"Sampler 7"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,p.kt)("h4",{id:"sampler-8"},"Sampler 8"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,p.kt)("h4",{id:"sampler-9"},"Sampler 9"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,p.kt)("h4",{id:"sampler-10"},"Sampler 10"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,p.kt)("h3",{id:"shaders"},"Shaders"),(0,p.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-hlsl"},"float GLOBAL_fov_ratio : register(vs_3_0, c8);\nfloat camera_near_range : register(vs_3_0, c7);\ncolumn_major float4x4 view_proj_matrix : register(vs_3_0, c0);\ncolumn_major float4x4 world_matrix : register(vs_3_0, c4);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 normal : NORMAL;\n    float4 texcoord : TEXCOORD;\n    float4 texcoord1 : TEXCOORD1;\n    float4 tangent : TANGENT;\n    float4 binormal : BINORMAL;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float4 texcoord : TEXCOORD;\n    float4 texcoord1 : TEXCOORD1;\n    float3 texcoord2 : TEXCOORD2;\n    float3 texcoord3 : TEXCOORD3;\n    float3 texcoord4 : TEXCOORD4;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float3 temp0, temp1;\n    // def c9, 2, -1, 0, 0\n    // dcl_position v0\n    // dcl_normal v1\n    // dcl_texcoord v2\n    // dcl_texcoord1 v3\n    // dcl_tangent v4\n    // dcl_binormal v5\n    // dcl_position o0\n    // dcl_texcoord o2\n    // dcl_texcoord1 o3\n    // dcl_texcoord2 o4.xyz\n    // dcl_texcoord3 o5.xyz\n    // dcl_texcoord4 o6.xyz\n    // dp4 o0.x, v0, c0\n    o.position.x = dot(i.position, (view_proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, v0, c1\n    o.position.y = dot(i.position, (view_proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.w, v0, c3\n    o.position.w = dot(i.position, (view_proj_matrix._m03_m13_m23_m33));\n    // rsq r0.x, c8.x\n    temp0.x = 1 / sqrt(GLOBAL_fov_ratio.x);\n    // dp4 r0.y, v0, c2\n    temp0.y = dot(i.position, (view_proj_matrix._m02_m12_m22_m32));\n    // mad o3.w, r0.y, r0.x, c7.x\n    o.texcoord1.w = temp0.y * temp0.x + camera_near_range.x;\n    // mov o0.z, r0.y\n    o.position.z = temp0.y;\n    // mad r0.xyz, v4, c9.x, c9.y\n    temp0.xyz = i.tangent.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o5.x, r0, c5\n    o.texcoord3.x = dot(temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o6.x, r0, c6\n    o.texcoord4.x = dot(temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mad r0.xyz, v5, c9.x, c9.y\n    temp0.xyz = i.binormal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o5.y, -r0, c5\n    o.texcoord3.y = dot(-temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o6.y, -r0, c6\n    o.texcoord4.y = dot(-temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mad r0.xyz, v1, c9.x, c9.y\n    temp0.xyz = i.normal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 r1.x, r0, c4\n    temp1.x = dot(temp0.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 r1.y, r0, c5\n    temp1.y = dot(temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 r1.z, r0, c6\n    temp1.z = dot(temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // dp3 r0.x, r1, r1\n    temp0.x = dot(temp1.xyz, temp1.xyz);\n    // rsq r0.x, r0.x\n    temp0.x = 1 / sqrt(temp0.x);\n    // mul o4.xyz, r0.x, r1\n    o.texcoord2 = temp0.x * temp1;\n    // mov o5.z, r1.y\n    o.texcoord3.z = temp1.y;\n    // mov o6.z, r1.z\n    o.texcoord4.z = temp1.z;\n    // dp4 o3.x, v0, c4\n    o.texcoord1.x = dot(i.position, (world_matrix._m00_m10_m20_m30));\n    // dp4 o3.y, v0, c5\n    o.texcoord1.y = dot(i.position, (world_matrix._m01_m11_m21_m31));\n    // dp4 o3.z, v0, c6\n    o.texcoord1.z = dot(i.position, (world_matrix._m02_m12_m22_m32));\n    // mov o2.xy, v2\n    o.texcoord.xy = i.texcoord.xy;\n    // mov o2.zw, v3.xyxy\n    o.texcoord.zw = i.texcoord1.xy;\n    // \n\n    return o;\n}\n")),(0,p.kt)("p",null,"Decompiled by DXDecompiler."),(0,p.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x4 camera_world_matrix : register(ps_3_0, c0);\nsampler2D diffuse_layer0_texture : register(ps_3_0, s3);\nsampler2D diffuse_layer1_texture : register(ps_3_0, s5);\nsampler2D diffuse_layer2_texture : register(ps_3_0, s7);\nsampler2D diffuse_layer3_texture : register(ps_3_0, s9);\nsampler2D normal_layer0_texture : register(ps_3_0, s4);\nsampler2D normal_layer1_texture : register(ps_3_0, s6);\nsampler2D normal_layer2_texture : register(ps_3_0, s8);\nsampler2D normal_layer3_texture : register(ps_3_0, s10);\nfloat3 ref_detail_fadeout : register(ps_3_0, c4);\nfloat3 ref_mask_weight : register(ps_3_0, c5);\nfloat ref_specular_power : register(ps_3_0, c3);\nsamplerCUBE reflection_texture : register(ps_3_0, s2);\nsampler2D world_overlay_mask_texture : register(ps_3_0, s1);\nsampler2D world_overlay_texture : register(ps_3_0, s0);\nstruct PixelMain_Input\n{\n    float4 texcoord : TEXCOORD;\n    float4 texcoord1 : TEXCOORD1;\n    float3 texcoord2 : TEXCOORD2;\n};\n\nstruct PixelMain_Output\n{\n    float4 color1 : COLOR1;\n    float4 color : COLOR;\n    float4 color2 : COLOR2;\n};\n\nPixelMain_Output PixelMain(PixelMain_Input i)\n{\n    PixelMain_Output o;\n    float4 temp0, temp1, temp2, temp3, temp4, temp5, temp6, temp7, temp8, temp9, temp10, temp11, temp12;\n    // def c6, 5, 2.5, 0.75, 0.8\n    // def c7, -2, 3, 0.75, 1\n    // def c8, -0.1, 1.1111112, 0, 1\n    // def c9, 2.2, 1, 8, 0.5\n    // def c10, 7, 0, 0, 0\n    // dcl_texcoord v0\n    // dcl_texcoord1 v1\n    // dcl_texcoord2_pp v2.xyz\n    // dcl_2d s0\n    // dcl_2d s1\n    // dcl_cube s2\n    // dcl_2d s3\n    // dcl_2d s4\n    // dcl_2d s5\n    // dcl_2d s6\n    // dcl_2d s7\n    // dcl_2d s8\n    // dcl_2d s9\n    // dcl_2d s10\n    // texld_pp r0, v0, s0\n    temp0 = /* not implemented _pp modifier */ tex2D(world_overlay_texture, i.texcoord.xy);\n    // log r1.x, r0.x\n    temp1.x = log2(temp0.x);\n    // log r1.y, r0.y\n    temp1.y = log2(temp0.y);\n    // log r1.z, r0.z\n    temp1.z = log2(temp0.z);\n    // mul r1.xyz, r1, c9.x\n    temp1.xyz = temp1.xyz * float3(2.2, 2.2, 2.2);\n    // exp_pp r2.x, r1.x\n    temp2.x = /* not implemented _pp modifier */ exp2(temp1.x);\n    // exp_pp r2.y, r1.y\n    temp2.y = /* not implemented _pp modifier */ exp2(temp1.y);\n    // exp_pp r2.z, r1.z\n    temp2.z = /* not implemented _pp modifier */ exp2(temp1.z);\n    // if_lt v1.w, c4.y\n    if (i.texcoord1.w < ref_detail_fadeout.y) {\n        // add r1.x, -c4.x, v1.w\n        temp1.x = -ref_detail_fadeout.x + i.texcoord1.w;\n        // add r1.y, -c4.x, c4.y\n        temp1.y = -ref_detail_fadeout.x + ref_detail_fadeout.y;\n        // rcp r1.y, r1.y\n        temp1.y = 1.0f / temp1.y;\n        // mad_sat_pp r1.y, r1.x, -r1.y, c9.y\n        ;// error\n        // cmp_pp r1.x, r1.x, r1.y, c9.y\n        temp1.x = /* not implemented _pp modifier */ (temp1.x >= 0) ? temp1.y : float1(1);\n        // texld_pp r3, v0, s1\n        temp3 = /* not implemented _pp modifier */ tex2D(world_overlay_mask_texture, i.texcoord.xy);\n        // texld_pp r4, v0.zwzw, s3\n        temp4 = /* not implemented _pp modifier */ tex2D(diffuse_layer0_texture, i.texcoord.zw);\n        // texld_pp r5, v0.zwzw, s5\n        temp5 = /* not implemented _pp modifier */ tex2D(diffuse_layer1_texture, i.texcoord.zw);\n        // texld_pp r6, v0.zwzw, s7\n        temp6 = /* not implemented _pp modifier */ tex2D(diffuse_layer2_texture, i.texcoord.zw);\n        // texld_pp r7, v0.zwzw, s9\n        temp7 = /* not implemented _pp modifier */ tex2D(diffuse_layer3_texture, i.texcoord.zw);\n        // texld_pp r8, v0.zwzw, s4\n        temp8 = /* not implemented _pp modifier */ tex2D(normal_layer0_texture, i.texcoord.zw);\n        // texld_pp r9, v0.zwzw, s6\n        temp9 = /* not implemented _pp modifier */ tex2D(normal_layer1_texture, i.texcoord.zw);\n        // texld_pp r10, v0.zwzw, s8\n        temp10 = /* not implemented _pp modifier */ tex2D(normal_layer2_texture, i.texcoord.zw);\n        // texld_pp r11, v0.zwzw, s10\n        temp11 = /* not implemented _pp modifier */ tex2D(normal_layer3_texture, i.texcoord.zw);\n        // add_pp r1.z, -r4.w, c9.y\n        temp1.z = /* not implemented _pp modifier */ -temp4.w + float1(1);\n        // lrp r12.x, c5.x, r5.w, r1.z\n        temp12.x = lerp(temp1.z, temp5.w, ref_mask_weight.x);\n        // lrp r12.y, c5.y, r12.x, r6.w\n        temp12.y = lerp(temp6.w, temp12.x, ref_mask_weight.y);\n        // add r1.z, r7.w, -r12.y\n        temp1.z = temp7.w + -temp12.y;\n        // mad r12.z, c5.z, r1.z, r12.y\n        temp12.z = ref_mask_weight.z * temp1.z + temp12.y;\n        // mul_pp r1.z, r4.w, r5.w\n        temp1.z = /* not implemented _pp modifier */ temp4.w * temp5.w;\n        // mul_pp r1.z, r6.w, r1.z\n        temp1.z = /* not implemented _pp modifier */ temp6.w * temp1.z;\n        // mul_pp r1.z, r7.w, r1.z\n        temp1.z = /* not implemented _pp modifier */ temp7.w * temp1.z;\n        // mul_sat_pp r1.z, r1.z, c9.z\n        ;// error\n        // mad r12.w, r1.z, -c9.w, c9.y\n        temp12.w = temp1.z * float1(-0.5) + float1(1);\n        // add r12, -r12, c9.y\n        temp12 = -temp12 + float4(1, 1, 1, 1);\n        // mov_pp r3.w, r0.w\n        temp3.w = /* not implemented _pp modifier */ temp0.w;\n        // add r3, -r12, r3\n        temp3 = -temp12 + temp3;\n        // mul_sat_pp r3, r3, c6.x\n        ;// error\n        // lrp_pp r12.xyz, r3.x, r5, r4\n        temp12.xyz = /* not implemented _pp modifier */ lerp(temp4.xyz, temp5.xyz, temp3.xxx);\n        // lrp_pp r1.zw, r3.x, r9.xywy, r8.xywy\n        temp1.zw = /* not implemented _pp modifier */ lerp(temp8.wy, temp9.wy, temp3.xx);\n        // lrp_pp r4.xyz, r3.y, r6, r12\n        temp4.xyz = /* not implemented _pp modifier */ lerp(temp12.xyz, temp6.xyz, temp3.yyy);\n        // lrp_pp r5.xy, r3.y, r10.wyzw, r1.zwzw\n        temp5.xy = /* not implemented _pp modifier */ lerp(temp1.zw, temp10.wy, temp3.yy);\n        // lrp_pp r6.xyz, r3.z, r7, r4\n        temp6.xyz = /* not implemented _pp modifier */ lerp(temp4.xyz, temp7.xyz, temp3.zzz);\n        // lrp_pp r1.zw, r3.z, r11.xywy, r5.xyxy\n        temp1.zw = /* not implemented _pp modifier */ lerp(temp5.xy, temp11.wy, temp3.zz);\n        // mul_pp r0.xyz, r0, r6\n        temp0.xyz = /* not implemented _pp modifier */ temp0.xyz * temp6.xyz;\n        // mad r0.xyz, r0, c6.y, -r2\n        temp0.xyz = temp0.xyz * float3(2.5, 2.5, 2.5) + -temp2.xyz;\n        // mad_pp r0.xyz, r1.y, r0, r2\n        temp0.xyz = /* not implemented _pp modifier */ temp1.yyy * temp0.xyz + temp2.xyz;\n        // add_pp r1.zw, r1, -c9.w\n        temp1.zw = /* not implemented _pp modifier */ temp1.zw + float2(-0.5, -0.5);\n        // add_pp r3.xy, r1.zwzw, r1.zwzw\n        temp3.xy = /* not implemented _pp modifier */ temp1.zw + temp1.zw;\n        // mul_pp r1.z, r3.x, r3.x\n        temp1.z = /* not implemented _pp modifier */ temp3.x * temp3.x;\n        // mad_pp r1.z, r3.y, r3.y, -r1.z\n        temp1.z = /* not implemented _pp modifier */ temp3.y * temp3.y + -temp1.z;\n        // add_pp r1.z, -r1.z, c9.y\n        temp1.z = /* not implemented _pp modifier */ -temp1.z + float1(1);\n        // rsq_pp r1.z, r1.z\n        temp1.z = /* not implemented _pp modifier */ 1 / sqrt(temp1.z);\n        // rcp_pp r3.z, r1.z\n        temp3.z = /* not implemented _pp modifier */ 1.0f / temp1.z;\n        // lrp_pp r4.xyz, r1.x, r3, v2\n        temp4.xyz = /* not implemented _pp modifier */ lerp(i.texcoord2.xyz, temp3.xyz, temp1.xxx);\n        // add_sat r1.x, r3.w, c3.x\n        temp1.x = saturate(temp3.w + ref_specular_power.x);\n        // mul r1.z, r1.x, c6.z\n        temp1.z = temp1.x * float1(0.75);\n        // mul_pp r1.y, r1.y, r3.w\n        temp1.y = /* not implemented _pp modifier */ temp1.y * temp3.w;\n        // mul r1.y, r1.y, c6.w\n        temp1.y = temp1.y * float1(0.8);\n        // add r1.w, r3.w, c8.x\n        temp1.w = temp3.w + float1(-0.1);\n        // mul r1.w, r1.w, c8.y\n        temp1.w = temp1.w * float1(1.1111112);\n        // max r2.w, r1.w, c8.z\n        temp2.w = max(temp1.w, float1(0));\n        // mad r1.w, r2.w, c7.x, c7.y\n        temp1.w = temp2.w * float1(-2) + float1(3);\n        // mul r2.w, r2.w, r2.w\n        temp2.w = temp2.w * temp2.w;\n        // mul r1.w, r1.w, r2.w\n        temp1.w = temp1.w * temp2.w;\n        // add_sat_pp oC1.w, r0.w, r3.w\n        ;// error\n        // lrp_pp r3.xyz, r1.w, c8.zzww, r4\n        temp3.xyz = /* not implemented _pp modifier */ lerp(temp4.xyz, float3(0, 0, 1), temp1.www);\n        // add r4.x, c0.w, -v1.x\n        temp4.x = (camera_world_matrix._m00_m10_m20_m30).w + -i.texcoord1.x;\n        // add r4.y, c1.w, -v1.y\n        temp4.y = (camera_world_matrix._m01_m11_m21_m31).w + -i.texcoord1.y;\n        // add r4.z, c2.w, -v1.z\n        temp4.z = (camera_world_matrix._m02_m12_m22_m32).w + -i.texcoord1.z;\n        // nrm r5.xyz, r4\n        temp5.xyz = normalize(temp4.xyz).xyz;\n        // dp3 r1.w, r3, r5\n        temp1.w = dot(temp3.xyz, temp5.xyz);\n        // add r2.w, r1.w, r1.w\n        temp2.w = temp1.w + temp1.w;\n        // mad r4.xyz, r2.w, -r3, r5\n        temp4.xyz = temp2.www * -temp3.xyz + temp5.xyz;\n        // mov_sat r1.w, r1.w\n        temp1.w = saturate(temp1.w);\n        // add r1.w, -r1.w, c9.y\n        temp1.w = -temp1.w + float1(1);\n        // mad r1.x, r1.x, -c7.z, c7.w\n        temp1.x = temp1.x * float1(-0.75) + float1(1);\n        // mul r1.x, r1.x, c10.x\n        temp1.x = temp1.x * float1(7);\n        // frc r2.w, r1.x\n        temp2.w = frac(temp1.x);\n        // add r4.w, r1.x, -r2.w\n        temp4.w = temp1.x + -temp2.w;\n        // texldl r4, r4, s2\n        temp4 = texCUBElod(reflection_texture, temp4);\n        // mul r4.xyz, r1.y, r4\n        temp4.xyz = temp1.yyy * temp4.xyz;\n        // mad_sat_pp oC0.xyz, r4, r1.w, r0\n        ;// error\n        // mov_pp oC0.w, r1.z\n        o.color.w = /* not implemented _pp modifier */ temp1.z;\n        // else\n    } else {\n        // mov_pp oC0.w, c3.x\n        o.color.w = /* not implemented _pp modifier */ ref_specular_power.x;\n        // mov_pp oC0.xyz, r2\n        o.color.xyz = /* not implemented _pp modifier */ temp2.xyz;\n        // mov_pp r3.xyz, v2\n        temp3.xyz = /* not implemented _pp modifier */ i.texcoord2.xyz;\n        // mov_pp oC1.w, r0.w\n        o.color1.w = /* not implemented _pp modifier */ temp0.w;\n        // endif\n    }\n    // mad_pp oC1.xyz, r3, c9.w, c9.w\n    o.color1.xyz = /* not implemented _pp modifier */ temp3.xyz * float3(0.5, 0.5, 0.5) + float3(0.5, 0.5, 0.5);\n    // mul oC2, c8.wzzz, v1.w\n    o.color2 = float4(1, 0, 0, 0) * i.texcoord1.w;\n    // \n\n    return o;\n}\n")),(0,p.kt)("p",null,"Decompiled by DXDecompiler."))}x.isMDXComponent=!0}}]);