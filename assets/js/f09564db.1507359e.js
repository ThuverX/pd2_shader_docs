"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[52824],{3905:(e,t,r)=>{r.d(t,{Zo:()=>_,kt:()=>s});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},p=Object.keys(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var m=n.createContext({}),d=function(e){var t=n.useContext(m),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},_=function(e){var t=d(e.components);return n.createElement(m.Provider,{value:t},e.children)},i="mdxType",x={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},D=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,p=e.originalType,m=e.parentName,_=l(e,["components","mdxType","originalType","parentName"]),i=d(r),D=a,s=i["".concat(m,".").concat(D)]||i[D]||x[D]||p;return r?n.createElement(s,o(o({ref:t},_),{},{components:r})):n.createElement(s,o({ref:t},_))}));function s(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var p=r.length,o=new Array(p);o[0]=D;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l[i]="string"==typeof e?e:a,o[1]=l;for(var d=2;d<p;d++)o[d]=r[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}D.displayName="MDXCreateElement"},98516:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>m,contentTitle:()=>o,default:()=>x,frontMatter:()=>p,metadata:()=>l,toc:()=>d});var n=r(87462),a=(r(67294),r(3905));const p={id:0xd03a46efac489000,title:"Landscape Default Mat0 Mat0 Blend World Mask Mat0 Nm Mat0 W Uv A Mat1 Mat1 Blend World Mask Mat1 Nm Mat1 W Uv A Mat2 Mat2 Blend World Mask Mat2 Nm Mat2 W Uv A Mat3 Mat3 Blend World Mask Mat3 Nm Mat3 W Uv A World Mask A Wetness World Overlay Mask Texture World Overlay Texture"},o="Landscape Default Mat0 Mat0 Blend World Mask Mat0 Nm Mat0 W Uv A Mat1 Mat1 Blend World Mask Mat1 Nm Mat1 W Uv A Mat2 Mat2 Blend World Mask Mat2 Nm Mat2 W Uv A Mat3 Mat3 Blend World Mask Mat3 Nm Mat3 W Uv A World Mask A Wetness World Overlay Mask Texture World Overlay Texture",l={unversionedId:"Generated/Shaders/Base/[3900-4000]/15004383103739793000",id:"Generated/Shaders/Base/[3900-4000]/15004383103739793000",title:"Landscape Default Mat0 Mat0 Blend World Mask Mat0 Nm Mat0 W Uv A Mat1 Mat1 Blend World Mask Mat1 Nm Mat1 W Uv A Mat2 Mat2 Blend World Mask Mat2 Nm Mat2 W Uv A Mat3 Mat3 Blend World Mask Mat3 Nm Mat3 W Uv A World Mask A Wetness World Overlay Mask Texture World Overlay Texture",description:"(landscapeMAT0MAT0NMMAT1MAT1NMMAT2MAT2NMMAT3MAT3NMWORLDMASKAWETNESSWORLDOVERLAYTEXTURE, 0xd03a46efac489040)",source:"@site/docs/Generated/Shaders/Base/[3900-4000]/0xd03a46efac489040.mdx",sourceDirName:"Generated/Shaders/Base/[3900-4000]",slug:"/Generated/Shaders/Base/[3900-4000]/15004383103739793000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[3900-4000]/15004383103739793000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/docs/Generated/Shaders/Base/[3900-4000]/0xd03a46efac489040.mdx",tags:[],version:"current",frontMatter:{id:"15004383103739793000",title:"Landscape Default Mat0 Mat0 Blend World Mask Mat0 Nm Mat0 W Uv A Mat1 Mat1 Blend World Mask Mat1 Nm Mat1 W Uv A Mat2 Mat2 Blend World Mask Mat2 Nm Mat2 W Uv A Mat3 Mat3 Blend World Mask Mat3 Nm Mat3 W Uv A World Mask A Wetness World Overlay Mask Texture World Overlay Texture"},sidebar:"docsSidebar",previous:{title:"Generic Shadow Caster Alpha Masked Ati Diffuse Texture External Alpha Ref Opacity Texture Self Illumination",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[3900-4000]/15000404271381970000"},next:{title:"Generic Shadow Caster Diffuse Texture Gsma Texture Normalmap Skinned 1weight Vertex Color",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[3900-4000]/15006241776347700000"}},m={},d=[{value:"Technique <code>deferred_ambient</code>",id:"technique-deferred_ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Sampler 1",id:"sampler-1",level:4},{value:"Sampler 2",id:"sampler-2",level:4},{value:"Sampler 3",id:"sampler-3",level:4},{value:"Sampler 4",id:"sampler-4",level:4},{value:"Sampler 5",id:"sampler-5",level:4},{value:"Sampler 6",id:"sampler-6",level:4},{value:"Sampler 7",id:"sampler-7",level:4},{value:"Sampler 8",id:"sampler-8",level:4},{value:"Sampler 9",id:"sampler-9",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],_={toc:d},i="wrapper";function x(e){let{components:t,...r}=e;return(0,a.kt)(i,(0,n.Z)({},_,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"landscape-default-mat0-mat0-blend-world-mask-mat0-nm-mat0-w-uv-a-mat1-mat1-blend-world-mask-mat1-nm-mat1-w-uv-a-mat2-mat2-blend-world-mask-mat2-nm-mat2-w-uv-a-mat3-mat3-blend-world-mask-mat3-nm-mat3-w-uv-a-world-mask-a-wetness-world-overlay-mask-texture-world-overlay-texture"},"Landscape Default Mat0 Mat0 Blend World Mask Mat0 Nm Mat0 W Uv A Mat1 Mat1 Blend World Mask Mat1 Nm Mat1 W Uv A Mat2 Mat2 Blend World Mask Mat2 Nm Mat2 W Uv A Mat3 Mat3 Blend World Mask Mat3 Nm Mat3 W Uv A World Mask A Wetness World Overlay Mask Texture World Overlay Texture"),(0,a.kt)("p",null,"(",(0,a.kt)("inlineCode",{parentName:"p"},"landscape:default:MAT0:MAT0_BLEND_WORLD_MASK:MAT0_NM:MAT0_W_UV_A:MAT1:MAT1_BLEND_WORLD_MASK:MAT1_NM:MAT1_W_UV_A:MAT2:MAT2_BLEND_WORLD_MASK:MAT2_NM:MAT2_W_UV_A:MAT3:MAT3_BLEND_WORLD_MASK:MAT3_NM:MAT3_W_UV_A:WORLD_MASK_A_WETNESS:WORLD_OVERLAY_MASK_TEXTURE:WORLD_OVERLAY_TEXTURE"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"0xd03a46efac489040"),")"),(0,a.kt)("h3",{id:"technique-deferred_ambient"},"Technique ",(0,a.kt)("inlineCode",{parentName:"h3"},"deferred_ambient")),(0,a.kt)("h3",{id:"render-states"},"Render States"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 1,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 2,\n    D3DRS_COLORWRITEENABLE = 15,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,a.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,a.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,a.kt)("h4",{id:"sampler-1"},"Sampler 1"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,a.kt)("h4",{id:"sampler-2"},"Sampler 2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,a.kt)("h4",{id:"sampler-3"},"Sampler 3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,a.kt)("h4",{id:"sampler-4"},"Sampler 4"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,a.kt)("h4",{id:"sampler-5"},"Sampler 5"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,a.kt)("h4",{id:"sampler-6"},"Sampler 6"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,a.kt)("h4",{id:"sampler-7"},"Sampler 7"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,a.kt)("h4",{id:"sampler-8"},"Sampler 8"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,a.kt)("h4",{id:"sampler-9"},"Sampler 9"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,a.kt)("h3",{id:"shaders"},"Shaders"),(0,a.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-hlsl"},"float GLOBAL_fov_ratio : register(vs_3_0, c8);\nfloat camera_near_range : register(vs_3_0, c7);\nfloat3 ref_detail_scale : register(vs_3_0, c9);\ncolumn_major float4x4 view_proj_matrix : register(vs_3_0, c0);\ncolumn_major float4x4 world_matrix : register(vs_3_0, c4);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 normal : NORMAL;\n    float4 texcoord : TEXCOORD;\n    float4 texcoord1 : TEXCOORD1;\n    float4 tangent : TANGENT;\n    float4 binormal : BINORMAL;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float2 texcoord7 : TEXCOORD7;\n    float4 texcoord : TEXCOORD;\n    float4 texcoord1 : TEXCOORD1;\n    float3 texcoord2 : TEXCOORD2;\n    float3 texcoord3 : TEXCOORD3;\n    float3 texcoord4 : TEXCOORD4;\n    float4 texcoord5 : TEXCOORD5;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float4 temp0;\n    float3 temp1;\n    // def c10, 2, -1, 0.5, 51200\n    // def c11, 9.765625E-06, -9.765625E-06, 0, 0\n    // dcl_position v0\n    // dcl_normal v1\n    // dcl_texcoord v2\n    // dcl_texcoord1 v3\n    // dcl_tangent v4\n    // dcl_binormal v5\n    // dcl_position o0\n    // dcl_texcoord7 o1.xy\n    // dcl_texcoord o2\n    // dcl_texcoord1 o3\n    // dcl_texcoord2 o4.xyz\n    // dcl_texcoord3 o5.xyz\n    // dcl_texcoord4 o6.xyz\n    // dcl_texcoord5 o7\n    // dp4 o0.x, v0, c0\n    o.position.x = dot(i.position, (view_proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, v0, c1\n    o.position.y = dot(i.position, (view_proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.w, v0, c3\n    o.position.w = dot(i.position, (view_proj_matrix._m03_m13_m23_m33));\n    // rsq r0.x, c8.x\n    temp0.x = 1 / sqrt(GLOBAL_fov_ratio.x);\n    // dp4 r0.y, v0, c2\n    temp0.y = dot(i.position, (view_proj_matrix._m02_m12_m22_m32));\n    // mad o3.w, r0.y, r0.x, c7.x\n    o.texcoord1.w = temp0.y * temp0.x + camera_near_range.x;\n    // mov o0.z, r0.y\n    o.position.z = temp0.y;\n    // mad r0.xyz, v4, c10.x, c10.y\n    temp0.xyz = i.tangent.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o5.x, r0, c5\n    o.texcoord3.x = dot(temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o6.x, r0, c6\n    o.texcoord4.x = dot(temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mad r0.xyz, v5, c10.x, c10.y\n    temp0.xyz = i.binormal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o5.y, -r0, c5\n    o.texcoord3.y = dot(-temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o6.y, -r0, c6\n    o.texcoord4.y = dot(-temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mad r0.xyz, v1, c10.x, c10.y\n    temp0.xyz = i.normal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 r1.x, r0, c4\n    temp1.x = dot(temp0.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 r1.y, r0, c5\n    temp1.y = dot(temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 r1.z, r0, c6\n    temp1.z = dot(temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mad o4.xyz, r1, c10.z, c10.z\n    o.texcoord2 = temp1 * float4(0.5, 0.5, 0.5, 0.5) + float4(0.5, 0.5, 0.5, 0.5);\n    // mov o5.z, r1.y\n    o.texcoord3.z = temp1.y;\n    // mov o6.z, r1.z\n    o.texcoord4.z = temp1.z;\n    // dp4 o3.z, v0, c6\n    o.texcoord1.z = dot(i.position, (world_matrix._m02_m12_m22_m32));\n    // dp4 r0.x, v0, c4\n    temp0.x = dot(i.position, (world_matrix._m00_m10_m20_m30));\n    // dp4 r0.y, v0, c5\n    temp0.y = dot(i.position, (world_matrix._m01_m11_m21_m31));\n    // add r0.zw, r0.xyxy, c10.w\n    temp0.zw = temp0.xy + float2(51200, 51200);\n    // mov o3.xy, r0\n    o.texcoord1.xy = temp0.xy;\n    // mul r0.xy, r0.zwzw, c11\n    temp0.xy = temp0.zw * float2(9.765625E-06, -9.765625E-06);\n    // mul o7, r0.xyxy, c9.xxyy\n    o.texcoord5 = temp0.xyxy * ref_detail_scale.xxyy;\n    // mov o1.xy, r0\n    o.texcoord7 = temp0;\n    // mov o2.xy, v2\n    o.texcoord.xy = i.texcoord.xy;\n    // mov o2.zw, v3.xyxy\n    o.texcoord.zw = i.texcoord1.xy;\n    // \n\n    return o;\n}\n")),(0,a.kt)("p",null,"Decompiled by DXDecompiler."),(0,a.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-hlsl"},"sampler2D diffuse_layer0_texture : register(ps_3_0, s2);\nsampler2D diffuse_layer1_texture : register(ps_3_0, s4);\nsampler2D diffuse_layer2_texture : register(ps_3_0, s6);\nsampler2D diffuse_layer3_texture : register(ps_3_0, s8);\nsampler2D normal_layer0_texture : register(ps_3_0, s3);\nsampler2D normal_layer1_texture : register(ps_3_0, s5);\nsampler2D normal_layer2_texture : register(ps_3_0, s7);\nsampler2D normal_layer3_texture : register(ps_3_0, s9);\nfloat3 ref_detail_fadeout : register(ps_3_0, c1);\nfloat ref_specular_power : register(ps_3_0, c0);\nsampler2D world_overlay_mask_texture : register(ps_3_0, s1);\nsampler2D world_overlay_texture : register(ps_3_0, s0);\nstruct PixelMain_Input\n{\n    float2 texcoord7 : TEXCOORD7;\n    float4 texcoord1 : TEXCOORD1;\n    float3 texcoord2 : TEXCOORD2;\n    float2 texcoord5 : TEXCOORD5;\n};\n\nstruct PixelMain_Output\n{\n    float4 color : COLOR;\n    float4 color1 : COLOR1;\n    float4 color2 : COLOR2;\n};\n\nPixelMain_Output PixelMain(PixelMain_Input i)\n{\n    PixelMain_Output o;\n    float4 temp0, temp2, temp3, temp4, temp5, temp6, temp7, temp8, temp9, temp10;\n    float3 temp1, temp11;\n    // def c2, 2.2, 1, -0.5, 0.75\n    // def c3, -0.1, 1.1111112, -2, 3\n    // def c4, 0, 1, 0, 0\n    // dcl_texcoord7 v0.xy\n    // dcl_texcoord1 v1.w\n    // dcl_texcoord2_pp v2.xyz\n    // dcl_texcoord5 v3.xy\n    // dcl_2d s0\n    // dcl_2d s1\n    // dcl_2d s2\n    // dcl_2d s3\n    // dcl_2d s4\n    // dcl_2d s5\n    // dcl_2d s6\n    // dcl_2d s7\n    // dcl_2d s8\n    // dcl_2d s9\n    // texld_pp r0, v0, s0\n    temp0 = /* not implemented _pp modifier */ tex2D(world_overlay_texture, i.texcoord7.xy);\n    // log r1.x, r0.x\n    temp1.x = log2(temp0.x);\n    // log r1.y, r0.y\n    temp1.y = log2(temp0.y);\n    // log r1.z, r0.z\n    temp1.z = log2(temp0.z);\n    // mul r0.xyz, r1, c2.x\n    temp0.xyz = temp1.xyz * float3(2.2, 2.2, 2.2);\n    // exp_pp r1.x, r0.x\n    temp1.x = /* not implemented _pp modifier */ exp2(temp0.x);\n    // exp_pp r1.y, r0.y\n    temp1.y = /* not implemented _pp modifier */ exp2(temp0.y);\n    // exp_pp r1.z, r0.z\n    temp1.z = /* not implemented _pp modifier */ exp2(temp0.z);\n    // if_lt v1.w, c1.y\n    if (i.texcoord1.w < ref_detail_fadeout.y) {\n        // add r0.x, -c1.x, v1.w\n        temp0.x = -ref_detail_fadeout.x + i.texcoord1.w;\n        // add r0.y, -c1.x, c1.y\n        temp0.y = -ref_detail_fadeout.x + ref_detail_fadeout.y;\n        // rcp r0.y, r0.y\n        temp0.y = 1.0f / temp0.y;\n        // mad_sat_pp r0.y, r0.x, -r0.y, c2.y\n        ;// error\n        // cmp_pp r0.x, r0.x, r0.y, c2.y\n        temp0.x = /* not implemented _pp modifier */ (temp0.x >= 0) ? temp0.y : float1(1);\n        // texld_pp r2, v0, s1\n        temp2 = /* not implemented _pp modifier */ tex2D(world_overlay_mask_texture, i.texcoord7.xy);\n        // texld_pp r3, v3, s2\n        temp3 = /* not implemented _pp modifier */ tex2D(diffuse_layer0_texture, i.texcoord5.xy);\n        // texld_pp r4, v3, s4\n        temp4 = /* not implemented _pp modifier */ tex2D(diffuse_layer1_texture, i.texcoord5.xy);\n        // texld_pp r5, v3, s6\n        temp5 = /* not implemented _pp modifier */ tex2D(diffuse_layer2_texture, i.texcoord5.xy);\n        // texld_pp r6, v3, s8\n        temp6 = /* not implemented _pp modifier */ tex2D(diffuse_layer3_texture, i.texcoord5.xy);\n        // texld_pp r7, v3, s3\n        temp7 = /* not implemented _pp modifier */ tex2D(normal_layer0_texture, i.texcoord5.xy);\n        // texld_pp r8, v3, s5\n        temp8 = /* not implemented _pp modifier */ tex2D(normal_layer1_texture, i.texcoord5.xy);\n        // texld_pp r9, v3, s7\n        temp9 = /* not implemented _pp modifier */ tex2D(normal_layer2_texture, i.texcoord5.xy);\n        // texld_pp r10, v3, s9\n        temp10 = /* not implemented _pp modifier */ tex2D(normal_layer3_texture, i.texcoord5.xy);\n        // lrp_pp r11.xyz, r2.x, r4, r3\n        temp11.xyz = /* not implemented _pp modifier */ lerp(temp3.xyz, temp4.xyz, temp2.xxx);\n        // lrp_pp r3.xy, r2.x, r8.wyzw, r7.wyzw\n        temp3.xy = /* not implemented _pp modifier */ lerp(temp7.wy, temp8.wy, temp2.xx);\n        // lrp_pp r4.xyz, r2.y, r5, r11\n        temp4.xyz = /* not implemented _pp modifier */ lerp(temp11.xyz, temp5.xyz, temp2.yyy);\n        // lrp_pp r5.xy, r2.y, r9.wyzw, r3\n        temp5.xy = /* not implemented _pp modifier */ lerp(temp3.xy, temp9.wy, temp2.yy);\n        // lrp_pp r3.xyz, r2.z, r6, r4\n        temp3.xyz = /* not implemented _pp modifier */ lerp(temp4.xyz, temp6.xyz, temp2.zzz);\n        // lrp_pp r4.xy, r2.z, r10.wyzw, r5\n        temp4.xy = /* not implemented _pp modifier */ lerp(temp5.xy, temp10.wy, temp2.zz);\n        // add r2.xyz, -r1, r3\n        temp2.xyz = -temp1.xyz + temp3.xyz;\n        // mad_pp oC0.xyz, r0.y, r2, r1\n        o.color.xyz = /* not implemented _pp modifier */ temp0.yyy * temp2.xyz + temp1.xyz;\n        // add_pp r0.yz, r4.xxyw, c2.z\n        temp0.yz = /* not implemented _pp modifier */ temp4.xy + float2(-0.5, -0.5);\n        // add_pp r2.xy, r0.yzzw, r0.yzzw\n        temp2.xy = /* not implemented _pp modifier */ temp0.yz + temp0.yz;\n        // mul_pp r0.y, r2.x, r2.x\n        temp0.y = /* not implemented _pp modifier */ temp2.x * temp2.x;\n        // mad_pp r0.y, r2.y, r2.y, -r0.y\n        temp0.y = /* not implemented _pp modifier */ temp2.y * temp2.y + -temp0.y;\n        // add_pp r0.y, -r0.y, c2.y\n        temp0.y = /* not implemented _pp modifier */ -temp0.y + float1(1);\n        // rsq_pp r0.y, r0.y\n        temp0.y = /* not implemented _pp modifier */ 1 / sqrt(temp0.y);\n        // rcp_pp r2.z, r0.y\n        temp2.z = /* not implemented _pp modifier */ 1.0f / temp0.y;\n        // lrp_pp r3.xyz, r0.x, r2, v2\n        temp3.xyz = /* not implemented _pp modifier */ lerp(i.texcoord2.xyz, temp2.xyz, temp0.xxx);\n        // add_sat r0.x, r2.w, c0.x\n        temp0.x = saturate(temp2.w + ref_specular_power.x);\n        // mul_pp oC0.w, r0.x, c2.w\n        o.color.w = /* not implemented _pp modifier */ temp0.x * float1(0.75);\n        // add r0.x, r2.w, c3.x\n        temp0.x = temp2.w + float1(-0.1);\n        // mul_sat r0.x, r0.x, c3.y\n        temp0.x = saturate(temp0.x * float1(1.1111112));\n        // mad r0.y, r0.x, c3.z, c3.w\n        temp0.y = temp0.x * float1(-2) + float1(3);\n        // mul r0.x, r0.x, r0.x\n        temp0.x = temp0.x * temp0.x;\n        // mul r0.x, r0.x, r0.y\n        temp0.x = temp0.x * temp0.y;\n        // add_sat_pp oC1.w, r0.w, r2.w\n        ;// error\n        // lrp_pp r2.xyz, r0.x, c4.xxyw, r3\n        temp2.xyz = /* not implemented _pp modifier */ lerp(temp3.xyz, float3(0, 0, 1), temp0.xxx);\n        // else\n    } else {\n        // mov_pp oC0.w, c0.x\n        o.color.w = /* not implemented _pp modifier */ ref_specular_power.x;\n        // mov_pp oC0.xyz, r1\n        o.color.xyz = /* not implemented _pp modifier */ temp1.xyz;\n        // mov_pp r2.xyz, v2\n        temp2.xyz = /* not implemented _pp modifier */ i.texcoord2.xyz;\n        // mov_pp oC1.w, r0.w\n        o.color1.w = /* not implemented _pp modifier */ temp0.w;\n        // endif\n    }\n    // mad_pp oC1.xyz, r2, -c2.z, -c2.z\n    o.color1.xyz = /* not implemented _pp modifier */ temp2.xyz * float3(0.5, 0.5, 0.5) + float3(0.5, 0.5, 0.5);\n    // mul oC2, c4.yxxx, v1.w\n    o.color2 = float4(1, 0, 0, 0) * i.texcoord1.w;\n    // \n\n    return o;\n}\n")),(0,a.kt)("p",null,"Decompiled by DXDecompiler."))}x.isMDXComponent=!0}}]);