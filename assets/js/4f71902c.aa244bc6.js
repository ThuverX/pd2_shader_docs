"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[4376],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>_});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function m(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},p=Object.keys(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),x=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):m(m({},t),e)),r},l=function(e){var t=x(e.components);return n.createElement(o.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},i=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,p=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=x(r),i=a,_=d["".concat(o,".").concat(i)]||d[i]||c[i]||p;return r?n.createElement(_,m(m({ref:t},l),{},{components:r})):n.createElement(_,m({ref:t},l))}));function _(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var p=r.length,m=new Array(p);m[0]=i;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[d]="string"==typeof e?e:a,m[1]=s;for(var x=2;x<p;x++)m[x]=r[x];return n.createElement.apply(null,m)}return n.createElement.apply(null,r)}i.displayName="MDXCreateElement"},8363:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>m,default:()=>c,frontMatter:()=>p,metadata:()=>s,toc:()=>x});var n=r(7462),a=(r(7294),r(3905));const p={id:0xefd0458e6004a800,title:"Iterative Luminance Default"},m="Iterative Luminance Default",s={unversionedId:"Generated/Shaders/Filters/17280388248019184000",id:"Generated/Shaders/Filters/17280388248019184000",title:"Iterative Luminance Default",description:"(iterative_luminance:default, 0xefd0458e6004a574)",source:"@site/docs/Generated/Shaders/Filters/0xefd0458e6004a574.mdx",sourceDirName:"Generated/Shaders/Filters",slug:"/Generated/Shaders/Filters/17280388248019184000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Filters/17280388248019184000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/Generated/Shaders/Filters/0xefd0458e6004a574.mdx",tags:[],version:"current",frontMatter:{id:"17280388248019184000",title:"Iterative Luminance Default"},sidebar:"docsSidebar",previous:{title:"Darken Default",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Filters/17132679058667910000"},next:{title:"Edge Blur Default",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Filters/18333947387233421000"}},o={},x=[{value:"Technique <code>ambient</code>",id:"technique-ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],l={toc:x},d="wrapper";function c(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"iterative-luminance-default"},"Iterative Luminance Default"),(0,a.kt)("p",null,"(",(0,a.kt)("inlineCode",{parentName:"p"},"iterative_luminance:default"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"0xefd0458e6004a574"),")"),(0,a.kt)("p",null,"This template is referenced 1 time by ",(0,a.kt)("a",{parentName:"p",href:"/docs/Generated/Render%20Templates/filters.render_template_database#iterative-luminance"},"iterative_luminance"),"."),(0,a.kt)("h3",{id:"technique-ambient"},"Technique ",(0,a.kt)("inlineCode",{parentName:"h3"},"ambient")),(0,a.kt)("h3",{id:"render-states"},"Render States"),(0,a.kt)("p",null,"More info can be found on the ",(0,a.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 0,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 0,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 1,\n    D3DRS_COLORWRITEENABLE = 1,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,a.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,a.kt)("p",null,"More info can be found on the ",(0,a.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,a.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 1,\n    D3DSAMP_MINFILTER = 1,\n    D3DSAMP_MIPFILTER = 1,\n};\n")),(0,a.kt)("h3",{id:"shaders"},"Shaders"),(0,a.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x4 view_proj_matrix : register(vs_3_0, c0);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 texcoord : TEXCOORD;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float2 texcoord : TEXCOORD;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    // dcl_position v0\n    // dcl_texcoord v1\n    // dcl_position o0\n    // dcl_texcoord o1.xy\n    // dp4 o0.x, v0, c0\n    o.position.x = dot(i.position, (view_proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, v0, c1\n    o.position.y = dot(i.position, (view_proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.z, v0, c2\n    o.position.z = dot(i.position, (view_proj_matrix._m02_m12_m22_m32));\n    // dp4 o0.w, v0, c3\n    o.position.w = dot(i.position, (view_proj_matrix._m03_m13_m23_m33));\n    // mov o1.xy, v1\n    o.texcoord = i.texcoord;\n    // \n\n    return o;\n}\n")),(0,a.kt)("p",null,"Decompiled by DXDecompiler."),(0,a.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-hlsl"},"float3 ref_inv_dest_resolution : register(ps_3_0, c16);\nfloat3 ref_samples[16] : register(ps_3_0, c0);\nsampler2D ref_src_texture : register(ps_3_0, s0);\nfloat4 PixelMain(float2 texcoord : TEXCOORD) : COLOR\n{\n    float4 out_color;\n    float4 temp0, temp1;\n    // dcl_texcoord v0.xy\n    // dcl_2d s0\n    // mov r0.xy, c16\n    temp0.xy = ref_inv_dest_resolution.xy;\n    // mad r0.zw, c1.xyxy, r0.xyxy, v0.xyxy\n    temp0.zw = ref_samples[1].xy * temp0.xy + texcoord.xy;\n    // texld r1, r0.zwzw, s0\n    temp1 = tex2D(ref_src_texture, temp0.zw);\n    // mul r0.z, r1.x, c1.z\n    temp0.z = temp1.x * ref_samples[1].z;\n    // mad r1.xy, c0, r0, v0\n    temp1.xy = ref_samples[0].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // mad r0.z, r1.x, c0.z, r0.z\n    temp0.z = temp1.x * ref_samples[0].z + temp0.z;\n    // mad r1.xy, c2, r0, v0\n    temp1.xy = ref_samples[2].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // mad r0.z, r1.x, c2.z, r0.z\n    temp0.z = temp1.x * ref_samples[2].z + temp0.z;\n    // mad r1.xy, c3, r0, v0\n    temp1.xy = ref_samples[3].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // mad r0.z, r1.x, c3.z, r0.z\n    temp0.z = temp1.x * ref_samples[3].z + temp0.z;\n    // mad r1.xy, c4, r0, v0\n    temp1.xy = ref_samples[4].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // mad r0.z, r1.x, c4.z, r0.z\n    temp0.z = temp1.x * ref_samples[4].z + temp0.z;\n    // mad r1.xy, c5, r0, v0\n    temp1.xy = ref_samples[5].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // mad r0.z, r1.x, c5.z, r0.z\n    temp0.z = temp1.x * ref_samples[5].z + temp0.z;\n    // mad r1.xy, c6, r0, v0\n    temp1.xy = ref_samples[6].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // mad r0.z, r1.x, c6.z, r0.z\n    temp0.z = temp1.x * ref_samples[6].z + temp0.z;\n    // mad r1.xy, c7, r0, v0\n    temp1.xy = ref_samples[7].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // mad r0.z, r1.x, c7.z, r0.z\n    temp0.z = temp1.x * ref_samples[7].z + temp0.z;\n    // mad r1.xy, c8, r0, v0\n    temp1.xy = ref_samples[8].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // mad r0.z, r1.x, c8.z, r0.z\n    temp0.z = temp1.x * ref_samples[8].z + temp0.z;\n    // mad r1.xy, c9, r0, v0\n    temp1.xy = ref_samples[9].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // mad r0.z, r1.x, c9.z, r0.z\n    temp0.z = temp1.x * ref_samples[9].z + temp0.z;\n    // mad r1.xy, c10, r0, v0\n    temp1.xy = ref_samples[10].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // mad r0.z, r1.x, c10.z, r0.z\n    temp0.z = temp1.x * ref_samples[10].z + temp0.z;\n    // mad r1.xy, c11, r0, v0\n    temp1.xy = ref_samples[11].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // mad r0.z, r1.x, c11.z, r0.z\n    temp0.z = temp1.x * ref_samples[11].z + temp0.z;\n    // mad r1.xy, c12, r0, v0\n    temp1.xy = ref_samples[12].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // mad r0.z, r1.x, c12.z, r0.z\n    temp0.z = temp1.x * ref_samples[12].z + temp0.z;\n    // mad r1.xy, c13, r0, v0\n    temp1.xy = ref_samples[13].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // mad r0.z, r1.x, c13.z, r0.z\n    temp0.z = temp1.x * ref_samples[13].z + temp0.z;\n    // mad r1.xy, c14, r0, v0\n    temp1.xy = ref_samples[14].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // mad r0.z, r1.x, c14.z, r0.z\n    temp0.z = temp1.x * ref_samples[14].z + temp0.z;\n    // mad r0.xy, c15, r0, v0\n    temp0.xy = ref_samples[15].xy * temp0.xy + texcoord.xy;\n    // texld r1, r0, s0\n    temp1 = tex2D(ref_src_texture, temp0.xy);\n    // mad oC0, r1.x, c15.z, r0.z\n    out_color = temp1.x * ref_samples[15].z + temp0.z;\n    // \n\n    return out_color;\n}\n")),(0,a.kt)("p",null,"Decompiled by DXDecompiler."))}c.isMDXComponent=!0}}]);