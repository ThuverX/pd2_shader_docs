"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[44934],{603905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>_});var r=n(667294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),m=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},l="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),l=m(n),u=a,_=l["".concat(s,".").concat(u)]||l[u]||c[u]||i;return n?r.createElement(_,o(o({ref:t},p),{},{components:n})):r.createElement(_,o({ref:t},p))}));function _(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var d={};for(var s in t)hasOwnProperty.call(t,s)&&(d[s]=t[s]);d.originalType=e,d[l]="string"==typeof e?e:a,o[1]=d;for(var m=2;m<i;m++)o[m]=n[m];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},194286:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>d,toc:()=>m});var r=n(487462),a=(n(667294),n(603905));const i={id:0xd91bc39d92320000,title:"Generic Customizable Shadow Caster Ati Cube Environment Mapping Decal Sticker Uv2 Diffuse Texture Gradientmap Normalmap Pattern Gradientmap Pattern Gradientmap Angle Offset Pattern Uv2 Skinned 3weights Wear Tear Masking"},o="Generic Customizable Shadow Caster Ati Cube Environment Mapping Decal Sticker Uv2 Diffuse Texture Gradientmap Normalmap Pattern Gradientmap Pattern Gradientmap Angle Offset Pattern Uv2 Skinned 3weights Wear Tear Masking",d={unversionedId:"Generated/Shaders/Base/[4000-4100]/15644312812131582000",id:"Generated/Shaders/Base/[4000-4100]/15644312812131582000",title:"Generic Customizable Shadow Caster Ati Cube Environment Mapping Decal Sticker Uv2 Diffuse Texture Gradientmap Normalmap Pattern Gradientmap Pattern Gradientmap Angle Offset Pattern Uv2 Skinned 3weights Wear Tear Masking",description:"(genericcustomizableATIDECALSTICKERUV2GRADIENTMAPPATTERNGRADIENTMAPPATTERNUV2WEARTEAR_MASKING, 0xd91bc39d92320083)",source:"@site/docs/Generated/Shaders/Base/[4000-4100]/0xd91bc39d92320083.mdx",sourceDirName:"Generated/Shaders/Base/[4000-4100]",slug:"/Generated/Shaders/Base/[4000-4100]/15644312812131582000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[4000-4100]/15644312812131582000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/Generated/Shaders/Base/[4000-4100]/0xd91bc39d92320083.mdx",tags:[],version:"current",frontMatter:{id:"15644312812131582000",title:"Generic Customizable Shadow Caster Ati Cube Environment Mapping Decal Sticker Uv2 Diffuse Texture Gradientmap Normalmap Pattern Gradientmap Pattern Gradientmap Angle Offset Pattern Uv2 Skinned 3weights Wear Tear Masking"},sidebar:"docsSidebar",previous:{title:"Generic Shadow Caster Ati Blend Diffuse Blend Gsma Blend Normal Cube Environment Mapping Diffuse Texture Gsma Texture Normalmap Vertex Color",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[4000-4100]/15627327983981550000"},next:{title:"Generic Shadow Caster Blend Diffuse Blend Diffuse Uv2 Blend Gsma Blend Mask Control Blend Mask Crossblend Blend Normal Blend Normal Uv2 Blue Mask Tint Cube Environment Mapping Diffuse Texture Gloss Blurs Cubemap Gsma Texture Normalmap Simple Tint Vertex Color",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[4000-4100]/15645824173254533000"}},s={},m=[{value:"Technique <code>ambient</code>",id:"technique-ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],p={toc:m},l="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(l,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"generic-customizable-shadow-caster-ati-cube-environment-mapping-decal-sticker-uv2-diffuse-texture-gradientmap-normalmap-pattern-gradientmap-pattern-gradientmap-angle-offset-pattern-uv2-skinned-3weights-wear-tear-masking"},"Generic Customizable Shadow Caster Ati Cube Environment Mapping Decal Sticker Uv2 Diffuse Texture Gradientmap Normalmap Pattern Gradientmap Pattern Gradientmap Angle Offset Pattern Uv2 Skinned 3weights Wear Tear Masking"),(0,a.kt)("p",null,"(",(0,a.kt)("inlineCode",{parentName:"p"},"generic_customizable:shadow_caster:ATI:CUBE_ENVIRONMENT_MAPPING:DECAL_STICKER_UV2:DIFFUSE_TEXTURE:GRADIENTMAP:NORMALMAP:PATTERN_GRADIENTMAP:PATTERN_GRADIENTMAP_ANGLE_OFFSET:PATTERN_UV2:SKINNED_3WEIGHTS:WEAR_TEAR_MASKING"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"0xd91bc39d92320083"),")"),(0,a.kt)("p",null,"This template is referenced 1 time by ",(0,a.kt)("a",{parentName:"p",href:"/docs/Generated/Render%20Templates/base.render_template_database#generic-customizable-cube-environment-mapping-decal-sticker-uv2-diffuse-texture-gradientmap-normalmap-pattern-gradientmap-pattern-gradientmap-angle-offset-pattern-uv2-skinned-3weights-wear-tear-masking"},"generic_customizable:CUBE_ENVIRONMENT_MAPPING:DECAL_STICKER_UV2:DIFFUSE_TEXTURE:GRADIENTMAP:NORMALMAP:PATTERN_GRADIENTMAP:PATTERN_GRADIENTMAP_ANGLE_OFFSET:PATTERN_UV2:SKINNED_3WEIGHTS:WEAR_TEAR_MASKING"),".\nThis template uses the following inputs:\n|Name|UI Name|Type|\n|---|---|---|\n|diffuse_layer3_texture|Decal (UV2)|texture|\n|diffuse_layer1_texture|Base color gradient map|texture|\n|diffuse_layer2_texture|Pattern gradient texture|texture|\n|diffuse_layer0_texture|Pattern on second UV|texture|\n|diffuse_texture|Diffuse Texture (UV1)|texture|\n|bump_normal_texture|Normal map (UV2 else UV1)|texture|\n|reflection_texture|Reflection Cube|texture|\n|pattern_tweak|Pattern Tiling, Pattern Rotation, Pattern Spec Opacity|vector3|\n|pattern_pos|Pattern offset|vector3|\n|uv_scale|Sticker Scale x y, Sticker Spec Influence|vector3|\n|uv_offset_rot|Sticker Position Offset x y, Sticker Rotation|vector3|\n|wear_tear_value|Wear and Tear Mask Reference|scalar|\n|cubemap_pattern_control|Pattern Cubemap Intesity, Pattern Cubemap influence|vector3|."),(0,a.kt)("h3",{id:"technique-ambient"},"Technique ",(0,a.kt)("inlineCode",{parentName:"h3"},"ambient")),(0,a.kt)("h3",{id:"render-states"},"Render States"),(0,a.kt)("p",null,"More info can be found on the ",(0,a.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 1,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 2,\n    D3DRS_COLORWRITEENABLE = 0,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 961656599,\n    D3DRS_SLOPESCALEDEPTHBIAS = 1075838976,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,a.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,a.kt)("p",null,"More info can be found on the ",(0,a.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,a.kt)("h3",{id:"shaders"},"Shaders"),(0,a.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x3 bones[54] : register(vs_3_0, c0);\ncolumn_major float4x4 view_proj_matrix : register(vs_3_0, c162);\nstruct VertexMain_Input\n{\n    float4 blendweight : BLENDWEIGHT;\n    float4 blendindices : BLENDINDICES;\n    float4 position : POSITION;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float texcoord1 : TEXCOORD1;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float4 temp0;\n    float2 addr0;\n    float3 temp1;\n    // def c166, 3, 1, 0, 0\n    // dcl_blendweight v0\n    // dcl_blendindices v1\n    // dcl_position v2\n    // dcl_position o0\n    // dcl_texcoord1 o1.x\n    // mul r0.xyz, c166.x, v1\n    temp0.xyz = float3(3, 3, 3) * i.blendindices.xyz;\n    // mova a0.x, r0.y\n    addr0.x = temp0.y;\n    // dp4 r1.x, v2, c0[a0.x]\n    temp1.x = dot(i.position, (bones[0 + (addr0.x / 3)]._m00_m10_m20_m30));\n    // dp4 r1.y, v2, c1[a0.x]\n    temp1.y = dot(i.position, (bones[0 + (addr0.x / 3)]._m01_m11_m21_m31));\n    // dp4 r1.z, v2, c2[a0.x]\n    temp1.z = dot(i.position, (bones[0 + (addr0.x / 3)]._m02_m12_m22_m32));\n    // mul r1.xyz, r1, v0.y\n    temp1.xyz = temp1.xyz * i.blendweight.yyy;\n    // mova a0.xy, r0.xzzw\n    addr0.xy = temp0.xz;\n    // dp4 r0.x, v2, c0[a0.x]\n    temp0.x = dot(i.position, (bones[0 + (addr0.x / 3)]._m00_m10_m20_m30));\n    // dp4 r0.y, v2, c1[a0.x]\n    temp0.y = dot(i.position, (bones[0 + (addr0.x / 3)]._m01_m11_m21_m31));\n    // dp4 r0.z, v2, c2[a0.x]\n    temp0.z = dot(i.position, (bones[0 + (addr0.x / 3)]._m02_m12_m22_m32));\n    // mad r0.xyz, v0.x, r0, r1\n    temp0.xyz = i.blendweight.xxx * temp0.xyz + temp1.xyz;\n    // dp4 r1.x, v2, c0[a0.y]\n    temp1.x = dot(i.position, (bones[0 + (addr0.y / 3)]._m00_m10_m20_m30));\n    // dp4 r1.y, v2, c1[a0.y]\n    temp1.y = dot(i.position, (bones[0 + (addr0.y / 3)]._m01_m11_m21_m31));\n    // dp4 r1.z, v2, c2[a0.y]\n    temp1.z = dot(i.position, (bones[0 + (addr0.y / 3)]._m02_m12_m22_m32));\n    // mad r0.xyz, v0.z, r1, r0\n    temp0.xyz = i.blendweight.zzz * temp1.xyz + temp0.xyz;\n    // mov r0.w, c166.y\n    temp0.w = float1(1);\n    // dp4 o0.x, r0, c162\n    o.position.x = dot(temp0, (view_proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, r0, c163\n    o.position.y = dot(temp0, (view_proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.w, r0, c165\n    o.position.w = dot(temp0, (view_proj_matrix._m03_m13_m23_m33));\n    // dp4 r0.x, r0, c164\n    temp0.x = dot(temp0, (view_proj_matrix._m02_m12_m22_m32));\n    // mov o0.z, r0.x\n    o.position.z = temp0.x;\n    // mov o1.x, r0.x\n    o.texcoord1 = temp0.x;\n    // \n\n    return o;\n}\n")),(0,a.kt)("p",null,"Decompiled by DXDecompiler."),(0,a.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-hlsl"},"float4 PixelMain(float texcoord1 : TEXCOORD1) : COLOR\n{\n    float4 out_color;\n    // def c0, 1, 0, 0, 0\n    // dcl_texcoord1 v0.x\n    // mul oC0, c0.xyyy, v0.x\n    out_color = float4(1, 0, 0, 0) * texcoord1.x;\n    // \n\n    return out_color;\n}\n")),(0,a.kt)("p",null,"Decompiled by DXDecompiler."))}c.isMDXComponent=!0}}]);