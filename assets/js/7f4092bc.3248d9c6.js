"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[77888],{3905:(e,t,n)=>{n.d(t,{Zo:()=>i,kt:()=>s});var r=n(67294);function m(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){m(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,m=function(e,t){if(null==e)return{};var n,r,m={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(m[n]=e[n]);return m}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(m[n]=e[n])}return m}var d=r.createContext({}),_=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},i=function(e){var t=_(e.components);return r.createElement(d.Provider,{value:t},e.children)},x="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,m=e.mdxType,o=e.originalType,d=e.parentName,i=a(e,["components","mdxType","originalType","parentName"]),x=_(n),c=m,s=x["".concat(d,".").concat(c)]||x[c]||l[c]||o;return n?r.createElement(s,p(p({ref:t},i),{},{components:n})):r.createElement(s,p({ref:t},i))}));function s(e,t){var n=arguments,m=t&&t.mdxType;if("string"==typeof e||m){var o=n.length,p=new Array(o);p[0]=c;var a={};for(var d in t)hasOwnProperty.call(t,d)&&(a[d]=t[d]);a.originalType=e,a[x]="string"==typeof e?e:m,p[1]=a;for(var _=2;_<o;_++)p[_]=n[_];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},67249:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>l,frontMatter:()=>o,metadata:()=>a,toc:()=>_});var r=n(87462),m=(n(67294),n(3905));const o={id:0xb272e9658501100,title:"Opacity Default Cube Environment Mapping Cube Fresnel Diffuse Texture Double Sided Opacity Fade Skinned 3weights"},p="Opacity Default Cube Environment Mapping Cube Fresnel Diffuse Texture Double Sided Opacity Fade Skinned 3weights",a={unversionedId:"Generated/Shaders/Base/[200-300]/803662281770537200",id:"Generated/Shaders/Base/[200-300]/803662281770537200",title:"Opacity Default Cube Environment Mapping Cube Fresnel Diffuse Texture Double Sided Opacity Fade Skinned 3weights",description:"(opacityCUBEENVIRONMENTMAPPINGDIFFUSETEXTUREOPACITYFADE:SKINNED_3WEIGHTS, 0xb272e965850112b)",source:"@site/docs/Generated/Shaders/Base/[200-300]/0xb272e965850112b.mdx",sourceDirName:"Generated/Shaders/Base/[200-300]",slug:"/Generated/Shaders/Base/[200-300]/803662281770537200",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[200-300]/803662281770537200",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/docs/Generated/Shaders/Base/[200-300]/0xb272e965850112b.mdx",tags:[],version:"current",frontMatter:{id:"803662281770537200",title:"Opacity Default Cube Environment Mapping Cube Fresnel Diffuse Texture Double Sided Opacity Fade Skinned 3weights"},sidebar:"docsSidebar",previous:{title:"Generic Default Diffuse Texture Rl Civilians Skinned 3weights",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[200-300]/802537359271718000"},next:{title:"Shadow Caster Only Shadow Caster Alpha Masked External Alpha Ref Instanced Nvidia Shadow Caster Only",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[200-300]/805327591666304000"}},d={},_=[{value:"Technique <code>transparent</code>",id:"technique-transparent",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Sampler 1",id:"sampler-1",level:4},{value:"Sampler 2",id:"sampler-2",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],i={toc:_},x="wrapper";function l(e){let{components:t,...n}=e;return(0,m.kt)(x,(0,r.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("h1",{id:"opacity-default-cube-environment-mapping-cube-fresnel-diffuse-texture-double-sided-opacity-fade-skinned-3weights"},"Opacity Default Cube Environment Mapping Cube Fresnel Diffuse Texture Double Sided Opacity Fade Skinned 3weights"),(0,m.kt)("p",null,"(",(0,m.kt)("inlineCode",{parentName:"p"},"opacity:default:CUBE_ENVIRONMENT_MAPPING:CUBE_FRESNEL:DIFFUSE_TEXTURE:DOUBLE_SIDED:OPACITY_FADE:SKINNED_3WEIGHTS"),", ",(0,m.kt)("inlineCode",{parentName:"p"},"0xb272e965850112b"),")"),(0,m.kt)("h3",{id:"technique-transparent"},"Technique ",(0,m.kt)("inlineCode",{parentName:"h3"},"transparent")),(0,m.kt)("h3",{id:"render-states"},"Render States"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 0,\n    D3DRS_ALPHABLENDENABLE = 1,\n    D3DRS_CULLMODE = 1,\n    D3DRS_COLORWRITEENABLE = 7,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 1,\n    D3DRS_STENCILFUNC = 6,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 5,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 4,\n    D3DRS_STENCILWRITEMASK = 5,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n    D3DRS_BLENDOP = 1,\n    D3DRS_DESTBLEND = 6,\n    D3DRS_SRCBLEND = 5,\n};\n")),(0,m.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,m.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,m.kt)("h4",{id:"sampler-1"},"Sampler 1"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,m.kt)("h4",{id:"sampler-2"},"Sampler 2"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,m.kt)("h3",{id:"shaders"},"Shaders"),(0,m.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x3 bones[54] : register(vs_3_0, c0);\nfloat camera_near_range : register(vs_3_0, c174);\ncolumn_major float4x4 proj_matrix : register(vs_3_0, c170);\nfloat3 ref_opacity_fade : register(vs_3_0, c175);\ncolumn_major float4x4 view_matrix : register(vs_3_0, c166);\ncolumn_major float4x4 world_matrix : register(vs_3_0, c162);\nstruct VertexMain_Input\n{\n    float4 blendweight : BLENDWEIGHT;\n    float4 blendindices : BLENDINDICES;\n    float4 position : POSITION;\n    float4 normal : NORMAL;\n    float4 texcoord4 : TEXCOORD4;\n    float4 texcoord : TEXCOORD;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float4 texcoord5 : TEXCOORD5;\n    float texcoord7 : TEXCOORD7;\n    float2 texcoord1 : TEXCOORD1;\n    float2 texcoord : TEXCOORD;\n    float3 texcoord2 : TEXCOORD2;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float4 temp0, temp1;\n    float3 addr0, temp2;\n    // def c176, 2, -1, 3, 1\n    // dcl_blendweight v0\n    // dcl_blendindices v1\n    // dcl_position v2\n    // dcl_normal v3\n    // dcl_texcoord4 v4\n    // dcl_texcoord v5\n    // dcl_position o0\n    // dcl_texcoord5 o1\n    // dcl_texcoord7 o2.x\n    // dcl_texcoord1 o3.xy\n    // dcl_texcoord o4.xy\n    // dcl_texcoord2 o5.xyz\n    // mul r0.xyz, c176.z, v1\n    temp0.xyz = float3(3, 3, 3) * i.blendindices.xyz;\n    // mova a0.xyz, r0.yxzw\n    addr0.xyz = temp0.yxz;\n    // dp4 r1.x, v2, c0[a0.x]\n    temp1.x = dot(i.position, (bones[0 + (addr0.x / 3)]._m00_m10_m20_m30));\n    // dp4 r1.y, v2, c1[a0.x]\n    temp1.y = dot(i.position, (bones[0 + (addr0.x / 3)]._m01_m11_m21_m31));\n    // dp4 r1.z, v2, c2[a0.x]\n    temp1.z = dot(i.position, (bones[0 + (addr0.x / 3)]._m02_m12_m22_m32));\n    // mul r1.xyz, r1, v0.y\n    temp1.xyz = temp1.xyz * i.blendweight.yyy;\n    // dp4 r0.x, v2, c0[a0.y]\n    temp0.x = dot(i.position, (bones[0 + (addr0.y / 3)]._m00_m10_m20_m30));\n    // dp4 r0.y, v2, c1[a0.y]\n    temp0.y = dot(i.position, (bones[0 + (addr0.y / 3)]._m01_m11_m21_m31));\n    // dp4 r0.z, v2, c2[a0.y]\n    temp0.z = dot(i.position, (bones[0 + (addr0.y / 3)]._m02_m12_m22_m32));\n    // mad r0.xyz, v0.x, r0, r1\n    temp0.xyz = i.blendweight.xxx * temp0.xyz + temp1.xyz;\n    // dp4 r1.x, v2, c0[a0.z]\n    temp1.x = dot(i.position, (bones[0 + (addr0.z / 3)]._m00_m10_m20_m30));\n    // dp4 r1.y, v2, c1[a0.z]\n    temp1.y = dot(i.position, (bones[0 + (addr0.z / 3)]._m01_m11_m21_m31));\n    // dp4 r1.z, v2, c2[a0.z]\n    temp1.z = dot(i.position, (bones[0 + (addr0.z / 3)]._m02_m12_m22_m32));\n    // mad r0.xyz, v0.z, r1, r0\n    temp0.xyz = i.blendweight.zzz * temp1.xyz + temp0.xyz;\n    // mov r0.w, c176.w\n    temp0.w = float1(1);\n    // dp4 r1.w, r0, c165\n    temp1.w = dot(temp0, (world_matrix._m03_m13_m23_m33));\n    // dp4 r1.x, r0, c162\n    temp1.x = dot(temp0, (world_matrix._m00_m10_m20_m30));\n    // dp4 r1.y, r0, c163\n    temp1.y = dot(temp0, (world_matrix._m01_m11_m21_m31));\n    // dp4 r1.z, r0, c164\n    temp1.z = dot(temp0, (world_matrix._m02_m12_m22_m32));\n    // dp4 r0.x, r1, c166\n    temp0.x = dot(temp1, (view_matrix._m00_m10_m20_m30));\n    // dp4 r0.y, r1, c167\n    temp0.y = dot(temp1, (view_matrix._m01_m11_m21_m31));\n    // dp4 r0.z, r1, c168\n    temp0.z = dot(temp1, (view_matrix._m02_m12_m22_m32));\n    // dp4 r0.w, r1, c169\n    temp0.w = dot(temp1, (view_matrix._m03_m13_m23_m33));\n    // mov o1.xyz, r1\n    o.texcoord5.xyz = temp1.xyz;\n    // dp4 o0.x, r0, c170\n    o.position.x = dot(temp0, (proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, r0, c171\n    o.position.y = dot(temp0, (proj_matrix._m01_m11_m21_m31));\n    // dp4 r1.w, r0, c173\n    temp1.w = dot(temp0, (proj_matrix._m03_m13_m23_m33));\n    // dp4 r1.z, r0, c172\n    temp1.z = dot(temp0, (proj_matrix._m02_m12_m22_m32));\n    // add r0.x, r1.w, -c175.x\n    temp0.x = temp1.w + -ref_opacity_fade.x;\n    // mov o0.zw, r1\n    o.position.zw = temp1.zw;\n    // add o1.w, r1.z, c174.x\n    o.texcoord5.w = temp1.z + camera_near_range.x;\n    // rcp r0.y, c175.y\n    temp0.y = 1.0f / ref_opacity_fade.y;\n    // mul_sat r0.x, r0.y, r0.x\n    temp0.x = saturate(temp0.y * temp0.x);\n    // add o2.x, -r0.x, c176.w\n    o.texcoord7 = -temp0.x + float4(1, 1, 1, 1);\n    // mad r0.xyz, v3, c176.x, c176.y\n    temp0.xyz = i.normal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 r1.x, r0, c0[a0.x]\n    temp1.x = dot(temp0.xyz, (bones[0 + (addr0.x / 3)]._m00_m10_m20_m30).xyz);\n    // dp3 r1.y, r0, c1[a0.x]\n    temp1.y = dot(temp0.xyz, (bones[0 + (addr0.x / 3)]._m01_m11_m21_m31).xyz);\n    // dp3 r1.z, r0, c2[a0.x]\n    temp1.z = dot(temp0.xyz, (bones[0 + (addr0.x / 3)]._m02_m12_m22_m32).xyz);\n    // mul r1.xyz, r1, v0.y\n    temp1.xyz = temp1.xyz * i.blendweight.yyy;\n    // dp3 r2.x, r0, c0[a0.y]\n    temp2.x = dot(temp0.xyz, (bones[0 + (addr0.y / 3)]._m00_m10_m20_m30).xyz);\n    // dp3 r2.y, r0, c1[a0.y]\n    temp2.y = dot(temp0.xyz, (bones[0 + (addr0.y / 3)]._m01_m11_m21_m31).xyz);\n    // dp3 r2.z, r0, c2[a0.y]\n    temp2.z = dot(temp0.xyz, (bones[0 + (addr0.y / 3)]._m02_m12_m22_m32).xyz);\n    // mad r1.xyz, v0.x, r2, r1\n    temp1.xyz = i.blendweight.xxx * temp2.xyz + temp1.xyz;\n    // dp3 r2.x, r0, c0[a0.z]\n    temp2.x = dot(temp0.xyz, (bones[0 + (addr0.z / 3)]._m00_m10_m20_m30).xyz);\n    // dp3 r2.y, r0, c1[a0.z]\n    temp2.y = dot(temp0.xyz, (bones[0 + (addr0.z / 3)]._m01_m11_m21_m31).xyz);\n    // dp3 r2.z, r0, c2[a0.z]\n    temp2.z = dot(temp0.xyz, (bones[0 + (addr0.z / 3)]._m02_m12_m22_m32).xyz);\n    // mad r0.xyz, v0.z, r2, r1\n    temp0.xyz = i.blendweight.zzz * temp2.xyz + temp1.xyz;\n    // nrm r1.xyz, r0\n    temp1.xyz = normalize(temp0.xyz).xyz;\n    // dp3 o5.x, r1, c162\n    o.texcoord2.x = dot(temp1.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o5.y, r1, c163\n    o.texcoord2.y = dot(temp1.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o5.z, r1, c164\n    o.texcoord2.z = dot(temp1.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mov o3.xy, v4\n    o.texcoord1 = i.texcoord4;\n    // mov o4.xy, v5\n    o.texcoord = i.texcoord;\n    // \n\n    return o;\n}\n")),(0,m.kt)("p",null,"Decompiled by DXDecompiler."),(0,m.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x4 camera_world_matrix : register(ps_3_0, c0);\nsampler2D diffuse_texture : register(ps_3_0, s2);\nsampler2D opacity_texture : register(ps_3_0, s1);\nfloat3 ref_fresnel_settings : register(ps_3_0, c3);\nsamplerCUBE reflection_texture : register(ps_3_0, s0);\nstruct PixelMain_Input\n{\n    float3 texcoord5 : TEXCOORD5;\n    float texcoord7 : TEXCOORD7;\n    float2 texcoord : TEXCOORD;\n    float3 texcoord2 : TEXCOORD2;\n};\n\nfloat4 PixelMain(PixelMain_Input i) : COLOR\n{\n    float4 out_color;\n    float4 temp0, temp1, temp2, temp3;\n    // def c4, 1, -1, 0.5773672, 0\n    // dcl_texcoord5 v0.xyz\n    // dcl_texcoord7 v1.x\n    // dcl_texcoord v2.xy\n    // dcl_texcoord2 v3.xyz\n    // dcl_cube s0\n    // dcl_2d s1\n    // dcl_2d s2\n    // mov r0.x, -c0.w\n    temp0.x = -(camera_world_matrix._m00_m10_m20_m30).w;\n    // mov r0.y, -c1.w\n    temp0.y = -(camera_world_matrix._m01_m11_m21_m31).w;\n    // mov r0.z, -c2.w\n    temp0.z = -(camera_world_matrix._m02_m12_m22_m32).w;\n    // add r0.xyz, r0, v0\n    temp0.xyz = temp0.xyz + i.texcoord5.xyz;\n    // nrm r1.xyz, r0\n    temp1.xyz = normalize(temp0.xyz).xyz;\n    // nrm_pp r0.xyz, v3\n    temp0.xyz = /* not implemented _pp modifier */ normalize(i.texcoord2.xyz).xyz;\n    // dp3 r0.w, r0, -r1\n    temp0.w = dot(temp0.xyz, -temp1.xyz);\n    // add r1.w, r0.w, r0.w\n    temp1.w = temp0.w + temp0.w;\n    // mov_sat r0.w, r0.w\n    temp0.w = saturate(temp0.w);\n    // mad_pp r0.xyz, r1.w, -r0, -r1\n    temp0.xyz = /* not implemented _pp modifier */ temp1.www * -temp0.xyz + -temp1.xyz;\n    // texld_pp r1, r0, s0\n    temp1 = /* not implemented _pp modifier */ texCUBE(reflection_texture, temp0.xyz);\n    // texld_pp r2, v2, s2\n    temp2 = /* not implemented _pp modifier */ tex2D(diffuse_texture, i.texcoord.xy);\n    // texld_pp r3, v2, s1\n    temp3 = /* not implemented _pp modifier */ tex2D(opacity_texture, i.texcoord.xy);\n    // mad_pp oC0.xyz, r1, r3.z, r2\n    out_color.xyz = /* not implemented _pp modifier */ temp1.xyz * temp3.zzz + temp2.xyz;\n    // dp3 r0.x, r1, r1\n    temp0.x = dot(temp1.xyz, temp1.xyz);\n    // rsq r0.x, r0.x\n    temp0.x = 1 / sqrt(temp0.x);\n    // rcp r0.x, r0.x\n    temp0.x = 1.0f / temp0.x;\n    // mul_sat_pp r0.x, r0.x, c4.z\n    ;// error\n    // add r0.yw, -r0.xxzw, c4.x\n    temp0.yw = -temp0.xw + float2(1, 1);\n    // mad_pp r0.x, c3.z, r0.y, r0.x\n    temp0.x = /* not implemented _pp modifier */ ref_fresnel_settings.z * temp0.y + temp0.x;\n    // mul_pp r0.x, r0.x, r3.x\n    temp0.x = /* not implemented _pp modifier */ temp0.x * temp3.x;\n    // mov r1.x, c4.x\n    temp1.x = float1(1);\n    // add r0.y, r1.x, c3.x\n    temp0.y = temp1.x + ref_fresnel_settings.x;\n    // pow r1.y, r0.w, r0.y\n    temp1.y = pow(temp0.w, temp0.y);\n    // add r0.y, r1.y, c4.y\n    temp0.y = temp1.y + float1(-1);\n    // mad r0.y, c3.y, r0.y, r1.x\n    temp0.y = ref_fresnel_settings.y * temp0.y + temp1.x;\n    // mad_pp r0.x, r0.x, r0.y, r3.y\n    temp0.x = /* not implemented _pp modifier */ temp0.x * temp0.y + temp3.y;\n    // mul_pp oC0.w, r0.x, v1.x\n    out_color.w = /* not implemented _pp modifier */ temp0.x * i.texcoord7.x;\n    // \n\n    return out_color;\n}\n")),(0,m.kt)("p",null,"Decompiled by DXDecompiler."))}l.isMDXComponent=!0}}]);