"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[28319],{3905:(e,t,r)=>{r.d(t,{Zo:()=>x,kt:()=>s});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function m(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},p=Object.keys(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var d=n.createContext({}),l=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):m(m({},t),e)),r},x=function(e){var t=l(e.components);return n.createElement(d.Provider,{value:t},e.children)},i="mdxType",_={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,p=e.originalType,d=e.parentName,x=a(e,["components","mdxType","originalType","parentName"]),i=l(r),c=o,s=i["".concat(d,".").concat(c)]||i[c]||_[c]||p;return r?n.createElement(s,m(m({ref:t},x),{},{components:r})):n.createElement(s,m({ref:t},x))}));function s(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var p=r.length,m=new Array(p);m[0]=c;var a={};for(var d in t)hasOwnProperty.call(t,d)&&(a[d]=t[d]);a.originalType=e,a[i]="string"==typeof e?e:o,m[1]=a;for(var l=2;l<p;l++)m[l]=r[l];return n.createElement.apply(null,m)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},27444:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>m,default:()=>_,frontMatter:()=>p,metadata:()=>a,toc:()=>l});var n=r(87462),o=(r(67294),r(3905));const p={id:959159123301096e4,title:"Opacity Default Cube Environment Mapping Cube Fresnel Diffuse Texture Distortion Fps Normalmap"},m="Opacity Default Cube Environment Mapping Cube Fresnel Diffuse Texture Distortion Fps Normalmap",a={unversionedId:"Generated/Shaders/Base/[2500-2600]/9591591233010960000",id:"Generated/Shaders/Base/[2500-2600]/9591591233010960000",title:"Opacity Default Cube Environment Mapping Cube Fresnel Diffuse Texture Distortion Fps Normalmap",description:"(opacityCUBEENVIRONMENTMAPPINGDIFFUSETEXTUREFPS:NORMALMAP, 0x851c2d68725e88d6)",source:"@site/docs/Generated/Shaders/Base/[2500-2600]/0x851c2d68725e88d6.mdx",sourceDirName:"Generated/Shaders/Base/[2500-2600]",slug:"/Generated/Shaders/Base/[2500-2600]/9591591233010960000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[2500-2600]/9591591233010960000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/docs/Generated/Shaders/Base/[2500-2600]/0x851c2d68725e88d6.mdx",tags:[],version:"current",frontMatter:{id:"9591591233010960000",title:"Opacity Default Cube Environment Mapping Cube Fresnel Diffuse Texture Distortion Fps Normalmap"},sidebar:"docsSidebar",previous:{title:"Generic Default Diffuse Texture Double Sided Global Environment Mapping Gloss Blurs Cubemap Gsma Texture Normalmap Rl Cops Skinned 3weights",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[2500-2600]/9589976963293850000"},next:{title:"Generic Default Diffuse Texture Normalmap Skinned 2weights",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[2500-2600]/9592079275990921000"}},d={},l=[{value:"Technique <code>transparent_fps</code>",id:"technique-transparent_fps",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Sampler 1",id:"sampler-1",level:4},{value:"Sampler 2",id:"sampler-2",level:4},{value:"Sampler 3",id:"sampler-3",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],x={toc:l},i="wrapper";function _(e){let{components:t,...r}=e;return(0,o.kt)(i,(0,n.Z)({},x,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"opacity-default-cube-environment-mapping-cube-fresnel-diffuse-texture-distortion-fps-normalmap"},"Opacity Default Cube Environment Mapping Cube Fresnel Diffuse Texture Distortion Fps Normalmap"),(0,o.kt)("p",null,"(",(0,o.kt)("inlineCode",{parentName:"p"},"opacity:default:CUBE_ENVIRONMENT_MAPPING:CUBE_FRESNEL:DIFFUSE_TEXTURE:DISTORTION:FPS:NORMALMAP"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"0x851c2d68725e88d6"),")"),(0,o.kt)("h3",{id:"technique-transparent_fps"},"Technique ",(0,o.kt)("inlineCode",{parentName:"h3"},"transparent_fps")),(0,o.kt)("h3",{id:"render-states"},"Render States"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 0,\n    D3DRS_ALPHABLENDENABLE = 1,\n    D3DRS_CULLMODE = 2,\n    D3DRS_COLORWRITEENABLE = 7,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n    D3DRS_BLENDOP = 1,\n    D3DRS_DESTBLEND = 6,\n    D3DRS_SRCBLEND = 5,\n};\n")),(0,o.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,o.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 1,\n    D3DSAMP_MINFILTER = 1,\n    D3DSAMP_MIPFILTER = 1,\n};\n")),(0,o.kt)("h4",{id:"sampler-1"},"Sampler 1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 2,\n    D3DSAMP_MINFILTER = 2,\n    D3DSAMP_MIPFILTER = 2,\n};\n")),(0,o.kt)("h4",{id:"sampler-2"},"Sampler 2"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,o.kt)("h4",{id:"sampler-3"},"Sampler 3"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,o.kt)("h3",{id:"shaders"},"Shaders"),(0,o.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"float camera_near_range : register(vs_3_0, c12);\ncolumn_major float4x4 proj_matrix : register(vs_3_0, c8);\nfloat3 render_target_texel_offset : register(vs_3_0, c13);\ncolumn_major float4x4 view_matrix : register(vs_3_0, c4);\nfloat3 vp_offset : register(vs_3_0, c14);\nfloat3 vp_size : register(vs_3_0, c15);\ncolumn_major float4x4 world_matrix : register(vs_3_0, c0);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 normal : NORMAL;\n    float4 texcoord1 : TEXCOORD1;\n    float4 texcoord4 : TEXCOORD4;\n    float4 texcoord : TEXCOORD;\n    float4 tangent : TANGENT;\n    float4 binormal : BINORMAL;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float4 texcoord6 : TEXCOORD6;\n    float4 texcoord5 : TEXCOORD5;\n    float2 texcoord1 : TEXCOORD1;\n    float3 texcoord4 : TEXCOORD4;\n    float4 texcoord : TEXCOORD;\n    float3 texcoord2 : TEXCOORD2;\n    float3 texcoord3 : TEXCOORD3;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float4 temp0, temp1, temp2;\n    float temp3;\n    // def c16, 2, -1, 0.5, 1\n    // dcl_position v0\n    // dcl_normal v1\n    // dcl_texcoord1 v2\n    // dcl_texcoord4 v3\n    // dcl_texcoord v4\n    // dcl_tangent v5\n    // dcl_binormal v6\n    // dcl_position o0\n    // dcl_texcoord6 o1\n    // dcl_texcoord5 o2\n    // dcl_texcoord1 o3.xy\n    // dcl_texcoord4 o4.xyz\n    // dcl_texcoord o5\n    // dcl_texcoord2 o6.xyz\n    // dcl_texcoord3 o7.xyz\n    // mov r0.xz, c16\n    temp0.xz = float2(2, 0.5);\n    // add r0.yz, r0.z, c13.xxyw\n    temp0.yz = temp0.zz + render_target_texel_offset.xy;\n    // mov r1.xy, c15\n    temp1.xy = vp_size.xy;\n    // mad r0.xw, c14.xyzy, r0.x, r1.xyzy\n    temp0.xw = vp_offset.xy * temp0.xx + temp1.xy;\n    // add r0.xw, r0, c16.y\n    temp0.xw = temp0.xw + float2(-1, -1);\n    // dp4 r1.w, v0, c3\n    temp1.w = dot(i.position, (world_matrix._m03_m13_m23_m33));\n    // dp4 r1.x, v0, c0\n    temp1.x = dot(i.position, (world_matrix._m00_m10_m20_m30));\n    // dp4 r1.y, v0, c1\n    temp1.y = dot(i.position, (world_matrix._m01_m11_m21_m31));\n    // dp4 r1.z, v0, c2\n    temp1.z = dot(i.position, (world_matrix._m02_m12_m22_m32));\n    // dp4 r2.x, r1, c4\n    temp2.x = dot(temp1, (view_matrix._m00_m10_m20_m30));\n    // dp4 r2.y, r1, c5\n    temp2.y = dot(temp1, (view_matrix._m01_m11_m21_m31));\n    // dp4 r2.z, r1, c6\n    temp2.z = dot(temp1, (view_matrix._m02_m12_m22_m32));\n    // dp4 r2.w, r1, c7\n    temp2.w = dot(temp1, (view_matrix._m03_m13_m23_m33));\n    // mov o2.xyz, r1\n    o.texcoord5.xyz = temp1.xyz;\n    // dp4 r1.w, r2, c11\n    temp1.w = dot(temp2, (proj_matrix._m03_m13_m23_m33));\n    // mul r0.xw, r0, r1.w\n    temp0.xw = temp0.xw * temp1.ww;\n    // dp4 r1.x, r2, c8\n    temp1.x = dot(temp2, (proj_matrix._m00_m10_m20_m30));\n    // mad r0.x, r1.x, c15.x, r0.x\n    temp0.x = temp1.x * vp_size.x + temp0.x;\n    // add r3.x, r1.w, r1.w\n    temp3.x = temp1.w + temp1.w;\n    // mad o1.x, r3.x, r0.y, r0.x\n    o.texcoord6.x = temp3.x * temp0.y + temp0.x;\n    // dp4 r1.y, r2, c9\n    temp1.y = dot(temp2, (proj_matrix._m01_m11_m21_m31));\n    // dp4 r1.z, r2, c10\n    temp1.z = dot(temp2, (proj_matrix._m02_m12_m22_m32));\n    // mad r0.x, r1.y, -c15.y, r0.w\n    temp0.x = temp1.y * -vp_size.y + temp0.w;\n    // mov o0, r1\n    o.position = temp1;\n    // mul o1.zw, r1, c16.xywx\n    o.texcoord6.zw = temp1.zw * float2(1, 2);\n    // add o2.w, r1.z, c12.x\n    o.texcoord5.w = temp1.z + camera_near_range.x;\n    // mad o1.y, r3.x, r0.z, r0.x\n    o.texcoord6.y = temp3.x * temp0.z + temp0.x;\n    // mad r0.xyz, v5, c16.x, c16.y\n    temp0.xyz = i.tangent.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o6.x, r0, c0\n    o.texcoord2.x = dot(temp0.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o7.x, r0, c1\n    o.texcoord3.x = dot(temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o4.x, r0, c2\n    o.texcoord4.x = dot(temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mad r0.xyz, v6, c16.x, c16.y\n    temp0.xyz = i.binormal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o6.y, -r0, c0\n    o.texcoord2.y = dot(-temp0.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o7.y, -r0, c1\n    o.texcoord3.y = dot(-temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o4.y, -r0, c2\n    o.texcoord4.y = dot(-temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mad r0.xyz, v1, c16.x, c16.y\n    temp0.xyz = i.normal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o6.z, r0, c0\n    o.texcoord2.z = dot(temp0.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o7.z, r0, c1\n    o.texcoord3.z = dot(temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o4.z, r0, c2\n    o.texcoord4.z = dot(temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mov o3.xy, v3\n    o.texcoord1 = i.texcoord4;\n    // mov o5.xy, v4\n    o.texcoord.xy = i.texcoord.xy;\n    // mov o5.zw, v2.xyxy\n    o.texcoord.zw = i.texcoord1.xy;\n    // \n\n    return o;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."),(0,o.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"sampler2D bump_normal_texture : register(ps_3_0, s3);\nsampler2D depth : register(ps_3_0, s0);\nsampler2D diffuse_texture : register(ps_3_0, s2);\nsampler2D distortion_source : register(ps_3_0, s1);\nfloat ref_depth_opacity : register(ps_3_0, c0);\nstruct PixelMain_Input\n{\n    float4 texcoord6 : TEXCOORD6;\n    float3 texcoord4 : TEXCOORD4;\n    float4 texcoord : TEXCOORD;\n    float3 texcoord2 : TEXCOORD2;\n    float3 texcoord3 : TEXCOORD3;\n};\n\nfloat4 PixelMain(PixelMain_Input i) : COLOR\n{\n    float4 out_color;\n    float4 temp0, temp1, temp2;\n    // def c1, -0.5, 1, 0.05, 2\n    // dcl_texcoord6 v0\n    // dcl_texcoord4 v1.xyz\n    // dcl_texcoord v2\n    // dcl_texcoord2 v3.xyz\n    // dcl_texcoord3 v4.xyz\n    // dcl_2d s0\n    // dcl_2d s1\n    // dcl_2d s2\n    // dcl_2d s3\n    // texld_pp r0, v2.zwzw, s3\n    temp0 = /* not implemented _pp modifier */ tex2D(bump_normal_texture, i.texcoord.zw);\n    // add_pp r0.xy, r0.wyzw, c1.x\n    temp0.xy = /* not implemented _pp modifier */ temp0.wy + float2(-0.5, -0.5);\n    // add_pp r0.xy, r0, r0\n    temp0.xy = /* not implemented _pp modifier */ temp0.xy + temp0.xy;\n    // mul_pp r0.w, r0.x, r0.x\n    temp0.w = /* not implemented _pp modifier */ temp0.x * temp0.x;\n    // mad_pp r0.w, r0.y, r0.y, -r0.w\n    temp0.w = /* not implemented _pp modifier */ temp0.y * temp0.y + -temp0.w;\n    // add_pp r0.w, -r0.w, c1.y\n    temp0.w = /* not implemented _pp modifier */ -temp0.w + float1(1);\n    // rsq_pp r0.w, r0.w\n    temp0.w = /* not implemented _pp modifier */ 1 / sqrt(temp0.w);\n    // rcp_pp r0.z, r0.w\n    temp0.z = /* not implemented _pp modifier */ 1.0f / temp0.w;\n    // dp3 r1.z, r0, v1\n    temp1.z = dot(temp0.xyz, i.texcoord4.xyz);\n    // dp3 r1.x, r0, v3\n    temp1.x = dot(temp0.xyz, i.texcoord2.xyz);\n    // dp3 r1.y, r0, v4\n    temp1.y = dot(temp0.xyz, i.texcoord3.xyz);\n    // dp3 r0.x, r1, r1\n    temp0.x = dot(temp1.xyz, temp1.xyz);\n    // rsq r0.x, r0.x\n    temp0.x = 1 / sqrt(temp0.x);\n    // mul_pp r0.xy, r0.x, r1\n    temp0.xy = /* not implemented _pp modifier */ temp0.xx * temp1.xy;\n    // texld r1, v0, s0\n    temp1 = tex2D(depth, i.texcoord6.xy);\n    // add r0.z, -r1.x, v0.z\n    temp0.z = -temp1.x + i.texcoord6.z;\n    // rcp r0.w, c0.x\n    temp0.w = 1.0f / ref_depth_opacity.x;\n    // mul_sat_pp r0.z, r0.w, r0_abs.z\n    ;// error\n    // mul_pp r0.w, r0.z, c1.z\n    temp0.w = /* not implemented _pp modifier */ temp0.z * float1(0.05);\n    // mul r0.xy, r0.w, r0\n    temp0.xy = temp0.ww * temp0.xy;\n    // rcp r0.w, v0.w\n    temp0.w = 1.0f / i.texcoord6.w;\n    // mad r0.xy, v0, r0.w, r0\n    temp0.xy = i.texcoord6.xy * temp0.ww + temp0.xy;\n    // texld r1, r0, s1\n    temp1 = tex2D(distortion_source, temp0.xy);\n    // texld_pp r2, v2, s2\n    temp2 = /* not implemented _pp modifier */ tex2D(diffuse_texture, i.texcoord.xy);\n    // mul r0.xyw, r1.xyzz, r2.xyzz\n    temp0.xyw = temp1.xyz * temp2.xyz;\n    // mad r1.xyz, r0.xyww, -c1.w, r2\n    temp1.xyz = temp0.xyw * float3(-2, -2, -2) + temp2.xyz;\n    // add r0.xyw, r0, r0\n    temp0.xyw = temp0.xyw + temp0.xyw;\n    // mad_pp oC0.xyz, r0.z, r1, r0.xyww\n    out_color.xyz = /* not implemented _pp modifier */ temp0.zzz * temp1.xyz + temp0.xyw;\n    // mov_pp oC0.w, c1.y\n    out_color.w = /* not implemented _pp modifier */ float1(1);\n    // \n\n    return out_color;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."))}_.isMDXComponent=!0}}]);