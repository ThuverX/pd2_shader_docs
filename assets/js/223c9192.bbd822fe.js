"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[55981],{603905:(e,t,r)=>{r.d(t,{Zo:()=>_,kt:()=>c});var n=r(667294);function m(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){m(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,m=function(e,t){if(null==e)return{};var r,n,m={},p=Object.keys(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||(m[r]=e[r]);return m}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(m[r]=e[r])}return m}var x=n.createContext({}),d=function(e){var t=n.useContext(x),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},_=function(e){var t=d(e.components);return n.createElement(x.Provider,{value:t},e.children)},l="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},i=n.forwardRef((function(e,t){var r=e.components,m=e.mdxType,p=e.originalType,x=e.parentName,_=o(e,["components","mdxType","originalType","parentName"]),l=d(r),i=m,c=l["".concat(x,".").concat(i)]||l[i]||y[i]||p;return r?n.createElement(c,a(a({ref:t},_),{},{components:r})):n.createElement(c,a({ref:t},_))}));function c(e,t){var r=arguments,m=t&&t.mdxType;if("string"==typeof e||m){var p=r.length,a=new Array(p);a[0]=i;var o={};for(var x in t)hasOwnProperty.call(t,x)&&(o[x]=t[x]);o.originalType=e,o[l]="string"==typeof e?e:m,a[1]=o;for(var d=2;d<p;d++)a[d]=r[d];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}i.displayName="MDXCreateElement"},64729:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>x,contentTitle:()=>a,default:()=>y,frontMatter:()=>p,metadata:()=>o,toc:()=>d});var n=r(487462),m=(r(667294),r(603905));const p={id:0x28dade98fca15c00,title:"Generic Customizable Default Cube Environment Mapping Decal Sticker Uv2 Diffuse Texture Gradientmap Normalmap Pattern Gradientmap Pattern Gradientmap Angle Offset Pattern Uv2 Skinned 3weights Wear Tear Masking"},a="Generic Customizable Default Cube Environment Mapping Decal Sticker Uv2 Diffuse Texture Gradientmap Normalmap Pattern Gradientmap Pattern Gradientmap Angle Offset Pattern Uv2 Skinned 3weights Wear Tear Masking",o={unversionedId:"Generated/Shaders/Base/[700-800]/2943910055094869000",id:"Generated/Shaders/Base/[700-800]/2943910055094869000",title:"Generic Customizable Default Cube Environment Mapping Decal Sticker Uv2 Diffuse Texture Gradientmap Normalmap Pattern Gradientmap Pattern Gradientmap Angle Offset Pattern Uv2 Skinned 3weights Wear Tear Masking",description:"(genericcustomizableCUBEENVIRONMENTMAPPINGDIFFUSETEXTURENORMALMAPPATTERNGRADIENTMAPANGLEOFFSETSKINNED3WEIGHTS:WEARTEARMASKING, 0x28dade98fca15b8e)",source:"@site/docs/Generated/Shaders/Base/[700-800]/0x28dade98fca15b8e.mdx",sourceDirName:"Generated/Shaders/Base/[700-800]",slug:"/Generated/Shaders/Base/[700-800]/2943910055094869000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[700-800]/2943910055094869000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/Generated/Shaders/Base/[700-800]/0x28dade98fca15b8e.mdx",tags:[],version:"current",frontMatter:{id:"2943910055094869000",title:"Generic Customizable Default Cube Environment Mapping Decal Sticker Uv2 Diffuse Texture Gradientmap Normalmap Pattern Gradientmap Pattern Gradientmap Angle Offset Pattern Uv2 Skinned 3weights Wear Tear Masking"},sidebar:"docsSidebar",previous:{title:"Generic Shadow Caster Ati Blue Mask Tint Diffuse Texture Instanced Normalmap",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[700-800]/2943655650233432000"},next:{title:"Generic Shadow Caster Ati Cube Environment Mapping Diffuse Texture Skinned 1weight",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[700-800]/2959934120984042000"}},x={},d=[{value:"Technique <code>deferred_ambient</code>",id:"technique-deferred_ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Sampler 1",id:"sampler-1",level:4},{value:"Sampler 2",id:"sampler-2",level:4},{value:"Sampler 3",id:"sampler-3",level:4},{value:"Sampler 4",id:"sampler-4",level:4},{value:"Sampler 5",id:"sampler-5",level:4},{value:"Sampler 6",id:"sampler-6",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],_={toc:d},l="wrapper";function y(e){let{components:t,...r}=e;return(0,m.kt)(l,(0,n.Z)({},_,r,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("h1",{id:"generic-customizable-default-cube-environment-mapping-decal-sticker-uv2-diffuse-texture-gradientmap-normalmap-pattern-gradientmap-pattern-gradientmap-angle-offset-pattern-uv2-skinned-3weights-wear-tear-masking"},"Generic Customizable Default Cube Environment Mapping Decal Sticker Uv2 Diffuse Texture Gradientmap Normalmap Pattern Gradientmap Pattern Gradientmap Angle Offset Pattern Uv2 Skinned 3weights Wear Tear Masking"),(0,m.kt)("p",null,"(",(0,m.kt)("inlineCode",{parentName:"p"},"generic_customizable:default:CUBE_ENVIRONMENT_MAPPING:DECAL_STICKER_UV2:DIFFUSE_TEXTURE:GRADIENTMAP:NORMALMAP:PATTERN_GRADIENTMAP:PATTERN_GRADIENTMAP_ANGLE_OFFSET:PATTERN_UV2:SKINNED_3WEIGHTS:WEAR_TEAR_MASKING"),", ",(0,m.kt)("inlineCode",{parentName:"p"},"0x28dade98fca15b8e"),")"),(0,m.kt)("p",null,"This template is referenced 1 time by ",(0,m.kt)("a",{parentName:"p",href:"/docs/Generated/Render%20Templates/base.render_template_database#generic-customizable-cube-environment-mapping-decal-sticker-uv2-diffuse-texture-gradientmap-normalmap-pattern-gradientmap-pattern-gradientmap-angle-offset-pattern-uv2-skinned-3weights-wear-tear-masking"},"generic_customizable:CUBE_ENVIRONMENT_MAPPING:DECAL_STICKER_UV2:DIFFUSE_TEXTURE:GRADIENTMAP:NORMALMAP:PATTERN_GRADIENTMAP:PATTERN_GRADIENTMAP_ANGLE_OFFSET:PATTERN_UV2:SKINNED_3WEIGHTS:WEAR_TEAR_MASKING"),".\nThis template uses the following inputs:\n|Name|UI Name|Type|\n|---|---|---|\n|diffuse_layer3_texture|Decal (UV2)|texture|\n|diffuse_layer1_texture|Base color gradient map|texture|\n|diffuse_layer2_texture|Pattern gradient texture|texture|\n|diffuse_layer0_texture|Pattern on second UV|texture|\n|diffuse_texture|Diffuse Texture (UV1)|texture|\n|bump_normal_texture|Normal map (UV2 else UV1)|texture|\n|reflection_texture|Reflection Cube|texture|\n|pattern_tweak|Pattern Tiling, Pattern Rotation, Pattern Spec Opacity|vector3|\n|pattern_pos|Pattern offset|vector3|\n|uv_scale|Sticker Scale x y, Sticker Spec Influence|vector3|\n|uv_offset_rot|Sticker Position Offset x y, Sticker Rotation|vector3|\n|wear_tear_value|Wear and Tear Mask Reference|scalar|\n|cubemap_pattern_control|Pattern Cubemap Intesity, Pattern Cubemap influence|vector3|."),(0,m.kt)("h3",{id:"technique-deferred_ambient"},"Technique ",(0,m.kt)("inlineCode",{parentName:"h3"},"deferred_ambient")),(0,m.kt)("h3",{id:"render-states"},"Render States"),(0,m.kt)("p",null,"More info can be found on the ",(0,m.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 1,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 2,\n    D3DRS_COLORWRITEENABLE = 15,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,m.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,m.kt)("p",null,"More info can be found on the ",(0,m.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,m.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 2,\n    D3DSAMP_MINFILTER = 2,\n    D3DSAMP_MIPFILTER = 2,\n};\n")),(0,m.kt)("h4",{id:"sampler-1"},"Sampler 1"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 2,\n    D3DSAMP_MINFILTER = 2,\n    D3DSAMP_MIPFILTER = 2,\n};\n")),(0,m.kt)("h4",{id:"sampler-2"},"Sampler 2"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 2,\n    D3DSAMP_MINFILTER = 2,\n    D3DSAMP_MIPFILTER = 2,\n};\n")),(0,m.kt)("h4",{id:"sampler-3"},"Sampler 3"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,m.kt)("h4",{id:"sampler-4"},"Sampler 4"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,m.kt)("h4",{id:"sampler-5"},"Sampler 5"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,m.kt)("h4",{id:"sampler-6"},"Sampler 6"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,m.kt)("h3",{id:"shaders"},"Shaders"),(0,m.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x3 bones[54] : register(vs_3_0, c0);\nfloat camera_near_range : register(vs_3_0, c174);\ncolumn_major float4x4 proj_matrix : register(vs_3_0, c170);\nfloat3 ref_uv_offset_rot : register(vs_3_0, c176);\nfloat3 ref_uv_scale : register(vs_3_0, c175);\ncolumn_major float4x4 view_matrix : register(vs_3_0, c166);\ncolumn_major float4x4 world_matrix : register(vs_3_0, c162);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 normal : NORMAL;\n    float4 blendweight : BLENDWEIGHT;\n    float4 blendindices : BLENDINDICES;\n    float4 texcoord : TEXCOORD;\n    float4 texcoord1 : TEXCOORD1;\n    float4 tangent : TANGENT;\n    float4 binormal : BINORMAL;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float2 texcoord6 : TEXCOORD6;\n    float texcoord7 : TEXCOORD7;\n    float3 texcoord5 : TEXCOORD5;\n    float4 texcoord : TEXCOORD;\n    float texcoord1 : TEXCOORD1;\n    float3 texcoord2 : TEXCOORD2;\n    float3 texcoord3 : TEXCOORD3;\n    float3 texcoord4 : TEXCOORD4;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float4 temp0, temp1;\n    float3 addr0, temp2;\n    // def c177, 2, -1, 3, 1\n    // def c178, 0.5, -0.5, 0.15915494, 1.000001\n    // def c179, 6.2831855, -3.1415927, 0, 0\n    // dcl_position v0\n    // dcl_normal v1\n    // dcl_blendweight v2\n    // dcl_blendindices v3\n    // dcl_texcoord v4\n    // dcl_texcoord1 v5\n    // dcl_tangent v6\n    // dcl_binormal v7\n    // dcl_position o0\n    // dcl_texcoord6 o1.xy\n    // dcl_texcoord7 o2.x\n    // dcl_texcoord5 o3.xyz\n    // dcl_texcoord o4\n    // dcl_texcoord1 o5.x\n    // dcl_texcoord2 o6.xyz\n    // dcl_texcoord3 o7.xyz\n    // dcl_texcoord4 o8.xyz\n    // mul r0.xyz, c177.z, v3\n    temp0.xyz = float3(3, 3, 3) * i.blendindices.xyz;\n    // mova a0.xyz, r0.yxzw\n    addr0.xyz = temp0.yxz;\n    // dp4 r1.x, v0, c0[a0.x]\n    temp1.x = dot(i.position, (bones[0 + (addr0.x / 3)]._m00_m10_m20_m30));\n    // dp4 r1.y, v0, c1[a0.x]\n    temp1.y = dot(i.position, (bones[0 + (addr0.x / 3)]._m01_m11_m21_m31));\n    // dp4 r1.z, v0, c2[a0.x]\n    temp1.z = dot(i.position, (bones[0 + (addr0.x / 3)]._m02_m12_m22_m32));\n    // mul r1.xyz, r1, v2.y\n    temp1.xyz = temp1.xyz * i.blendweight.yyy;\n    // dp4 r0.x, v0, c0[a0.y]\n    temp0.x = dot(i.position, (bones[0 + (addr0.y / 3)]._m00_m10_m20_m30));\n    // dp4 r0.y, v0, c1[a0.y]\n    temp0.y = dot(i.position, (bones[0 + (addr0.y / 3)]._m01_m11_m21_m31));\n    // dp4 r0.z, v0, c2[a0.y]\n    temp0.z = dot(i.position, (bones[0 + (addr0.y / 3)]._m02_m12_m22_m32));\n    // mad r0.xyz, v2.x, r0, r1\n    temp0.xyz = i.blendweight.xxx * temp0.xyz + temp1.xyz;\n    // dp4 r1.x, v0, c0[a0.z]\n    temp1.x = dot(i.position, (bones[0 + (addr0.z / 3)]._m00_m10_m20_m30));\n    // dp4 r1.y, v0, c1[a0.z]\n    temp1.y = dot(i.position, (bones[0 + (addr0.z / 3)]._m01_m11_m21_m31));\n    // dp4 r1.z, v0, c2[a0.z]\n    temp1.z = dot(i.position, (bones[0 + (addr0.z / 3)]._m02_m12_m22_m32));\n    // mad r0.xyz, v2.z, r1, r0\n    temp0.xyz = i.blendweight.zzz * temp1.xyz + temp0.xyz;\n    // mov r0.w, c177.w\n    temp0.w = float1(1);\n    // dp4 r1.w, r0, c165\n    temp1.w = dot(temp0, (world_matrix._m03_m13_m23_m33));\n    // dp4 r1.x, r0, c162\n    temp1.x = dot(temp0, (world_matrix._m00_m10_m20_m30));\n    // dp4 r1.y, r0, c163\n    temp1.y = dot(temp0, (world_matrix._m01_m11_m21_m31));\n    // dp4 r1.z, r0, c164\n    temp1.z = dot(temp0, (world_matrix._m02_m12_m22_m32));\n    // dp4 r0.x, r1, c166\n    temp0.x = dot(temp1, (view_matrix._m00_m10_m20_m30));\n    // dp4 r0.y, r1, c167\n    temp0.y = dot(temp1, (view_matrix._m01_m11_m21_m31));\n    // dp4 r0.z, r1, c168\n    temp0.z = dot(temp1, (view_matrix._m02_m12_m22_m32));\n    // dp4 r0.w, r1, c169\n    temp0.w = dot(temp1, (view_matrix._m03_m13_m23_m33));\n    // mov o3.xyz, r1\n    o.texcoord5 = temp1;\n    // dp4 o0.x, r0, c170\n    o.position.x = dot(temp0, (proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, r0, c171\n    o.position.y = dot(temp0, (proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.w, r0, c173\n    o.position.w = dot(temp0, (proj_matrix._m03_m13_m23_m33));\n    // dp4 r0.x, r0, c172\n    temp0.x = dot(temp0, (proj_matrix._m02_m12_m22_m32));\n    // add o5.x, r0.x, c174.x\n    o.texcoord1 = temp0.x + camera_near_range.x;\n    // mov o0.z, r0.x\n    o.position.z = temp0.x;\n    // mov r0.y, c177.y\n    temp0.y = float1(-1);\n    // add r0.xyz, r0.y, c175.xyyw\n    temp0.xyz = temp0.yyy + ref_uv_scale.xyy;\n    // mul r0.xyz, r0, c178.x\n    temp0.xyz = temp0.xyz * float3(0.5, 0.5, 0.5);\n    // add r1.xyz, c176.xyyw, v5.xyyw\n    temp1.xyz = ref_uv_offset_rot.xyy + i.texcoord1.xyy;\n    // mad r0.xyz, r1, c175.xyyw, -r0\n    temp0.xyz = temp1.xyz * ref_uv_scale.xyy + -temp0.xyz;\n    // add r0.xyz, r0, c178.y\n    temp0.xyz = temp0.xyz + float3(-0.5, -0.5, -0.5);\n    // mov r1.xz, c178\n    temp1.xz = float2(0.5, 0.15915494);\n    // mad r0.w, c176.z, r1.z, r1.x\n    temp0.w = ref_uv_offset_rot.z * temp1.z + temp1.x;\n    // frc r0.w, r0.w\n    temp0.w = frac(temp0.w);\n    // mad r0.w, r0.w, c179.x, c179.y\n    temp0.w = temp0.w * float1(6.2831855) + float1(-3.1415927);\n    // sincos r1.xy, r0.w\n    temp1.xy = float2(cos(temp0.w), sin(temp0.w));\n    // mul r0.yzw, r0.xxyz, r1.xxyx\n    temp0.yzw = temp0.xyz * temp1.xyx;\n    // mad r1.y, r0.x, -r1.y, r0.w\n    temp1.y = temp0.x * -temp1.y + temp0.w;\n    // add r1.x, r0.z, r0.y\n    temp1.x = temp0.z + temp0.y;\n    // add o1.xy, r1, c178.x\n    o.texcoord6 = temp1 + float4(0.5, 0.5, 0.5, 0.5);\n    // add r0.x, c178.w, -v4.x\n    temp0.x = float1(1.000001) + -i.texcoord.x;\n    // slt r0.y, -r0.x, r0.x\n    temp0.y = (-temp0.x < temp0.x) ? 1 : 0;\n    // slt r0.x, r0.x, -r0.x\n    temp0.x = (temp0.x < -temp0.x) ? 1 : 0;\n    // add r0.x, -r0.x, r0.y\n    temp0.x = -temp0.x + temp0.y;\n    // max o2.x, r0.x, c179.z\n    o.texcoord7 = max(temp0.x, float4(0, 0, 0, 0));\n    // mad r0.xyz, v6, c177.x, c177.y\n    temp0.xyz = i.tangent.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 r1.x, r0, c0[a0.x]\n    temp1.x = dot(temp0.xyz, (bones[0 + (addr0.x / 3)]._m00_m10_m20_m30).xyz);\n    // dp3 r1.y, r0, c1[a0.x]\n    temp1.y = dot(temp0.xyz, (bones[0 + (addr0.x / 3)]._m01_m11_m21_m31).xyz);\n    // dp3 r1.z, r0, c2[a0.x]\n    temp1.z = dot(temp0.xyz, (bones[0 + (addr0.x / 3)]._m02_m12_m22_m32).xyz);\n    // mul r1.xyz, r1, v2.y\n    temp1.xyz = temp1.xyz * i.blendweight.yyy;\n    // dp3 r2.x, r0, c0[a0.y]\n    temp2.x = dot(temp0.xyz, (bones[0 + (addr0.y / 3)]._m00_m10_m20_m30).xyz);\n    // dp3 r2.y, r0, c1[a0.y]\n    temp2.y = dot(temp0.xyz, (bones[0 + (addr0.y / 3)]._m01_m11_m21_m31).xyz);\n    // dp3 r2.z, r0, c2[a0.y]\n    temp2.z = dot(temp0.xyz, (bones[0 + (addr0.y / 3)]._m02_m12_m22_m32).xyz);\n    // mad r1.xyz, v2.x, r2, r1\n    temp1.xyz = i.blendweight.xxx * temp2.xyz + temp1.xyz;\n    // dp3 r2.x, r0, c0[a0.z]\n    temp2.x = dot(temp0.xyz, (bones[0 + (addr0.z / 3)]._m00_m10_m20_m30).xyz);\n    // dp3 r2.y, r0, c1[a0.z]\n    temp2.y = dot(temp0.xyz, (bones[0 + (addr0.z / 3)]._m01_m11_m21_m31).xyz);\n    // dp3 r2.z, r0, c2[a0.z]\n    temp2.z = dot(temp0.xyz, (bones[0 + (addr0.z / 3)]._m02_m12_m22_m32).xyz);\n    // mad r0.xyz, v2.z, r2, r1\n    temp0.xyz = i.blendweight.zzz * temp2.xyz + temp1.xyz;\n    // nrm r1.xyz, r0\n    temp1.xyz = normalize(temp0.xyz).xyz;\n    // dp3 o6.x, r1, c162\n    o.texcoord2.x = dot(temp1.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o7.x, r1, c163\n    o.texcoord3.x = dot(temp1.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o8.x, r1, c164\n    o.texcoord4.x = dot(temp1.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mad r0.xyz, v7, c177.x, c177.y\n    temp0.xyz = i.binormal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 r1.x, r0, c0[a0.x]\n    temp1.x = dot(temp0.xyz, (bones[0 + (addr0.x / 3)]._m00_m10_m20_m30).xyz);\n    // dp3 r1.y, r0, c1[a0.x]\n    temp1.y = dot(temp0.xyz, (bones[0 + (addr0.x / 3)]._m01_m11_m21_m31).xyz);\n    // dp3 r1.z, r0, c2[a0.x]\n    temp1.z = dot(temp0.xyz, (bones[0 + (addr0.x / 3)]._m02_m12_m22_m32).xyz);\n    // mul r1.xyz, r1, v2.y\n    temp1.xyz = temp1.xyz * i.blendweight.yyy;\n    // dp3 r2.x, r0, c0[a0.y]\n    temp2.x = dot(temp0.xyz, (bones[0 + (addr0.y / 3)]._m00_m10_m20_m30).xyz);\n    // dp3 r2.y, r0, c1[a0.y]\n    temp2.y = dot(temp0.xyz, (bones[0 + (addr0.y / 3)]._m01_m11_m21_m31).xyz);\n    // dp3 r2.z, r0, c2[a0.y]\n    temp2.z = dot(temp0.xyz, (bones[0 + (addr0.y / 3)]._m02_m12_m22_m32).xyz);\n    // mad r1.xyz, v2.x, r2, r1\n    temp1.xyz = i.blendweight.xxx * temp2.xyz + temp1.xyz;\n    // dp3 r2.x, r0, c0[a0.z]\n    temp2.x = dot(temp0.xyz, (bones[0 + (addr0.z / 3)]._m00_m10_m20_m30).xyz);\n    // dp3 r2.y, r0, c1[a0.z]\n    temp2.y = dot(temp0.xyz, (bones[0 + (addr0.z / 3)]._m01_m11_m21_m31).xyz);\n    // dp3 r2.z, r0, c2[a0.z]\n    temp2.z = dot(temp0.xyz, (bones[0 + (addr0.z / 3)]._m02_m12_m22_m32).xyz);\n    // mad r0.xyz, v2.z, r2, r1\n    temp0.xyz = i.blendweight.zzz * temp2.xyz + temp1.xyz;\n    // nrm r1.xyz, r0\n    temp1.xyz = normalize(temp0.xyz).xyz;\n    // dp3 o6.y, -r1, c162\n    o.texcoord2.y = dot(-temp1.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o7.y, -r1, c163\n    o.texcoord3.y = dot(-temp1.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o8.y, -r1, c164\n    o.texcoord4.y = dot(-temp1.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mad r0.xyz, v1, c177.x, c177.y\n    temp0.xyz = i.normal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 r1.x, r0, c0[a0.x]\n    temp1.x = dot(temp0.xyz, (bones[0 + (addr0.x / 3)]._m00_m10_m20_m30).xyz);\n    // dp3 r1.y, r0, c1[a0.x]\n    temp1.y = dot(temp0.xyz, (bones[0 + (addr0.x / 3)]._m01_m11_m21_m31).xyz);\n    // dp3 r1.z, r0, c2[a0.x]\n    temp1.z = dot(temp0.xyz, (bones[0 + (addr0.x / 3)]._m02_m12_m22_m32).xyz);\n    // mul r1.xyz, r1, v2.y\n    temp1.xyz = temp1.xyz * i.blendweight.yyy;\n    // dp3 r2.x, r0, c0[a0.y]\n    temp2.x = dot(temp0.xyz, (bones[0 + (addr0.y / 3)]._m00_m10_m20_m30).xyz);\n    // dp3 r2.y, r0, c1[a0.y]\n    temp2.y = dot(temp0.xyz, (bones[0 + (addr0.y / 3)]._m01_m11_m21_m31).xyz);\n    // dp3 r2.z, r0, c2[a0.y]\n    temp2.z = dot(temp0.xyz, (bones[0 + (addr0.y / 3)]._m02_m12_m22_m32).xyz);\n    // mad r1.xyz, v2.x, r2, r1\n    temp1.xyz = i.blendweight.xxx * temp2.xyz + temp1.xyz;\n    // dp3 r2.x, r0, c0[a0.z]\n    temp2.x = dot(temp0.xyz, (bones[0 + (addr0.z / 3)]._m00_m10_m20_m30).xyz);\n    // dp3 r2.y, r0, c1[a0.z]\n    temp2.y = dot(temp0.xyz, (bones[0 + (addr0.z / 3)]._m01_m11_m21_m31).xyz);\n    // dp3 r2.z, r0, c2[a0.z]\n    temp2.z = dot(temp0.xyz, (bones[0 + (addr0.z / 3)]._m02_m12_m22_m32).xyz);\n    // mad r0.xyz, v2.z, r2, r1\n    temp0.xyz = i.blendweight.zzz * temp2.xyz + temp1.xyz;\n    // nrm r1.xyz, r0\n    temp1.xyz = normalize(temp0.xyz).xyz;\n    // dp3 o6.z, r1, c162\n    o.texcoord2.z = dot(temp1.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o7.z, r1, c163\n    o.texcoord3.z = dot(temp1.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o8.z, r1, c164\n    o.texcoord4.z = dot(temp1.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mov o4.xy, v4\n    o.texcoord.xy = i.texcoord.xy;\n    // mov o4.zw, v5.xyxy\n    o.texcoord.zw = i.texcoord1.xy;\n    // \n\n    return o;\n}\n")),(0,m.kt)("p",null,"Decompiled by DXDecompiler."),(0,m.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-hlsl"},"sampler2D bump_normal_texture : register(ps_3_0, s5);\ncolumn_major float4x4 camera_world_matrix : register(ps_3_0, c0);\nsampler2D diffuse_layer0_texture : register(ps_3_0, s3);\nsampler2D diffuse_layer1_texture : register(ps_3_0, s1);\nsampler2D diffuse_layer2_texture : register(ps_3_0, s2);\nsampler2D diffuse_layer3_texture : register(ps_3_0, s0);\nsampler2D diffuse_texture : register(ps_3_0, s4);\nfloat2 ref_cubemap_pattern_control : register(ps_3_0, c7);\nfloat2 ref_pattern_pos : register(ps_3_0, c4);\nfloat3 ref_pattern_tweak : register(ps_3_0, c3);\nfloat3 ref_uv_scale : register(ps_3_0, c5);\nfloat ref_wear_tear_value : register(ps_3_0, c6);\nsamplerCUBE reflection_texture : register(ps_3_0, s6);\nstruct PixelMain_Input\n{\n    float2 texcoord6 : TEXCOORD6;\n    float texcoord7 : TEXCOORD7;\n    float3 texcoord5 : TEXCOORD5;\n    float4 texcoord : TEXCOORD;\n    float texcoord1 : TEXCOORD1;\n    float3 texcoord2 : TEXCOORD2;\n    float3 texcoord3 : TEXCOORD3;\n    float3 texcoord4 : TEXCOORD4;\n};\n\nstruct PixelMain_Output\n{\n    float4 color1 : COLOR1;\n    float4 color : COLOR;\n    float4 color2 : COLOR2;\n};\n\nPixelMain_Output PixelMain(PixelMain_Input i)\n{\n    PixelMain_Output o;\n    float4 temp0, temp1, temp2, temp3, temp4, temp5, temp6, temp7;\n    // def c8, 1.3333334, 0.45454547, 5, 0.145\n    // def c9, 0.001, 0, 1.5, 20\n    // def c10, -0.5, 1, 1.025, 0.75\n    // def c11, 0.15915494, 0.5, 6.2831855, -3.1415927\n    // def c12, -1, 1, -2, 3\n    // def c13, 7, 1E-05, 0, 1\n    // dcl_texcoord6 v0.xy\n    // dcl_texcoord7 v1.x\n    // dcl_texcoord5 v2.xyz\n    // dcl_texcoord v3\n    // dcl_texcoord1 v4.x\n    // dcl_texcoord2 v5.xyz\n    // dcl_texcoord3 v6.xyz\n    // dcl_texcoord4 v7.xyz\n    // dcl_2d s0\n    // dcl_2d s1\n    // dcl_2d s2\n    // dcl_2d s3\n    // dcl_2d s4\n    // dcl_2d s5\n    // dcl_cube s6\n    // mov r0.y, c3.y\n    temp0.y = ref_pattern_tweak.y;\n    // mad r0.x, r0.y, c11.x, c11.y\n    temp0.x = temp0.y * float1(0.15915494) + float1(0.5);\n    // frc r0.x, r0.x\n    temp0.x = frac(temp0.x);\n    // mad r0.x, r0.x, c11.z, c11.w\n    temp0.x = temp0.x * float1(6.2831855) + float1(-3.1415927);\n    // sincos r1.xy, r0.x\n    temp1.xy = float2(cos(temp0.x), sin(temp0.x));\n    // mul r0.xy, r1.yxzw, c12\n    temp0.xy = temp1.yx * float2(-1, 1);\n    // add r0.zw, c10.x, v3\n    temp0.zw = float2(-0.5, -0.5) + i.texcoord.zw;\n    // dp2add r0.y, r0.zwzw, r0, c9.y\n    temp0.y = dot(temp0.zw, temp0.xy) + float1(0);\n    // dp2add r0.x, r0.zwzw, r1, c9.y\n    temp0.x = dot(temp0.zw, temp1.xy) + float1(0);\n    // add r0.xy, r0, c4\n    temp0.xy = temp0.xy + ref_pattern_pos.xy;\n    // add r0.xy, r0, -c10.x\n    temp0.xy = temp0.xy + float2(0.5, 0.5);\n    // mul r0.xy, r0, c3.x\n    temp0.xy = temp0.xy * ref_pattern_tweak.xx;\n    // texld r0, r0, s3\n    temp0 = tex2D(diffuse_layer0_texture, temp0.xy);\n    // texld_pp r1, v3, s5\n    temp1 = /* not implemented _pp modifier */ tex2D(bump_normal_texture, i.texcoord.xy);\n    // add_pp r1.xy, r1.wyzw, c10.x\n    temp1.xy = /* not implemented _pp modifier */ temp1.wy + float2(-0.5, -0.5);\n    // add_pp r1.xy, r1, r1\n    temp1.xy = /* not implemented _pp modifier */ temp1.xy + temp1.xy;\n    // mul_pp r1.w, r1.x, r1.x\n    temp1.w = /* not implemented _pp modifier */ temp1.x * temp1.x;\n    // mad_pp r1.w, r1.y, r1.y, -r1.w\n    temp1.w = /* not implemented _pp modifier */ temp1.y * temp1.y + -temp1.w;\n    // add_pp r1.w, -r1.w, c10.y\n    temp1.w = /* not implemented _pp modifier */ -temp1.w + float1(1);\n    // rsq_pp r1.w, r1.w\n    temp1.w = /* not implemented _pp modifier */ 1 / sqrt(temp1.w);\n    // rcp_pp r1.z, r1.w\n    temp1.z = /* not implemented _pp modifier */ 1.0f / temp1.w;\n    // dp3 r2.x, r1, v5\n    temp2.x = dot(temp1.xyz, i.texcoord2.xyz);\n    // dp3 r2.y, r1, v6\n    temp2.y = dot(temp1.xyz, i.texcoord3.xyz);\n    // dp3 r2.z, r1, v7\n    temp2.z = dot(temp1.xyz, i.texcoord4.xyz);\n    // nrm r1.xyz, r2\n    temp1.xyz = normalize(temp2.xyz).xyz;\n    // add r2.x, c0.w, -v2.x\n    temp2.x = (camera_world_matrix._m00_m10_m20_m30).w + -i.texcoord5.x;\n    // add r2.y, c1.w, -v2.y\n    temp2.y = (camera_world_matrix._m01_m11_m21_m31).w + -i.texcoord5.y;\n    // add r2.z, c2.w, -v2.z\n    temp2.z = (camera_world_matrix._m02_m12_m22_m32).w + -i.texcoord5.z;\n    // nrm r3.xyz, r2\n    temp3.xyz = normalize(temp2.xyz).xyz;\n    // dp3 r1.w, r1, r3\n    temp1.w = dot(temp1.xyz, temp3.xyz);\n    // mov_sat r2.x, r1.w\n    temp2.x = saturate(temp1.w);\n    // add r1.w, r1.w, r1.w\n    temp1.w = temp1.w + temp1.w;\n    // mad r3.xyz, r1.w, -r1, r3\n    temp3.xyz = temp1.www * -temp1.xyz + temp3.xyz;\n    // mad_pp oC1.xyz, r1, -c10.x, -c10.x\n    o.color1.xyz = /* not implemented _pp modifier */ temp1.xyz * float3(0.5, 0.5, 0.5) + float3(0.5, 0.5, 0.5);\n    // add r1.xy, -r2.x, c10.yzzw\n    temp1.xy = -temp2.xx + float2(1, 1.025);\n    // mov_sat r2.y, r1.y\n    temp2.y = saturate(temp1.y);\n    // texld_pp r4, v3, s4\n    temp4 = /* not implemented _pp modifier */ tex2D(diffuse_texture, i.texcoord.xy);\n    // pow r1.y, r4.x, c8.y\n    temp1.y = pow(temp4.x, float1(0.45454547));\n    // add r1.w, r4.z, -c6.x\n    temp1.w = temp4.z + -ref_wear_tear_value.x;\n    // mul_sat r1.w, r1.w, c8.x\n    temp1.w = saturate(temp1.w * float1(1.3333334));\n    // mad r2.x, r1.w, c8.w, r1.y\n    temp2.x = temp1.w * float1(0.145) + temp1.y;\n    // texld r5, r2, s1\n    temp5 = tex2D(diffuse_layer1_texture, temp2.xy);\n    // mov r2.z, c9.x\n    temp2.z = float1(0.001);\n    // texld r2, r2.xzzw, s1\n    temp2 = tex2D(diffuse_layer1_texture, temp2.xz);\n    // lrp r6.xy, r2.z, -c10.x, r4.wyzw\n    temp6.xy = lerp(temp4.wy, float2(0.5, 0.5), temp2.zz);\n    // mul r5.xyz, r5, r6.y\n    temp5.xyz = temp5.xyz * temp6.yyy;\n    // add r7.xyz, r5, r5\n    temp7.xyz = temp5.xyz + temp5.xyz;\n    // dp2add r7.w, r6.x, r2.w, c9.y\n    temp7.w = dot(temp6.xx, temp2.ww) + float1(0);\n    // mov_pp r4.w, r6.x\n    temp4.w = /* not implemented _pp modifier */ temp6.x;\n    // max r1.y, r4.y, c9.y\n    temp1.y = max(temp4.y, float1(0));\n    // lrp_pp r6, v1.x, r7, r4\n    temp6 = /* not implemented _pp modifier */ lerp(temp4, temp7, i.texcoord7.x);\n    // add r2.z, r1.y, c10.x\n    temp2.z = temp1.y + float1(-0.5);\n    // mul r1.y, r1.y, c9.z\n    temp1.y = temp1.y * float1(1.5);\n    // cmp r1.y, r2.z, c10.w, r1.y\n    temp1.y = (temp2.z >= 0) ? float1(0.75) : temp1.y;\n    // mad r0.w, r0.w, r1.y, -r6.w\n    temp0.w = temp0.w * temp1.y + -temp6.w;\n    // add r2.z, -r1.w, c10.y\n    temp2.z = -temp1.w + float1(1);\n    // mul r4.x, r1.w, c8.z\n    temp4.x = temp1.w * float1(5);\n    // mov_sat r4.x, r4.x\n    temp4.x = saturate(temp4.x);\n    // add r1.w, -r4.x, c10.y\n    temp1.w = -temp4.x + float1(1);\n    // mul r2.w, c3.z, v1.x\n    temp2.w = ref_pattern_tweak.z * i.texcoord7.x;\n    // mul r2.w, r0.x, r2.w\n    temp2.w = temp0.x * temp2.w;\n    // mul r2.z, r2.z, r2.w\n    temp2.z = temp2.z * temp2.w;\n    // mul r2.z, r5.w, r2.z\n    temp2.z = temp5.w * temp2.z;\n    // mad_pp r0.w, r2.z, r0.w, r6.w\n    temp0.w = /* not implemented _pp modifier */ temp2.z * temp0.w + temp6.w;\n    // texld r4, v0, s0\n    temp4 = tex2D(diffuse_layer3_texture, i.texcoord6.xy);\n    // add r2.z, -r0.w, r4.w\n    temp2.z = -temp0.w + temp4.w;\n    // mul_sat r2.w, r4.w, c9.w\n    temp2.w = saturate(temp4.w * float1(20));\n    // mad r4.w, r2.w, c12.z, c12.w\n    temp4.w = temp2.w * float1(-2) + float1(3);\n    // mul r2.w, r2.w, r2.w\n    temp2.w = temp2.w * temp2.w;\n    // mul r2.w, r2.w, r4.w\n    temp2.w = temp2.w * temp4.w;\n    // mul r2.w, r1.w, r2.w\n    temp2.w = temp1.w * temp2.w;\n    // mul r1.w, r0.x, r1.w\n    temp1.w = temp0.x * temp1.w;\n    // mul r4.w, r2.w, c5.z\n    temp4.w = temp2.w * ref_uv_scale.z;\n    // mad_pp oC1.w, r4.w, r2.z, r0.w\n    o.color1.w = /* not implemented _pp modifier */ temp4.w * temp2.z + temp0.w;\n    // mul r0.x, r0.x, r5.w\n    temp0.x = temp0.x * temp5.w;\n    // lrp r4.w, r0.x, r0.z, r2.y\n    temp4.w = lerp(temp2.y, temp0.z, temp0.x);\n    // mov r1.z, r0.y\n    temp1.z = temp0.y;\n    // texld r0, r1.zxzw, s2\n    temp0 = tex2D(diffuse_layer2_texture, temp1.zx);\n    // dp2add r0.w, r1.x, r1.x, c10.w\n    temp0.w = dot(temp1.xx, temp1.xx) + float1(0.75);\n    // mad r0.xyz, r0, r1.y, -r6\n    temp0.xyz = temp0.xyz * temp1.yyy + -temp6.xyz;\n    // add r1.x, -r4.w, c10.y\n    temp1.x = -temp4.w + float1(1);\n    // mov oC0.w, r4.w\n    o.color.w = temp4.w;\n    // mul r1.x, r1.x, c13.x\n    temp1.x = temp1.x * float1(7);\n    // frc r1.y, r1.x\n    temp1.y = frac(temp1.x);\n    // add r3.w, -r1.y, r1.x\n    temp3.w = -temp1.y + temp1.x;\n    // texldl r3, r3, s6\n    temp3 = texCUBElod(reflection_texture, temp3);\n    // mul r1.x, r1.w, c7.y\n    temp1.x = temp1.w * ref_cubemap_pattern_control.y;\n    // mul r1.xy, r5.w, r1.xwzw\n    temp1.xy = temp5.ww * temp1.xw;\n    // lrp r3.w, r1.x, c7.x, r2.x\n    temp3.w = lerp(temp2.x, ref_cubemap_pattern_control.x, temp1.x);\n    // mul r1.xzw, r3.w, r3.xyyz\n    temp1.xzw = temp3.www * temp3.xyz;\n    // mul r1.xzw, r0.w, r1\n    temp1.xzw = temp0.www * temp1.xzw;\n    // mad_pp r0.xyz, r1.y, r0, r6\n    temp0.xyz = /* not implemented _pp modifier */ temp1.yyy * temp0.xyz + temp6.xyz;\n    // lrp_pp r3.xyz, r2.w, r4, r0\n    temp3.xyz = /* not implemented _pp modifier */ lerp(temp0.xyz, temp4.xyz, temp2.www);\n    // add r0.x, c13.y, -v3.y\n    temp0.x = float1(1E-05) + -i.texcoord.y;\n    // cmp r0.y, -r0.x, c13.z, c13.w\n    temp0.y = (-temp0.x >= 0) ? float1(0) : float1(1);\n    // cmp r0.x, r0.x, -c13.z, -c13.w\n    temp0.x = (temp0.x >= 0) ? float1(-0) : float1(-1);\n    // add r0.x, r0.x, r0.y\n    temp0.x = temp0.x + temp0.y;\n    // max r1.y, r0.x, c9.y\n    temp1.y = max(temp0.x, float1(0));\n    // mad_sat_pp oC0.xyz, r1_abs.xzww, r1.y, r3\n    ;// error\n    // mov oC2, v4.x\n    o.color2 = i.texcoord1.x;\n    // \n\n    return o;\n}\n")),(0,m.kt)("p",null,"Decompiled by DXDecompiler."))}y.isMDXComponent=!0}}]);