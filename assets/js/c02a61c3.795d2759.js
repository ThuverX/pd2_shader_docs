"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[48158],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>s});var n=r(67294);function m(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){m(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,m=function(e,t){if(null==e)return{};var r,n,m={},p=Object.keys(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||(m[r]=e[r]);return m}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(m[r]=e[r])}return m}var _=n.createContext({}),d=function(e){var t=n.useContext(_),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=d(e.components);return n.createElement(_.Provider,{value:t},e.children)},x="mdxType",i={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,m=e.mdxType,p=e.originalType,_=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),x=d(r),c=m,s=x["".concat(_,".").concat(c)]||x[c]||i[c]||p;return r?n.createElement(s,o(o({ref:t},l),{},{components:r})):n.createElement(s,o({ref:t},l))}));function s(e,t){var r=arguments,m=t&&t.mdxType;if("string"==typeof e||m){var p=r.length,o=new Array(p);o[0]=c;var a={};for(var _ in t)hasOwnProperty.call(t,_)&&(a[_]=t[_]);a.originalType=e,a[x]="string"==typeof e?e:m,o[1]=a;for(var d=2;d<p;d++)o[d]=r[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},34570:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>_,contentTitle:()=>o,default:()=>i,frontMatter:()=>p,metadata:()=>a,toc:()=>d});var n=r(87462),m=(r(67294),r(3905));const p={id:0x59c3335e3d340000,title:"Opacity Default Ati Cube Environment Mapping Cube Fresnel Diffuse Texture Double Sided Normalmap Opacity Fade Take Global Light"},o="Opacity Default Ati Cube Environment Mapping Cube Fresnel Diffuse Texture Double Sided Normalmap Opacity Fade Take Global Light",a={unversionedId:"Generated/Shaders/Base/[1600-1700]/6468069969680925000",id:"Generated/Shaders/Base/[1600-1700]/6468069969680925000",title:"Opacity Default Ati Cube Environment Mapping Cube Fresnel Diffuse Texture Double Sided Normalmap Opacity Fade Take Global Light",description:"(opacityATICUBEFRESNELDOUBLESIDEDOPACITYFADE:TAKEGLOBALLIGHT, 0x59c3335e3d34008e)",source:"@site/docs/Generated/Shaders/Base/[1600-1700]/0x59c3335e3d34008e.mdx",sourceDirName:"Generated/Shaders/Base/[1600-1700]",slug:"/Generated/Shaders/Base/[1600-1700]/6468069969680925000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[1600-1700]/6468069969680925000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/docs/Generated/Shaders/Base/[1600-1700]/0x59c3335e3d34008e.mdx",tags:[],version:"current",frontMatter:{id:"6468069969680925000",title:"Opacity Default Ati Cube Environment Mapping Cube Fresnel Diffuse Texture Double Sided Normalmap Opacity Fade Take Global Light"},sidebar:"docsSidebar",previous:{title:"Generic Default Blend Diffuse Blend Mask Seperate Blend Normal Blend Smooth Cube Environment Mapping Diffuse Texture Normalmap Rl Core Environment Vertex Color",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[1600-1700]/6457663767838507000"},next:{title:"Generic Shadow Caster Alpha Masked Contour Diffuse Texture Double Sided External Alpha Ref Normalmap Opacity Texture Rl Civilians Simple Tint Skinned 3weights",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[1600-1700]/6469085681157366000"}},_={},d=[{value:"Technique <code>transparent</code>",id:"technique-transparent",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Sampler 1",id:"sampler-1",level:4},{value:"Sampler 2",id:"sampler-2",level:4},{value:"Sampler 3",id:"sampler-3",level:4},{value:"Sampler 4",id:"sampler-4",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],l={toc:d},x="wrapper";function i(e){let{components:t,...r}=e;return(0,m.kt)(x,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("h1",{id:"opacity-default-ati-cube-environment-mapping-cube-fresnel-diffuse-texture-double-sided-normalmap-opacity-fade-take-global-light"},"Opacity Default Ati Cube Environment Mapping Cube Fresnel Diffuse Texture Double Sided Normalmap Opacity Fade Take Global Light"),(0,m.kt)("p",null,"(",(0,m.kt)("inlineCode",{parentName:"p"},"opacity:default:ATI:CUBE_ENVIRONMENT_MAPPING:CUBE_FRESNEL:DIFFUSE_TEXTURE:DOUBLE_SIDED:NORMALMAP:OPACITY_FADE:TAKE_GLOBAL_LIGHT"),", ",(0,m.kt)("inlineCode",{parentName:"p"},"0x59c3335e3d34008e"),")"),(0,m.kt)("h3",{id:"technique-transparent"},"Technique ",(0,m.kt)("inlineCode",{parentName:"h3"},"transparent")),(0,m.kt)("h3",{id:"render-states"},"Render States"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 0,\n    D3DRS_ALPHABLENDENABLE = 1,\n    D3DRS_CULLMODE = 1,\n    D3DRS_COLORWRITEENABLE = 7,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 1,\n    D3DRS_STENCILFUNC = 6,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 5,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 4,\n    D3DRS_STENCILWRITEMASK = 5,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n    D3DRS_BLENDOP = 1,\n    D3DRS_DESTBLEND = 6,\n    D3DRS_SRCBLEND = 5,\n};\n")),(0,m.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,m.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,m.kt)("h4",{id:"sampler-1"},"Sampler 1"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,m.kt)("h4",{id:"sampler-2"},"Sampler 2"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 2,\n    D3DSAMP_MINFILTER = 2,\n    D3DSAMP_MIPFILTER = 2,\n};\n")),(0,m.kt)("h4",{id:"sampler-3"},"Sampler 3"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,m.kt)("h4",{id:"sampler-4"},"Sampler 4"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,m.kt)("h3",{id:"shaders"},"Shaders"),(0,m.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-hlsl"},"float camera_near_range : register(vs_3_0, c12);\ncolumn_major float4x4 proj_matrix : register(vs_3_0, c8);\nfloat3 ref_opacity_fade : register(vs_3_0, c13);\ncolumn_major float4x4 view_matrix : register(vs_3_0, c4);\ncolumn_major float4x4 world_matrix : register(vs_3_0, c0);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 normal : NORMAL;\n    float4 texcoord1 : TEXCOORD1;\n    float4 texcoord4 : TEXCOORD4;\n    float4 texcoord : TEXCOORD;\n    float4 tangent : TANGENT;\n    float4 binormal : BINORMAL;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float4 texcoord5 : TEXCOORD5;\n    float texcoord7 : TEXCOORD7;\n    float2 texcoord1 : TEXCOORD1;\n    float3 texcoord4 : TEXCOORD4;\n    float4 texcoord : TEXCOORD;\n    float3 texcoord2 : TEXCOORD2;\n    float3 texcoord3 : TEXCOORD3;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float4 temp0, temp1;\n    // def c14, 2, -1, 1, 0\n    // dcl_position v0\n    // dcl_normal v1\n    // dcl_texcoord1 v2\n    // dcl_texcoord4 v3\n    // dcl_texcoord v4\n    // dcl_tangent v5\n    // dcl_binormal v6\n    // dcl_position o0\n    // dcl_texcoord5 o1\n    // dcl_texcoord7 o2.x\n    // dcl_texcoord1 o3.xy\n    // dcl_texcoord4 o4.xyz\n    // dcl_texcoord o5\n    // dcl_texcoord2 o6.xyz\n    // dcl_texcoord3 o7.xyz\n    // dp4 r0.w, v0, c3\n    temp0.w = dot(i.position, (world_matrix._m03_m13_m23_m33));\n    // dp4 r0.x, v0, c0\n    temp0.x = dot(i.position, (world_matrix._m00_m10_m20_m30));\n    // dp4 r0.y, v0, c1\n    temp0.y = dot(i.position, (world_matrix._m01_m11_m21_m31));\n    // dp4 r0.z, v0, c2\n    temp0.z = dot(i.position, (world_matrix._m02_m12_m22_m32));\n    // dp4 r1.x, r0, c4\n    temp1.x = dot(temp0, (view_matrix._m00_m10_m20_m30));\n    // dp4 r1.y, r0, c5\n    temp1.y = dot(temp0, (view_matrix._m01_m11_m21_m31));\n    // dp4 r1.z, r0, c6\n    temp1.z = dot(temp0, (view_matrix._m02_m12_m22_m32));\n    // dp4 r1.w, r0, c7\n    temp1.w = dot(temp0, (view_matrix._m03_m13_m23_m33));\n    // mov o1.xyz, r0\n    o.texcoord5.xyz = temp0.xyz;\n    // dp4 o0.x, r1, c8\n    o.position.x = dot(temp1, (proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, r1, c9\n    o.position.y = dot(temp1, (proj_matrix._m01_m11_m21_m31));\n    // dp4 r0.w, r1, c11\n    temp0.w = dot(temp1, (proj_matrix._m03_m13_m23_m33));\n    // dp4 r0.z, r1, c10\n    temp0.z = dot(temp1, (proj_matrix._m02_m12_m22_m32));\n    // add r0.x, r0.w, -c13.x\n    temp0.x = temp0.w + -ref_opacity_fade.x;\n    // mov o0.zw, r0\n    o.position.zw = temp0.zw;\n    // add o1.w, r0.z, c12.x\n    o.texcoord5.w = temp0.z + camera_near_range.x;\n    // rcp r0.y, c13.y\n    temp0.y = 1.0f / ref_opacity_fade.y;\n    // mul_sat r0.x, r0.y, r0.x\n    temp0.x = saturate(temp0.y * temp0.x);\n    // add o2.x, -r0.x, c14.z\n    o.texcoord7 = -temp0.x + float4(1, 1, 1, 1);\n    // mad r0.xyz, v5, c14.x, c14.y\n    temp0.xyz = i.tangent.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o6.x, r0, c0\n    o.texcoord2.x = dot(temp0.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o7.x, r0, c1\n    o.texcoord3.x = dot(temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o4.x, r0, c2\n    o.texcoord4.x = dot(temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mad r0.xyz, v6, c14.x, c14.y\n    temp0.xyz = i.binormal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o6.y, -r0, c0\n    o.texcoord2.y = dot(-temp0.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o7.y, -r0, c1\n    o.texcoord3.y = dot(-temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o4.y, -r0, c2\n    o.texcoord4.y = dot(-temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mad r0.xyz, v1, c14.x, c14.y\n    temp0.xyz = i.normal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o6.z, r0, c0\n    o.texcoord2.z = dot(temp0.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o7.z, r0, c1\n    o.texcoord3.z = dot(temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o4.z, r0, c2\n    o.texcoord4.z = dot(temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mov o3.xy, v3\n    o.texcoord1 = i.texcoord4;\n    // mov o5.xy, v4\n    o.texcoord.xy = i.texcoord.xy;\n    // mov o5.zw, v2.xyxy\n    o.texcoord.zw = i.texcoord1.xy;\n    // \n\n    return o;\n}\n")),(0,m.kt)("p",null,"Decompiled by DXDecompiler."),(0,m.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-hlsl"},"float3 GLOBAL_ambient_color : register(ps_3_0, c18);\nfloat3 GLOBAL_shadow_slice_depths : register(ps_3_0, c16);\nsampler2D bump_normal_texture : register(ps_3_0, s4);\ncolumn_major float4x4 camera_world_matrix : register(ps_3_0, c12);\nsampler2D diffuse_texture : register(ps_3_0, s3);\nfloat3 global_light_col : register(ps_3_0, c19);\nfloat3 global_light_dir : register(ps_3_0, c15);\ncolumn_major float4x4 global_shadow_projection[3] : register(ps_3_0, c0);\nsampler2D opacity_texture : register(ps_3_0, s1);\nfloat3 ref_fresnel_settings : register(ps_3_0, c17);\nsamplerCUBE reflection_texture : register(ps_3_0, s0);\nsampler2D shadow_depth : register(ps_3_0, s2);\nstruct PixelMain_Input\n{\n    float4 texcoord5 : TEXCOORD5;\n    float texcoord7 : TEXCOORD7;\n    float3 texcoord4 : TEXCOORD4;\n    float4 texcoord : TEXCOORD;\n    float3 texcoord2 : TEXCOORD2;\n    float3 texcoord3 : TEXCOORD3;\n};\n\nfloat4 PixelMain(PixelMain_Input i) : COLOR\n{\n    float4 out_color;\n    float4 temp0, temp1, temp2, temp3, temp4, temp5, temp6;\n    // def c20, -0.5, 1, -1, 0.5773672\n    // def c21, 0.9, 511.5, 0.3, 0\n    // def c22, 0, 1, 2, 3\n    // dcl_texcoord5 v0\n    // dcl_texcoord7 v1.x\n    // dcl_texcoord4 v2.xyz\n    // dcl_texcoord v3\n    // dcl_texcoord2 v4.xyz\n    // dcl_texcoord3 v5.xyz\n    // dcl_cube s0\n    // dcl_2d s1\n    // dcl_2d s2\n    // dcl_2d s3\n    // dcl_2d s4\n    // mov r0.x, -v0.w\n    temp0.x = -i.texcoord5.w;\n    // add r0.yzw, c16.xxyz, -v0.w\n    temp0.yzw = GLOBAL_shadow_slice_depths.xyz + -i.texcoord5.www;\n    // cmp r0, r0, c22.x, c22.y\n    temp0 = (temp0 >= 0) ? float4(0, 0, 0, 0) : float4(1, 1, 1, 1);\n    // dp4 r0.x, r0, c20.y\n    temp0.x = dot(temp0, float4(1, 1, 1, 1));\n    // add r0.xyz, r0.x, -c22.yzww\n    temp0.xyz = temp0.xxx + float3(-1, -2, -3);\n    // mov r1.x, c22.x\n    temp1.x = float1(0);\n    // cmp r2, -r0_abs.x, c0, r1.x\n    temp2 = (-abs(temp0).x >= 0) ? (global_shadow_projection[0]._m00_m10_m20_m30) : temp1.x;\n    // cmp r2, -r0_abs.y, c4, r2\n    temp2 = (-abs(temp0).y >= 0) ? (global_shadow_projection[1]._m00_m10_m20_m30) : temp2;\n    // cmp r2, -r0_abs.z, c8, r2\n    temp2 = (-abs(temp0).z >= 0) ? (global_shadow_projection[2]._m00_m10_m20_m30) : temp2;\n    // mad r3, v0.xyzx, c22.yyyx, c22.xxxy\n    temp3 = i.texcoord5.xyzx * float4(1, 1, 1, 0) + float4(0, 0, 0, 1);\n    // dp4 r2.x, r3, r2\n    temp2.x = dot(temp3, temp2);\n    // cmp r4, -r0_abs.x, c1, r1.x\n    temp4 = (-abs(temp0).x >= 0) ? (global_shadow_projection[0]._m01_m11_m21_m31) : temp1.x;\n    // cmp r4, -r0_abs.y, c5, r4\n    temp4 = (-abs(temp0).y >= 0) ? (global_shadow_projection[1]._m01_m11_m21_m31) : temp4;\n    // cmp r4, -r0_abs.z, c9, r4\n    temp4 = (-abs(temp0).z >= 0) ? (global_shadow_projection[2]._m01_m11_m21_m31) : temp4;\n    // dp4 r2.y, r3, r4\n    temp2.y = dot(temp3, temp4);\n    // cmp r4, -r0_abs.x, c2, r1.x\n    temp4 = (-abs(temp0).x >= 0) ? (global_shadow_projection[0]._m02_m12_m22_m32) : temp1.x;\n    // cmp r4, -r0_abs.y, c6, r4\n    temp4 = (-abs(temp0).y >= 0) ? (global_shadow_projection[1]._m02_m12_m22_m32) : temp4;\n    // cmp r4, -r0_abs.z, c10, r4\n    temp4 = (-abs(temp0).z >= 0) ? (global_shadow_projection[2]._m02_m12_m22_m32) : temp4;\n    // dp4 r2.z, r3, r4\n    temp2.z = dot(temp3, temp4);\n    // cmp r1, -r0_abs.x, c3, r1.x\n    temp1 = (-abs(temp0).x >= 0) ? (global_shadow_projection[0]._m03_m13_m23_m33) : temp1.x;\n    // cmp r1, -r0_abs.y, c7, r1\n    temp1 = (-abs(temp0).y >= 0) ? (global_shadow_projection[1]._m03_m13_m23_m33) : temp1;\n    // cmp r0, -r0_abs.z, c11, r1\n    temp0 = (-abs(temp0).z >= 0) ? (global_shadow_projection[2]._m03_m13_m23_m33) : temp1;\n    // dp4 r2.w, r3, r0\n    temp2.w = dot(temp3, temp0);\n    // texld r0, r2, s2\n    temp0 = tex2D(shadow_depth, temp2.xy);\n    // mul r0.yzw, r0.x, c19.xxyz\n    temp0.yzw = temp0.xxx * global_light_col.xyz;\n    // mul r0.yzw, r0, c21.x\n    temp0.yzw = temp0.yzw * float3(0.9, 0.9, 0.9);\n    // texld_pp r1, v3.zwzw, s4\n    temp1 = /* not implemented _pp modifier */ tex2D(bump_normal_texture, i.texcoord.zw);\n    // add_pp r1.xy, r1.wyzw, c20.x\n    temp1.xy = /* not implemented _pp modifier */ temp1.wy + float2(-0.5, -0.5);\n    // add_pp r1.xy, r1, r1\n    temp1.xy = /* not implemented _pp modifier */ temp1.xy + temp1.xy;\n    // mul_pp r1.w, r1.x, r1.x\n    temp1.w = /* not implemented _pp modifier */ temp1.x * temp1.x;\n    // mad_pp r1.w, r1.y, r1.y, -r1.w\n    temp1.w = /* not implemented _pp modifier */ temp1.y * temp1.y + -temp1.w;\n    // add_pp r1.w, -r1.w, c20.y\n    temp1.w = /* not implemented _pp modifier */ -temp1.w + float1(1);\n    // rsq_pp r1.w, r1.w\n    temp1.w = /* not implemented _pp modifier */ 1 / sqrt(temp1.w);\n    // rcp_pp r1.z, r1.w\n    temp1.z = /* not implemented _pp modifier */ 1.0f / temp1.w;\n    // dp3 r2.x, r1, v4\n    temp2.x = dot(temp1.xyz, i.texcoord2.xyz);\n    // dp3 r2.y, r1, v5\n    temp2.y = dot(temp1.xyz, i.texcoord3.xyz);\n    // dp3 r2.z, r1, v2\n    temp2.z = dot(temp1.xyz, i.texcoord4.xyz);\n    // nrm_pp r1.xyz, r2\n    temp1.xyz = /* not implemented _pp modifier */ normalize(temp2.xyz).xyz;\n    // mov r2.x, -c12.w\n    temp2.x = -(camera_world_matrix._m00_m10_m20_m30).w;\n    // mov r2.y, -c13.w\n    temp2.y = -(camera_world_matrix._m01_m11_m21_m31).w;\n    // mov r2.z, -c14.w\n    temp2.z = -(camera_world_matrix._m02_m12_m22_m32).w;\n    // add r2.xyz, r2, v0\n    temp2.xyz = temp2.xyz + i.texcoord5.xyz;\n    // dp3 r1.w, r2, r2\n    temp1.w = dot(temp2.xyz, temp2.xyz);\n    // rsq r1.w, r1.w\n    temp1.w = 1 / sqrt(temp1.w);\n    // mad r3.xyz, r2, -r1.w, -c15\n    temp3.xyz = temp2.xyz * -temp1.www + -global_light_dir.xyz;\n    // mul r2.xyz, r1.w, r2\n    temp2.xyz = temp1.www * temp2.xyz;\n    // nrm r4.xyz, r3\n    temp4.xyz = normalize(temp3.xyz).xyz;\n    // dp3_sat r1.w, r4, r1\n    temp1.w = saturate(dot(temp4.xyz, temp1.xyz));\n    // pow r2.w, r1.w, c21.y\n    temp2.w = pow(temp1.w, float1(511.5));\n    // mul r3.xyz, r0.yzww, r2.w\n    temp3.xyz = temp0.yzw * temp2.www;\n    // mul r3.xyz, r0.x, r3\n    temp3.xyz = temp0.xxx * temp3.xyz;\n    // dp3_sat r1.w, -c15, r1\n    temp1.w = saturate(dot(-global_light_dir.xyz, temp1.xyz));\n    // cmp r3.xyz, -r1.w, c22.x, r3\n    temp3.xyz = (-temp1.www >= 0) ? float3(0, 0, 0) : temp3.xyz;\n    // dp3 r3.w, r2, c15\n    temp3.w = dot(temp2.xyz, global_light_dir.xyz);\n    // mad_sat r3.w, r3.w, -c20.x, -c20.x\n    temp3.w = saturate(temp3.w * float1(0.5) + float1(0.5));\n    // mul r3.w, r1.w, r3.w\n    temp3.w = temp1.w * temp3.w;\n    // mul r4.xyz, r3.w, c19\n    temp4.xyz = temp3.www * global_light_col.xyz;\n    // mad r4.xyz, c19, r1.w, r4\n    temp4.xyz = global_light_col.xyz * temp1.www + temp4.xyz;\n    // mad r4.xyz, r0.x, r4, c18\n    temp4.xyz = temp0.xxx * temp4.xyz + GLOBAL_ambient_color.xyz;\n    // add_sat r4.xyz, r4, c21.z\n    temp4.xyz = saturate(temp4.xyz + float3(0.3, 0.3, 0.3));\n    // dp3 r0.x, r1, -r2\n    temp0.x = dot(temp1.xyz, -temp2.xyz);\n    // add r1.w, r0.x, r0.x\n    temp1.w = temp0.x + temp0.x;\n    // mov_sat r0.x, r0.x\n    temp0.x = saturate(temp0.x);\n    // add r0.x, -r0.x, c20.y\n    temp0.x = -temp0.x + float1(1);\n    // mad_pp r1.xyz, r1.w, -r1, -r2\n    temp1.xyz = /* not implemented _pp modifier */ temp1.www * -temp1.xyz + -temp2.xyz;\n    // texld_pp r1, r1, s0\n    temp1 = /* not implemented _pp modifier */ texCUBE(reflection_texture, temp1.xyz);\n    // texld_pp r5, v3, s3\n    temp5 = /* not implemented _pp modifier */ tex2D(diffuse_texture, i.texcoord.xy);\n    // texld_pp r6, v3, s1\n    temp6 = /* not implemented _pp modifier */ tex2D(opacity_texture, i.texcoord.xy);\n    // mad_pp r2.xyz, r1, r6.z, r5\n    temp2.xyz = /* not implemented _pp modifier */ temp1.xyz * temp6.zzz + temp5.xyz;\n    // dp3 r1.x, r1, r1\n    temp1.x = dot(temp1.xyz, temp1.xyz);\n    // rsq r1.x, r1.x\n    temp1.x = 1 / sqrt(temp1.x);\n    // rcp r1.x, r1.x\n    temp1.x = 1.0f / temp1.x;\n    // mul_sat_pp r1.x, r1.x, c20.w\n    ;// error\n    // mad r1.yzw, r4.xxyz, r2.xxyz, r3.xxyz\n    temp1.yzw = temp4.xyz * temp2.xyz + temp3.xyz;\n    // mad_pp oC0.xyz, r0.yzww, r2.w, r1.yzww\n    out_color.xyz = /* not implemented _pp modifier */ temp0.yzw * temp2.www + temp1.yzw;\n    // add r0.y, -r1.x, c20.y\n    temp0.y = -temp1.x + float1(1);\n    // mad_pp r0.y, c17.z, r0.y, r1.x\n    temp0.y = /* not implemented _pp modifier */ ref_fresnel_settings.z * temp0.y + temp1.x;\n    // mul_pp r0.y, r0.y, r6.x\n    temp0.y = /* not implemented _pp modifier */ temp0.y * temp6.x;\n    // mov r1.y, c20.y\n    temp1.y = float1(1);\n    // add r0.z, r1.y, c17.x\n    temp0.z = temp1.y + ref_fresnel_settings.x;\n    // pow r1.x, r0.x, r0.z\n    temp1.x = pow(temp0.x, temp0.z);\n    // add r0.x, r1.x, c20.z\n    temp0.x = temp1.x + float1(-1);\n    // mad r0.x, c17.y, r0.x, r1.y\n    temp0.x = ref_fresnel_settings.y * temp0.x + temp1.y;\n    // mad_pp r0.x, r0.y, r0.x, r6.y\n    temp0.x = /* not implemented _pp modifier */ temp0.y * temp0.x + temp6.y;\n    // mul_pp oC0.w, r0.x, v1.x\n    out_color.w = /* not implemented _pp modifier */ temp0.x * i.texcoord7.x;\n    // \n\n    return out_color;\n}\n")),(0,m.kt)("p",null,"Decompiled by DXDecompiler."))}i.isMDXComponent=!0}}]);