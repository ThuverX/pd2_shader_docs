"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[74035],{603905:(e,t,n)=>{n.d(t,{Zo:()=>i,kt:()=>s});var r=n(667294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var m=r.createContext({}),p=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):d(d({},t),e)),n},i=function(e){var t=p(e.components);return r.createElement(m.Provider,{value:t},e.children)},_="mdxType",x={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,m=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),_=p(n),c=a,s=_["".concat(m,".").concat(c)]||_[c]||x[c]||o;return n?r.createElement(s,d(d({ref:t},i),{},{components:n})):r.createElement(s,d({ref:t},i))}));function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,d=new Array(o);d[0]=c;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l[_]="string"==typeof e?e:a,d[1]=l;for(var p=2;p<o;p++)d[p]=n[p];return r.createElement.apply(null,d)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},539965:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>d,default:()=>x,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(487462),a=(n(667294),n(603905));const o={id:0xb2b99af5616bd800,title:"Generic Default Blend Diffuse Blend Fade Blend Fade Time Blend Mask Seperate Blend Normal Diffuse Texture Normalmap"},d="Generic Default Blend Diffuse Blend Fade Blend Fade Time Blend Mask Seperate Blend Normal Diffuse Texture Normalmap",l={unversionedId:"Generated/Shaders/Base/[3300-3400]/12878494988134767000",id:"Generated/Shaders/Base/[3300-3400]/12878494988134767000",title:"Generic Default Blend Diffuse Blend Fade Blend Fade Time Blend Mask Seperate Blend Normal Diffuse Texture Normalmap",description:"(genericBLENDDIFFUSEBLENDFADETIMEBLENDNORMALNORMALMAP, 0xb2b99af5616bd9a8)",source:"@site/docs/Generated/Shaders/Base/[3300-3400]/0xb2b99af5616bd9a8.mdx",sourceDirName:"Generated/Shaders/Base/[3300-3400]",slug:"/Generated/Shaders/Base/[3300-3400]/12878494988134767000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[3300-3400]/12878494988134767000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/Generated/Shaders/Base/[3300-3400]/0xb2b99af5616bd9a8.mdx",tags:[],version:"current",frontMatter:{id:"12878494988134767000",title:"Generic Default Blend Diffuse Blend Fade Blend Fade Time Blend Mask Seperate Blend Normal Diffuse Texture Normalmap"},sidebar:"docsSidebar",previous:{title:"Generic Shadow Caster Ati Diffuse Texture Double Sided Normalmap",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[3300-3400]/12867725698391300000"},next:{title:"Generic Default Alpha Masked Diffuse Texture External Alpha Ref Gsma Texture Normalmap Vertex Color",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[3300-3400]/12878855461290928000"}},m={},p=[{value:"Technique <code>deferred_ambient</code>",id:"technique-deferred_ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Sampler 1",id:"sampler-1",level:4},{value:"Sampler 2",id:"sampler-2",level:4},{value:"Sampler 3",id:"sampler-3",level:4},{value:"Sampler 4",id:"sampler-4",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],i={toc:p},_="wrapper";function x(e){let{components:t,...n}=e;return(0,a.kt)(_,(0,r.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"generic-default-blend-diffuse-blend-fade-blend-fade-time-blend-mask-seperate-blend-normal-diffuse-texture-normalmap"},"Generic Default Blend Diffuse Blend Fade Blend Fade Time Blend Mask Seperate Blend Normal Diffuse Texture Normalmap"),(0,a.kt)("p",null,"(",(0,a.kt)("inlineCode",{parentName:"p"},"generic:default:BLEND_DIFFUSE:BLEND_FADE:BLEND_FADE_TIME:BLEND_MASK_SEPERATE:BLEND_NORMAL:DIFFUSE_TEXTURE:NORMALMAP"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"0xb2b99af5616bd9a8"),")"),(0,a.kt)("p",null,"This template is referenced 1 time by ",(0,a.kt)("a",{parentName:"p",href:"/docs/Generated/Render%20Templates/base.render_template_database#generic-blend-diffuse-blend-fade-blend-fade-time-blend-mask-seperate-blend-normal-diffuse-texture-normalmap"},"generic:BLEND_DIFFUSE:BLEND_FADE:BLEND_FADE_TIME:BLEND_MASK_SEPERATE:BLEND_NORMAL:DIFFUSE_TEXTURE:NORMALMAP"),".\nThis template uses the following inputs:\n|Name|UI Name|Type|\n|---|---|---|\n|diffuse_texture|Diffuse Texture (UV1)|texture|\n|diffuse_layer0_texture|Second diffuse (Shifted UV1)|texture|\n|diffuse_layer1_texture|Seperate blend mask (UV1)|texture|\n|bump_normal_texture|Normal map (UV2 else UV1)|texture|\n|normal_layer0_texture|Second normal map (UV1)|texture|\n|blend_fade_start|Blend fade start|scalar|\n|blend_fade_end|Blend fade end|scalar|\n|blend_fade_mask_fuzziness|Blend fade mask fuzziness|scalar|."),(0,a.kt)("h3",{id:"technique-deferred_ambient"},"Technique ",(0,a.kt)("inlineCode",{parentName:"h3"},"deferred_ambient")),(0,a.kt)("h3",{id:"render-states"},"Render States"),(0,a.kt)("p",null,"More info can be found on the ",(0,a.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 1,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 2,\n    D3DRS_COLORWRITEENABLE = 15,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,a.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,a.kt)("p",null,"More info can be found on the ",(0,a.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,a.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,a.kt)("h4",{id:"sampler-1"},"Sampler 1"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,a.kt)("h4",{id:"sampler-2"},"Sampler 2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,a.kt)("h4",{id:"sampler-3"},"Sampler 3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,a.kt)("h4",{id:"sampler-4"},"Sampler 4"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,a.kt)("h3",{id:"shaders"},"Shaders"),(0,a.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-hlsl"},"float camera_near_range : register(vs_3_0, c7);\ncolumn_major float4x4 view_proj_matrix : register(vs_3_0, c0);\ncolumn_major float4x4 world_matrix : register(vs_3_0, c4);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 normal : NORMAL;\n    float4 texcoord1 : TEXCOORD1;\n    float4 texcoord : TEXCOORD;\n    float4 tangent : TANGENT;\n    float4 binormal : BINORMAL;\n    float4 color : COLOR;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float texcoord1 : TEXCOORD1;\n    float4 texcoord : TEXCOORD;\n    float3 texcoord2 : TEXCOORD2;\n    float3 texcoord3 : TEXCOORD3;\n    float3 texcoord4 : TEXCOORD4;\n    float4 color : COLOR;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float3 temp0;\n    // def c8, 2, -1, 1, 0\n    // dcl_position v0\n    // dcl_normal v1\n    // dcl_texcoord1 v2\n    // dcl_texcoord v3\n    // dcl_tangent v4\n    // dcl_binormal v5\n    // dcl_color v6\n    // dcl_position o0\n    // dcl_texcoord1 o1.x\n    // dcl_texcoord o2\n    // dcl_texcoord2 o3.xyz\n    // dcl_texcoord3 o4.xyz\n    // dcl_texcoord4 o5.xyz\n    // dcl_color o6\n    // dp4 o0.x, v0, c0\n    o.position.x = dot(i.position, (view_proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, v0, c1\n    o.position.y = dot(i.position, (view_proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.w, v0, c3\n    o.position.w = dot(i.position, (view_proj_matrix._m03_m13_m23_m33));\n    // dp4 r0.x, v0, c2\n    temp0.x = dot(i.position, (view_proj_matrix._m02_m12_m22_m32));\n    // add o1.x, r0.x, c7.x\n    o.texcoord1 = temp0.x + camera_near_range.x;\n    // mov o0.z, r0.x\n    o.position.z = temp0.x;\n    // mad r0.xyz, v4, c8.x, c8.y\n    temp0.xyz = i.tangent.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o3.x, r0, c4\n    o.texcoord2.x = dot(temp0.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o4.x, r0, c5\n    o.texcoord3.x = dot(temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o5.x, r0, c6\n    o.texcoord4.x = dot(temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mad r0.xyz, v5, c8.x, c8.y\n    temp0.xyz = i.binormal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o3.y, -r0, c4\n    o.texcoord2.y = dot(-temp0.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o4.y, -r0, c5\n    o.texcoord3.y = dot(-temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o5.y, -r0, c6\n    o.texcoord4.y = dot(-temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mad r0.xyz, v1, c8.x, c8.y\n    temp0.xyz = i.normal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o3.z, r0, c4\n    o.texcoord2.z = dot(temp0.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o4.z, r0, c5\n    o.texcoord3.z = dot(temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o5.z, r0, c6\n    o.texcoord4.z = dot(temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mov o2.xy, v3\n    o.texcoord.xy = i.texcoord.xy;\n    // mov o2.zw, v2.xyxy\n    o.texcoord.zw = i.texcoord1.xy;\n    // mul o6, c8.xxxz, v6\n    o.color = float4(2, 2, 2, 1) * i.color;\n    // \n\n    return o;\n}\n")),(0,a.kt)("p",null,"Decompiled by DXDecompiler."),(0,a.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-hlsl"},"sampler2D bump_normal_texture : register(ps_3_0, s3);\nsampler2D diffuse_layer0_texture : register(ps_3_0, s1);\nsampler2D diffuse_layer1_texture : register(ps_3_0, s2);\nsampler2D diffuse_texture : register(ps_3_0, s0);\nsampler2D normal_layer0_texture : register(ps_3_0, s4);\nfloat ref_blend_fade_end : register(ps_3_0, c2);\nfloat ref_blend_fade_mask_fuzziness : register(ps_3_0, c3);\nfloat ref_blend_fade_start : register(ps_3_0, c1);\nfloat ref_time : register(ps_3_0, c0);\nstruct PixelMain_Input\n{\n    float texcoord1 : TEXCOORD1;\n    float2 texcoord : TEXCOORD;\n    float3 texcoord2 : TEXCOORD2;\n    float3 texcoord3 : TEXCOORD3;\n    float3 texcoord4 : TEXCOORD4;\n};\n\nstruct PixelMain_Output\n{\n    float4 color1 : COLOR1;\n    float4 color : COLOR;\n    float4 color2 : COLOR2;\n};\n\nPixelMain_Output PixelMain(PixelMain_Input i)\n{\n    PixelMain_Output o;\n    float3 temp0;\n    float4 temp1, temp2, temp3;\n    // def c4, 1, 2, 0.5, -0.5\n    // def c5, 0.4, 0, 0, 0\n    // dcl_texcoord1 v0.x\n    // dcl_texcoord v1.xy\n    // dcl_texcoord2 v2.xyz\n    // dcl_texcoord3 v3.xyz\n    // dcl_texcoord4 v4.xyz\n    // dcl_2d s0\n    // dcl_2d s1\n    // dcl_2d s2\n    // dcl_2d s3\n    // dcl_2d s4\n    // mov_sat r0.x, c0.x\n    temp0.x = saturate(ref_time.x);\n    // add r0.y, -r0.x, c4.x\n    temp0.y = -temp0.x + float1(1);\n    // mul r0.y, r0.y, c1.x\n    temp0.y = temp0.y * ref_blend_fade_start.x;\n    // mad r0.x, c2.x, r0.x, r0.y\n    temp0.x = ref_blend_fade_end.x * temp0.x + temp0.y;\n    // mov r1.xy, c4\n    temp1.xy = float2(1, 2);\n    // mad r0.y, c3.x, r1.y, r1.x\n    temp0.y = ref_blend_fade_mask_fuzziness.x * temp1.y + temp1.x;\n    // mad r0.x, r0.x, r0.y, -c3.x\n    temp0.x = temp0.x * temp0.y + -ref_blend_fade_mask_fuzziness.x;\n    // texld r1, v1, s2\n    temp1 = tex2D(diffuse_layer1_texture, i.texcoord.xy);\n    // add r0.x, r0.x, -r1.y\n    temp0.x = temp0.x + -temp1.y;\n    // rcp r0.y, c3.x\n    temp0.y = 1.0f / ref_blend_fade_mask_fuzziness.x;\n    // mul r0.x, r0.y, r0.x\n    temp0.x = temp0.y * temp0.x;\n    // mad_sat r0.x, r0.x, c4.z, c4.z\n    temp0.x = saturate(temp0.x * float1(0.5) + float1(0.5));\n    // add_pp r0.x, -r0.x, c4.x\n    temp0.x = /* not implemented _pp modifier */ -temp0.x + float1(1);\n    // texld r1, v1, s3\n    temp1 = tex2D(bump_normal_texture, i.texcoord.xy);\n    // mov r1.xy, r1.wyzw\n    temp1.xy = temp1.wy;\n    // texld r2, v1, s4\n    temp2 = tex2D(normal_layer0_texture, i.texcoord.xy);\n    // mov r1.zw, r2.xywy\n    temp1.zw = temp2.wy;\n    // add r1, r1, c4.w\n    temp1 = temp1 + float4(-0.5, -0.5, -0.5, -0.5);\n    // add r0.yz, r1.xzww, r1.xzww\n    temp0.yz = temp1.zw + temp1.zw;\n    // mad r1.xy, r1, c4.y, -r0.yzzw\n    temp1.xy = temp1.xy * float2(2, 2) + -temp0.yz;\n    // mad r1.xy, r0.x, r1, r0.yzzw\n    temp1.xy = temp0.xx * temp1.xy + temp0.yz;\n    // mul r0.y, r1.x, r1.x\n    temp0.y = temp1.x * temp1.x;\n    // mad r0.y, r1.y, r1.y, -r0.y\n    temp0.y = temp1.y * temp1.y + -temp0.y;\n    // add r0.y, -r0.y, c4.x\n    temp0.y = -temp0.y + float1(1);\n    // rsq r0.y, r0.y\n    temp0.y = 1 / sqrt(temp0.y);\n    // rcp r1.z, r0.y\n    temp1.z = 1.0f / temp0.y;\n    // dp3 r2.x, r1, v2\n    temp2.x = dot(temp1.xyz, i.texcoord2.xyz);\n    // dp3 r2.y, r1, v3\n    temp2.y = dot(temp1.xyz, i.texcoord3.xyz);\n    // dp3 r2.z, r1, v4\n    temp2.z = dot(temp1.xyz, i.texcoord4.xyz);\n    // nrm_pp r1.xyz, r2\n    temp1.xyz = /* not implemented _pp modifier */ normalize(temp2.xyz).xyz;\n    // mad_pp oC1.xyz, r1, c4.z, c4.z\n    o.color1.xyz = /* not implemented _pp modifier */ temp1.xyz * float3(0.5, 0.5, 0.5) + float3(0.5, 0.5, 0.5);\n    // texld_pp r1, v1, s0\n    temp1 = /* not implemented _pp modifier */ tex2D(diffuse_texture, i.texcoord.xy);\n    // texld_pp r2, v1, s1\n    temp2 = /* not implemented _pp modifier */ tex2D(diffuse_layer0_texture, i.texcoord.xy);\n    // lrp_pp r3, r0.x, r1, r2\n    temp3 = /* not implemented _pp modifier */ lerp(temp2, temp1, temp0.x);\n    // mov_pp oC0.xyz, r3\n    o.color.xyz = /* not implemented _pp modifier */ temp3.xyz;\n    // mov_pp oC1.w, r3.w\n    o.color1.w = /* not implemented _pp modifier */ temp3.w;\n    // mov oC0.w, c5.x\n    o.color.w = float1(0.4);\n    // mov oC2, v0.x\n    o.color2 = i.texcoord1.x;\n    // \n\n    return o;\n}\n")),(0,a.kt)("p",null,"Decompiled by DXDecompiler."))}x.isMDXComponent=!0}}]);