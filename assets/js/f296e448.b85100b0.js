"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[799],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>w});var p=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function m(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);t&&(p=p.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,p)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?m(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):m(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function x(e,t){if(null==e)return{};var r,p,n=function(e,t){if(null==e)return{};var r,p,n={},m=Object.keys(e);for(p=0;p<m.length;p++)r=m[p],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(e);for(p=0;p<m.length;p++)r=m[p],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=p.createContext({}),o=function(e){var t=p.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},d=function(e){var t=o(e.components);return p.createElement(l.Provider,{value:t},e.children)},c="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return p.createElement(p.Fragment,{},t)}},z=p.forwardRef((function(e,t){var r=e.components,n=e.mdxType,m=e.originalType,l=e.parentName,d=x(e,["components","mdxType","originalType","parentName"]),c=o(r),z=n,w=c["".concat(l,".").concat(z)]||c[z]||s[z]||m;return r?p.createElement(w,a(a({ref:t},d),{},{components:r})):p.createElement(w,a({ref:t},d))}));function w(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var m=r.length,a=new Array(m);a[0]=z;var x={};for(var l in t)hasOwnProperty.call(t,l)&&(x[l]=t[l]);x.originalType=e,x[c]="string"==typeof e?e:n,a[1]=x;for(var o=2;o<m;o++)a[o]=r[o];return p.createElement.apply(null,a)}return p.createElement.apply(null,r)}z.displayName="MDXCreateElement"},4171:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>s,frontMatter:()=>m,metadata:()=>x,toc:()=>o});var p=r(7462),n=(r(7294),r(3905));const m={id:0x49f9a14c88817400,title:"Gaussian Blur Alpha Not 0 Default"},a="Gaussian Blur Alpha Not 0 Default",x={unversionedId:"Generated/Shaders/Filters/5330468984049464000",id:"Generated/Shaders/Filters/5330468984049464000",title:"Gaussian Blur Alpha Not 0 Default",description:"(gaussianbluralphanot0:default, 0x49f9a14c88817369)",source:"@site/docs/Generated/Shaders/Filters/0x49f9a14c88817369.mdx",sourceDirName:"Generated/Shaders/Filters",slug:"/Generated/Shaders/Filters/5330468984049464000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Filters/5330468984049464000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/Generated/Shaders/Filters/0x49f9a14c88817369.mdx",tags:[],version:"current",frontMatter:{id:"5330468984049464000",title:"Gaussian Blur Alpha Not 0 Default"},sidebar:"docsSidebar",previous:{title:"Grayscale Default Vertex Color",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Filters/4992161156828236000"},next:{title:"Dof Initial Downsample Default",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Filters/6203373060974328000"}},l={},o=[{value:"Technique <code>ambient</code>",id:"technique-ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],d={toc:o},c="wrapper";function s(e){let{components:t,...r}=e;return(0,n.kt)(c,(0,p.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"gaussian-blur-alpha-not-0-default"},"Gaussian Blur Alpha Not 0 Default"),(0,n.kt)("p",null,"(",(0,n.kt)("inlineCode",{parentName:"p"},"gaussian_blur_alpha_not_0:default"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"0x49f9a14c88817369"),")"),(0,n.kt)("p",null,"This template is referenced 1 time by ",(0,n.kt)("a",{parentName:"p",href:"/docs/Generated/Render%20Templates/filters.render_template_database#gaussian-blur-alpha-not-0"},"gaussian_blur_alpha_not_0"),"."),(0,n.kt)("h3",{id:"technique-ambient"},"Technique ",(0,n.kt)("inlineCode",{parentName:"h3"},"ambient")),(0,n.kt)("h3",{id:"render-states"},"Render States"),(0,n.kt)("p",null,"More info can be found on the ",(0,n.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 0,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 0,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 1,\n    D3DRS_COLORWRITEENABLE = 15,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 1,\n    D3DRS_ALPHATESTENABLE = 0,\n    D3DRS_BLENDOPALPHA = 5,\n    D3DRS_SRCBLENDALPHA = 2,\n    D3DRS_DESTBLENDALPHA = 2,\n};\n")),(0,n.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,n.kt)("p",null,"More info can be found on the ",(0,n.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,n.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 2,\n    D3DSAMP_MINFILTER = 2,\n    D3DSAMP_MIPFILTER = 2,\n};\n")),(0,n.kt)("h3",{id:"shaders"},"Shaders"),(0,n.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x4 view_proj_matrix : register(vs_3_0, c0);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 texcoord : TEXCOORD;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float2 texcoord : TEXCOORD;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    // dcl_position v0\n    // dcl_texcoord v1\n    // dcl_position o0\n    // dcl_texcoord o1.xy\n    // dp4 o0.x, v0, c0\n    o.position.x = dot(i.position, (view_proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, v0, c1\n    o.position.y = dot(i.position, (view_proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.z, v0, c2\n    o.position.z = dot(i.position, (view_proj_matrix._m02_m12_m22_m32));\n    // dp4 o0.w, v0, c3\n    o.position.w = dot(i.position, (view_proj_matrix._m03_m13_m23_m33));\n    // mov o1.xy, v1\n    o.texcoord = i.texcoord;\n    // \n\n    return o;\n}\n")),(0,n.kt)("p",null,"Decompiled by DXDecompiler."),(0,n.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-hlsl"},"float3 ref_inv_source_resolution : register(ps_3_0, c13);\nfloat3 ref_samples[13] : register(ps_3_0, c0);\nsampler2D ref_src_texture : register(ps_3_0, s0);\nfloat4 PixelMain(float2 texcoord : TEXCOORD) : COLOR\n{\n    float4 out_color;\n    float4 temp0, temp1, temp2, temp3, temp4;\n    // def c14, 0.00390625, 0, -0.7213475, 0.39894244\n    // dcl_texcoord v0.xy\n    // dcl_2d s0\n    // mov r0.y, c14.y\n    temp0.y = float1(0);\n    // dp2add r0.x, c0, c0, r0.y\n    temp0.x = dot(ref_samples[0].xy, ref_samples[0].xy) + temp0.y;\n    // mul r0.x, r0.x, c14.z\n    temp0.x = temp0.x * float1(-0.7213475);\n    // exp r0.x, r0.x\n    temp0.x = exp2(temp0.x);\n    // mul r0.x, r0.x, c14.w\n    temp0.x = temp0.x * float1(0.39894244);\n    // mov r1.xy, c13\n    temp1.xy = ref_inv_source_resolution.xy;\n    // mad r0.zw, c0.xyxy, r1.xyxy, v0.xyxy\n    temp0.zw = ref_samples[0].xy * temp1.xy + texcoord.xy;\n    // texld r2, r0.zwzw, s0\n    temp2 = tex2D(ref_src_texture, temp0.zw);\n    // mul r3, r0.x, r2\n    temp3 = temp0.x * temp2;\n    // add r0.z, -r2.w, c14.x\n    temp0.z = -temp2.w + float1(0.00390625);\n    // cmp r2, r0.z, c14.y, r3\n    temp2 = (temp0.z >= 0) ? float4(0, 0, 0, 0) : temp3;\n    // cmp r0.x, r0.z, c14.y, r0.x\n    temp0.x = (temp0.z >= 0) ? float1(0) : temp0.x;\n    // dp2add r0.z, c1, c1, r0.y\n    temp0.z = dot(ref_samples[1].xy, ref_samples[1].xy) + temp0.y;\n    // mul r0.z, r0.z, c14.z\n    temp0.z = temp0.z * float1(-0.7213475);\n    // exp r0.z, r0.z\n    temp0.z = exp2(temp0.z);\n    // mul r0.w, r0.z, c14.w\n    temp0.w = temp0.z * float1(0.39894244);\n    // mad r0.z, r0.z, c14.w, r0.x\n    temp0.z = temp0.z * float1(0.39894244) + temp0.x;\n    // mad r1.zw, c1.xyxy, r1.xyxy, v0.xyxy\n    temp1.zw = ref_samples[1].xy * temp1.xy + texcoord.xy;\n    // texld r3, r1.zwzw, s0\n    temp3 = tex2D(ref_src_texture, temp1.zw);\n    // mad r4, r3, r0.w, r2\n    temp4 = temp3 * temp0.w + temp2;\n    // add r0.w, -r3.w, c14.x\n    temp0.w = -temp3.w + float1(0.00390625);\n    // cmp r2, r0.w, r2, r4\n    temp2 = (temp0.w >= 0) ? temp2 : temp4;\n    // cmp r0.x, r0.w, r0.x, r0.z\n    temp0.x = (temp0.w >= 0) ? temp0.x : temp0.z;\n    // dp2add r0.z, c2, c2, r0.y\n    temp0.z = dot(ref_samples[2].xy, ref_samples[2].xy) + temp0.y;\n    // mul r0.z, r0.z, c14.z\n    temp0.z = temp0.z * float1(-0.7213475);\n    // exp r0.z, r0.z\n    temp0.z = exp2(temp0.z);\n    // mul r0.w, r0.z, c14.w\n    temp0.w = temp0.z * float1(0.39894244);\n    // mad r0.z, r0.z, c14.w, r0.x\n    temp0.z = temp0.z * float1(0.39894244) + temp0.x;\n    // mad r1.zw, c2.xyxy, r1.xyxy, v0.xyxy\n    temp1.zw = ref_samples[2].xy * temp1.xy + texcoord.xy;\n    // texld r3, r1.zwzw, s0\n    temp3 = tex2D(ref_src_texture, temp1.zw);\n    // mad r4, r3, r0.w, r2\n    temp4 = temp3 * temp0.w + temp2;\n    // add r0.w, -r3.w, c14.x\n    temp0.w = -temp3.w + float1(0.00390625);\n    // cmp r2, r0.w, r2, r4\n    temp2 = (temp0.w >= 0) ? temp2 : temp4;\n    // cmp r0.x, r0.w, r0.x, r0.z\n    temp0.x = (temp0.w >= 0) ? temp0.x : temp0.z;\n    // dp2add r0.z, c3, c3, r0.y\n    temp0.z = dot(ref_samples[3].xy, ref_samples[3].xy) + temp0.y;\n    // mul r0.z, r0.z, c14.z\n    temp0.z = temp0.z * float1(-0.7213475);\n    // exp r0.z, r0.z\n    temp0.z = exp2(temp0.z);\n    // mul r0.w, r0.z, c14.w\n    temp0.w = temp0.z * float1(0.39894244);\n    // mad r0.z, r0.z, c14.w, r0.x\n    temp0.z = temp0.z * float1(0.39894244) + temp0.x;\n    // mad r1.zw, c3.xyxy, r1.xyxy, v0.xyxy\n    temp1.zw = ref_samples[3].xy * temp1.xy + texcoord.xy;\n    // texld r3, r1.zwzw, s0\n    temp3 = tex2D(ref_src_texture, temp1.zw);\n    // mad r4, r3, r0.w, r2\n    temp4 = temp3 * temp0.w + temp2;\n    // add r0.w, -r3.w, c14.x\n    temp0.w = -temp3.w + float1(0.00390625);\n    // cmp r2, r0.w, r2, r4\n    temp2 = (temp0.w >= 0) ? temp2 : temp4;\n    // cmp r0.x, r0.w, r0.x, r0.z\n    temp0.x = (temp0.w >= 0) ? temp0.x : temp0.z;\n    // dp2add r0.z, c4, c4, r0.y\n    temp0.z = dot(ref_samples[4].xy, ref_samples[4].xy) + temp0.y;\n    // mul r0.z, r0.z, c14.z\n    temp0.z = temp0.z * float1(-0.7213475);\n    // exp r0.z, r0.z\n    temp0.z = exp2(temp0.z);\n    // mul r0.w, r0.z, c14.w\n    temp0.w = temp0.z * float1(0.39894244);\n    // mad r0.z, r0.z, c14.w, r0.x\n    temp0.z = temp0.z * float1(0.39894244) + temp0.x;\n    // mad r1.zw, c4.xyxy, r1.xyxy, v0.xyxy\n    temp1.zw = ref_samples[4].xy * temp1.xy + texcoord.xy;\n    // texld r3, r1.zwzw, s0\n    temp3 = tex2D(ref_src_texture, temp1.zw);\n    // mad r4, r3, r0.w, r2\n    temp4 = temp3 * temp0.w + temp2;\n    // add r0.w, -r3.w, c14.x\n    temp0.w = -temp3.w + float1(0.00390625);\n    // cmp r2, r0.w, r2, r4\n    temp2 = (temp0.w >= 0) ? temp2 : temp4;\n    // cmp r0.x, r0.w, r0.x, r0.z\n    temp0.x = (temp0.w >= 0) ? temp0.x : temp0.z;\n    // dp2add r0.z, c5, c5, r0.y\n    temp0.z = dot(ref_samples[5].xy, ref_samples[5].xy) + temp0.y;\n    // mul r0.z, r0.z, c14.z\n    temp0.z = temp0.z * float1(-0.7213475);\n    // exp r0.z, r0.z\n    temp0.z = exp2(temp0.z);\n    // mul r0.w, r0.z, c14.w\n    temp0.w = temp0.z * float1(0.39894244);\n    // mad r0.z, r0.z, c14.w, r0.x\n    temp0.z = temp0.z * float1(0.39894244) + temp0.x;\n    // mad r1.zw, c5.xyxy, r1.xyxy, v0.xyxy\n    temp1.zw = ref_samples[5].xy * temp1.xy + texcoord.xy;\n    // texld r3, r1.zwzw, s0\n    temp3 = tex2D(ref_src_texture, temp1.zw);\n    // mad r4, r3, r0.w, r2\n    temp4 = temp3 * temp0.w + temp2;\n    // add r0.w, -r3.w, c14.x\n    temp0.w = -temp3.w + float1(0.00390625);\n    // cmp r2, r0.w, r2, r4\n    temp2 = (temp0.w >= 0) ? temp2 : temp4;\n    // cmp r0.x, r0.w, r0.x, r0.z\n    temp0.x = (temp0.w >= 0) ? temp0.x : temp0.z;\n    // dp2add r0.z, c6, c6, r0.y\n    temp0.z = dot(ref_samples[6].xy, ref_samples[6].xy) + temp0.y;\n    // mul r0.z, r0.z, c14.z\n    temp0.z = temp0.z * float1(-0.7213475);\n    // exp r0.z, r0.z\n    temp0.z = exp2(temp0.z);\n    // mul r0.w, r0.z, c14.w\n    temp0.w = temp0.z * float1(0.39894244);\n    // mad r0.z, r0.z, c14.w, r0.x\n    temp0.z = temp0.z * float1(0.39894244) + temp0.x;\n    // mad r1.zw, c6.xyxy, r1.xyxy, v0.xyxy\n    temp1.zw = ref_samples[6].xy * temp1.xy + texcoord.xy;\n    // texld r3, r1.zwzw, s0\n    temp3 = tex2D(ref_src_texture, temp1.zw);\n    // mad r4, r3, r0.w, r2\n    temp4 = temp3 * temp0.w + temp2;\n    // add r0.w, -r3.w, c14.x\n    temp0.w = -temp3.w + float1(0.00390625);\n    // cmp r2, r0.w, r2, r4\n    temp2 = (temp0.w >= 0) ? temp2 : temp4;\n    // cmp r0.x, r0.w, r0.x, r0.z\n    temp0.x = (temp0.w >= 0) ? temp0.x : temp0.z;\n    // dp2add r0.z, c7, c7, r0.y\n    temp0.z = dot(ref_samples[7].xy, ref_samples[7].xy) + temp0.y;\n    // mul r0.z, r0.z, c14.z\n    temp0.z = temp0.z * float1(-0.7213475);\n    // exp r0.z, r0.z\n    temp0.z = exp2(temp0.z);\n    // mul r0.w, r0.z, c14.w\n    temp0.w = temp0.z * float1(0.39894244);\n    // mad r0.z, r0.z, c14.w, r0.x\n    temp0.z = temp0.z * float1(0.39894244) + temp0.x;\n    // mad r1.zw, c7.xyxy, r1.xyxy, v0.xyxy\n    temp1.zw = ref_samples[7].xy * temp1.xy + texcoord.xy;\n    // texld r3, r1.zwzw, s0\n    temp3 = tex2D(ref_src_texture, temp1.zw);\n    // mad r4, r3, r0.w, r2\n    temp4 = temp3 * temp0.w + temp2;\n    // add r0.w, -r3.w, c14.x\n    temp0.w = -temp3.w + float1(0.00390625);\n    // cmp r2, r0.w, r2, r4\n    temp2 = (temp0.w >= 0) ? temp2 : temp4;\n    // cmp r0.x, r0.w, r0.x, r0.z\n    temp0.x = (temp0.w >= 0) ? temp0.x : temp0.z;\n    // dp2add r0.z, c8, c8, r0.y\n    temp0.z = dot(ref_samples[8].xy, ref_samples[8].xy) + temp0.y;\n    // mul r0.z, r0.z, c14.z\n    temp0.z = temp0.z * float1(-0.7213475);\n    // exp r0.z, r0.z\n    temp0.z = exp2(temp0.z);\n    // mul r0.w, r0.z, c14.w\n    temp0.w = temp0.z * float1(0.39894244);\n    // mad r0.z, r0.z, c14.w, r0.x\n    temp0.z = temp0.z * float1(0.39894244) + temp0.x;\n    // mad r1.zw, c8.xyxy, r1.xyxy, v0.xyxy\n    temp1.zw = ref_samples[8].xy * temp1.xy + texcoord.xy;\n    // texld r3, r1.zwzw, s0\n    temp3 = tex2D(ref_src_texture, temp1.zw);\n    // mad r4, r3, r0.w, r2\n    temp4 = temp3 * temp0.w + temp2;\n    // add r0.w, -r3.w, c14.x\n    temp0.w = -temp3.w + float1(0.00390625);\n    // cmp r2, r0.w, r2, r4\n    temp2 = (temp0.w >= 0) ? temp2 : temp4;\n    // cmp r0.x, r0.w, r0.x, r0.z\n    temp0.x = (temp0.w >= 0) ? temp0.x : temp0.z;\n    // dp2add r0.z, c9, c9, r0.y\n    temp0.z = dot(ref_samples[9].xy, ref_samples[9].xy) + temp0.y;\n    // mul r0.z, r0.z, c14.z\n    temp0.z = temp0.z * float1(-0.7213475);\n    // exp r0.z, r0.z\n    temp0.z = exp2(temp0.z);\n    // mul r0.w, r0.z, c14.w\n    temp0.w = temp0.z * float1(0.39894244);\n    // mad r0.z, r0.z, c14.w, r0.x\n    temp0.z = temp0.z * float1(0.39894244) + temp0.x;\n    // mad r1.zw, c9.xyxy, r1.xyxy, v0.xyxy\n    temp1.zw = ref_samples[9].xy * temp1.xy + texcoord.xy;\n    // texld r3, r1.zwzw, s0\n    temp3 = tex2D(ref_src_texture, temp1.zw);\n    // mad r4, r3, r0.w, r2\n    temp4 = temp3 * temp0.w + temp2;\n    // add r0.w, -r3.w, c14.x\n    temp0.w = -temp3.w + float1(0.00390625);\n    // cmp r2, r0.w, r2, r4\n    temp2 = (temp0.w >= 0) ? temp2 : temp4;\n    // cmp r0.x, r0.w, r0.x, r0.z\n    temp0.x = (temp0.w >= 0) ? temp0.x : temp0.z;\n    // dp2add r0.z, c10, c10, r0.y\n    temp0.z = dot(ref_samples[10].xy, ref_samples[10].xy) + temp0.y;\n    // mul r0.z, r0.z, c14.z\n    temp0.z = temp0.z * float1(-0.7213475);\n    // exp r0.z, r0.z\n    temp0.z = exp2(temp0.z);\n    // mul r0.w, r0.z, c14.w\n    temp0.w = temp0.z * float1(0.39894244);\n    // mad r0.z, r0.z, c14.w, r0.x\n    temp0.z = temp0.z * float1(0.39894244) + temp0.x;\n    // mad r1.zw, c10.xyxy, r1.xyxy, v0.xyxy\n    temp1.zw = ref_samples[10].xy * temp1.xy + texcoord.xy;\n    // texld r3, r1.zwzw, s0\n    temp3 = tex2D(ref_src_texture, temp1.zw);\n    // mad r4, r3, r0.w, r2\n    temp4 = temp3 * temp0.w + temp2;\n    // add r0.w, -r3.w, c14.x\n    temp0.w = -temp3.w + float1(0.00390625);\n    // cmp r2, r0.w, r2, r4\n    temp2 = (temp0.w >= 0) ? temp2 : temp4;\n    // cmp r0.x, r0.w, r0.x, r0.z\n    temp0.x = (temp0.w >= 0) ? temp0.x : temp0.z;\n    // dp2add r0.z, c11, c11, r0.y\n    temp0.z = dot(ref_samples[11].xy, ref_samples[11].xy) + temp0.y;\n    // mul r0.z, r0.z, c14.z\n    temp0.z = temp0.z * float1(-0.7213475);\n    // exp r0.z, r0.z\n    temp0.z = exp2(temp0.z);\n    // mul r0.w, r0.z, c14.w\n    temp0.w = temp0.z * float1(0.39894244);\n    // mad r0.z, r0.z, c14.w, r0.x\n    temp0.z = temp0.z * float1(0.39894244) + temp0.x;\n    // mad r1.zw, c11.xyxy, r1.xyxy, v0.xyxy\n    temp1.zw = ref_samples[11].xy * temp1.xy + texcoord.xy;\n    // texld r3, r1.zwzw, s0\n    temp3 = tex2D(ref_src_texture, temp1.zw);\n    // mad r4, r3, r0.w, r2\n    temp4 = temp3 * temp0.w + temp2;\n    // add r0.w, -r3.w, c14.x\n    temp0.w = -temp3.w + float1(0.00390625);\n    // cmp r2, r0.w, r2, r4\n    temp2 = (temp0.w >= 0) ? temp2 : temp4;\n    // cmp r0.x, r0.w, r0.x, r0.z\n    temp0.x = (temp0.w >= 0) ? temp0.x : temp0.z;\n    // dp2add r0.y, c12, c12, r0.y\n    temp0.y = dot(ref_samples[12].xy, ref_samples[12].xy) + temp0.y;\n    // mul r0.y, r0.y, c14.z\n    temp0.y = temp0.y * float1(-0.7213475);\n    // exp r0.y, r0.y\n    temp0.y = exp2(temp0.y);\n    // mul r0.z, r0.y, c14.w\n    temp0.z = temp0.y * float1(0.39894244);\n    // mad r0.y, r0.y, c14.w, r0.x\n    temp0.y = temp0.y * float1(0.39894244) + temp0.x;\n    // mad r1.xy, c12, r1, v0\n    temp1.xy = ref_samples[12].xy * temp1.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // mad r3, r1, r0.z, r2\n    temp3 = temp1 * temp0.z + temp2;\n    // add r0.z, -r1.w, c14.x\n    temp0.z = -temp1.w + float1(0.00390625);\n    // cmp r1, r0.z, r2, r3\n    temp1 = (temp0.z >= 0) ? temp2 : temp3;\n    // cmp r0.x, r0.z, r0.x, r0.y\n    temp0.x = (temp0.z >= 0) ? temp0.x : temp0.y;\n    // rcp r0.y, r0.x\n    temp0.y = 1.0f / temp0.x;\n    // mul r1, r0.y, r1\n    temp1 = temp0.y * temp1;\n    // texld r2, v0, s0\n    temp2 = tex2D(ref_src_texture, texcoord.xy);\n    // cmp oC0, -r0.x, r2, r1\n    out_color = (-temp0.x >= 0) ? temp2 : temp1;\n    // \n\n    return out_color;\n}\n")),(0,n.kt)("p",null,"Decompiled by DXDecompiler."))}s.isMDXComponent=!0}}]);