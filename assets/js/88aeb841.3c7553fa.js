"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[888],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>u});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var d=n.createContext({}),s=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},m=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},i="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},x=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),i=s(r),x=a,u=i["".concat(d,".").concat(x)]||i[x]||c[x]||o;return r?n.createElement(u,p(p({ref:t},m),{},{components:r})):n.createElement(u,p({ref:t},m))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,p=new Array(o);p[0]=x;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[i]="string"==typeof e?e:a,p[1]=l;for(var s=2;s<o;s++)p[s]=r[s];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}x.displayName="MDXCreateElement"},2975:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const o={id:0x77313b12c2149000,title:"Post Lex Flare Default"},p="Post Lex Flare Default",l={unversionedId:"Generated/Shaders/Post/8588710916123824000",id:"Generated/Shaders/Post/8588710916123824000",title:"Post Lex Flare Default",description:"(postLEXflare:default, 0x77313b12c2149200)",source:"@site/docs/Generated/Shaders/Post/0x77313b12c2149200.mdx",sourceDirName:"Generated/Shaders/Post",slug:"/Generated/Shaders/Post/8588710916123824000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Post/8588710916123824000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/Generated/Shaders/Post/0x77313b12c2149200.mdx",tags:[],version:"current",frontMatter:{id:"8588710916123824000",title:"Post Lex Flare Default"},sidebar:"docsSidebar",previous:{title:"Post Clear Target Default",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Post/8159887626389928000"},next:{title:"Post Shadow Blur Default Dx9 Hwsm",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Post/8737690507513851000"}},d={},s=[{value:"Technique <code>ambient</code>",id:"technique-ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],m={toc:s},i="wrapper";function c(e){let{components:t,...r}=e;return(0,a.kt)(i,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"post-lex-flare-default"},"Post Lex Flare Default"),(0,a.kt)("p",null,"(",(0,a.kt)("inlineCode",{parentName:"p"},"post_LEX_flare:default"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"0x77313b12c2149200"),")"),(0,a.kt)("p",null,"This template is referenced 1 time by ",(0,a.kt)("a",{parentName:"p",href:"/docs/Generated/Render%20Templates/post.render_template_database#post-lex-flare"},"post_LEX_flare"),"."),(0,a.kt)("h3",{id:"technique-ambient"},"Technique ",(0,a.kt)("inlineCode",{parentName:"h3"},"ambient")),(0,a.kt)("h3",{id:"render-states"},"Render States"),(0,a.kt)("p",null,"More info can be found on the ",(0,a.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 0,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 0,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 1,\n    D3DRS_COLORWRITEENABLE = 15,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,a.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,a.kt)("p",null,"More info can be found on the ",(0,a.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,a.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 2,\n    D3DSAMP_MINFILTER = 2,\n    D3DSAMP_MIPFILTER = 2,\n};\n")),(0,a.kt)("h3",{id:"shaders"},"Shaders"),(0,a.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x4 view_proj_matrix : register(vs_3_0, c0);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 texcoord : TEXCOORD;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float2 texcoord : TEXCOORD;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    // def c4, 1, 0, 0, 0\n    // dcl_position v0\n    // dcl_texcoord v1\n    // dcl_position o0\n    // dcl_texcoord o1.xy\n    // dp4 o0.x, v0, c0\n    o.position.x = dot(i.position, (view_proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, v0, c1\n    o.position.y = dot(i.position, (view_proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.w, v0, c3\n    o.position.w = dot(i.position, (view_proj_matrix._m03_m13_m23_m33));\n    // mov o0.z, c4.x\n    o.position.z = float1(1);\n    // mov o1.xy, v1\n    o.texcoord = i.texcoord;\n    // \n\n    return o;\n}\n")),(0,a.kt)("p",null,"Decompiled by DXDecompiler."),(0,a.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-hlsl"},"sampler2D diffuse_texture : register(ps_3_0, s0);\nfloat4 PixelMain(float2 texcoord : TEXCOORD) : COLOR\n{\n    float4 out_color;\n    float4 temp0, temp1, temp2, temp3;\n    // def c0, 0.5, 0, 0.38, 0.14156863\n    // def c1, 0.16690196, 0.18627451, 0.21960784, 0.37\n    // def c2, 1, 0.95, 0.9, -0.5\n    // def c3, 0.055882353, 0.065882355, 0.09313726, 0.10980392\n    // def c4, 0.7, 0, 0, 0\n    // dcl_texcoord v0.xy\n    // dcl_2d s0\n    // add r0, c0.x, -v0.xyxy\n    temp0 = float4(0.5, 0.5, 0.5, 0.5) + -texcoord.xyxy;\n    // mul r1.xy, r0.zwzw, c0.x\n    temp1.xy = temp0.zw * float2(0.5, 0.5);\n    // dp2add r1.z, r1, r1, c0.y\n    temp1.z = dot(temp1.xy, temp1.xy) + float1(0);\n    // rsq r1.z, r1.z\n    temp1.z = 1 / sqrt(temp1.z);\n    // mul r1, r1.z, r1.xyxy\n    temp1 = temp1.z * temp1.xyxy;\n    // mad r2, r1.zwzw, c0.z, v0.xyxy\n    temp2 = temp1.zwzw * float4(0.38, 0.38, 0.38, 0.38) + texcoord.xyxy;\n    // mad r3.xy, r1.zwzw, c0.w, r2.zwzw\n    temp3.xy = temp1.zw * float2(0.14156863, 0.14156863) + temp2.zw;\n    // mad r1, r1, c1.xxyy, r2\n    temp1 = temp1 * float4(0.16690196, 0.16690196, 0.18627451, 0.18627451) + temp2;\n    // texld r2, r3, s0\n    temp2 = tex2D(diffuse_texture, temp3.xy);\n    // texld r3, r1, s0\n    temp3 = tex2D(diffuse_texture, temp1.xy);\n    // texld r1, r1.zwzw, s0\n    temp1 = tex2D(diffuse_texture, temp1.zw);\n    // mov r2.zw, r1.z\n    temp2.zw = temp1.z;\n    // mov r2.y, r3.y\n    temp2.y = temp3.y;\n    // lrp r1.xy, c0.x, c0.x, v0\n    temp1.xy = lerp(texcoord.xy, float2(0.5, 0.5), float2(0.5, 0.5));\n    // mad r1.zw, r0, c1.xyyz, r1.xyxy\n    temp1.zw = temp0.zw * float2(0.18627451, 0.21960784) + temp1.xy;\n    // mad r0, r0, c3, r1.xyxy\n    temp0 = temp0 * float4(0.055882353, 0.065882355, 0.09313726, 0.10980392) + temp1.xyxy;\n    // texld r1, r1.zwzw, s0\n    temp1 = tex2D(diffuse_texture, temp1.zw);\n    // mov r1.zw, r1.z\n    temp1.zw = temp1.z;\n    // texld r3, r0, s0\n    temp3 = tex2D(diffuse_texture, temp0.xy);\n    // texld r0, r0.zwzw, s0\n    temp0 = tex2D(diffuse_texture, temp0.zw);\n    // mov r1.y, r0.y\n    temp1.y = temp0.y;\n    // mov r1.x, r3.x\n    temp1.x = temp3.x;\n    // add r0, r1, r2\n    temp0 = temp1 + temp2;\n    // texld r1, c0.x, s0\n    temp1 = tex2D(diffuse_texture, float4(0.5, 0.5, 0.5, 0.5).xy);\n    // add r0, r0, r1.xyzz\n    temp0 = temp0 + temp1.xyzz;\n    // dp3 r1.x, r0.xyww, c1.w\n    temp1.x = dot(temp0.xyw, float3(0.37, 0.37, 0.37));\n    // add r1, -r0.xyww, r1.x\n    temp1 = -temp0.xyww + temp1.x;\n    // mad r0, r1, c4.x, r0\n    temp0 = temp1 * float4(0.7, 0.7, 0.7, 0.7) + temp0;\n    // mad r0, r0, c2.xyzz, c2.w\n    temp0 = temp0 * float4(1, 0.95, 0.9, 0.9) + float4(-0.5, -0.5, -0.5, -0.5);\n    // add oC0, r0, r0\n    out_color = temp0 + temp0;\n    // \n\n    return out_color;\n}\n")),(0,a.kt)("p",null,"Decompiled by DXDecompiler."))}c.isMDXComponent=!0}}]);