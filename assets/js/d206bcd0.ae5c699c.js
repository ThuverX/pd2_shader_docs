"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[77880],{603905:(e,t,n)=>{n.d(t,{Zo:()=>_,kt:()=>s});var r=n(667294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function m(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):m(m({},t),e)),n},_=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},x="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},i=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,_=d(e,["components","mdxType","originalType","parentName"]),x=p(n),i=o,s=x["".concat(l,".").concat(i)]||x[i]||c[i]||a;return n?r.createElement(s,m(m({ref:t},_),{},{components:n})):r.createElement(s,m({ref:t},_))}));function s(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,m=new Array(a);m[0]=i;var d={};for(var l in t)hasOwnProperty.call(t,l)&&(d[l]=t[l]);d.originalType=e,d[x]="string"==typeof e?e:o,m[1]=d;for(var p=2;p<a;p++)m[p]=n[p];return r.createElement.apply(null,m)}return r.createElement.apply(null,n)}i.displayName="MDXCreateElement"},480636:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>m,default:()=>c,frontMatter:()=>a,metadata:()=>d,toc:()=>p});var r=n(487462),o=(n(667294),n(603905));const a={id:0xf1d13b5be6441000,title:"Generic Default Blend Diffuse Blend Mask Control Blend Normal Cube Environment Mapping Diffuse Texture Instanced Normalmap World Up Blend"},m="Generic Default Blend Diffuse Blend Mask Control Blend Normal Cube Environment Mapping Diffuse Texture Instanced Normalmap World Up Blend",d={unversionedId:"Generated/Shaders/Base/[4500-4600]/17424773699164443000",id:"Generated/Shaders/Base/[4500-4600]/17424773699164443000",title:"Generic Default Blend Diffuse Blend Mask Control Blend Normal Cube Environment Mapping Diffuse Texture Instanced Normalmap World Up Blend",description:"(genericBLENDDIFFUSEBLENDNORMALDIFFUSETEXTURENORMALMAP:WORLDUP_BLEND, 0xf1d13b5be6441201)",source:"@site/docs/Generated/Shaders/Base/[4500-4600]/0xf1d13b5be6441201.mdx",sourceDirName:"Generated/Shaders/Base/[4500-4600]",slug:"/Generated/Shaders/Base/[4500-4600]/17424773699164443000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[4500-4600]/17424773699164443000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/Generated/Shaders/Base/[4500-4600]/0xf1d13b5be6441201.mdx",tags:[],version:"current",frontMatter:{id:"17424773699164443000",title:"Generic Default Blend Diffuse Blend Mask Control Blend Normal Cube Environment Mapping Diffuse Texture Instanced Normalmap World Up Blend"},sidebar:"docsSidebar",previous:{title:"Landscape Shadow Caster Blend Masks Cubemap Mat0 Mat0 Blend World Mask Mat0 Nm Mat0 Uv2 Mat1 Mat1 Blend World Mask Mat1 Nm Mat1 Uv2 Mat2 Mat2 Blend World Mask Mat2 Nm Mat2 Uv2 Mat3 Mat3 Blend World Mask Mat3 Nm Mat3 Uv2 Nvidia Overlay Over Detail Snm Map World Mask A Wetness World Nm World Overlay Mask Texture World Overlay Texture World Tex Uv1",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[4500-4600]/17422923110837197000"},next:{title:"Opacity Default Ati Cube Environment Mapping Cube Fresnel Diffuse Texture Instanced Normalmap",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[4500-4600]/17432718323981253000"}},l={},p=[{value:"Technique <code>deferred_ambient</code>",id:"technique-deferred_ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Sampler 1",id:"sampler-1",level:4},{value:"Sampler 2",id:"sampler-2",level:4},{value:"Sampler 3",id:"sampler-3",level:4},{value:"Sampler 4",id:"sampler-4",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],_={toc:p},x="wrapper";function c(e){let{components:t,...n}=e;return(0,o.kt)(x,(0,r.Z)({},_,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"generic-default-blend-diffuse-blend-mask-control-blend-normal-cube-environment-mapping-diffuse-texture-instanced-normalmap-world-up-blend"},"Generic Default Blend Diffuse Blend Mask Control Blend Normal Cube Environment Mapping Diffuse Texture Instanced Normalmap World Up Blend"),(0,o.kt)("p",null,"(",(0,o.kt)("inlineCode",{parentName:"p"},"generic:default:BLEND_DIFFUSE:BLEND_MASK_CONTROL:BLEND_NORMAL:CUBE_ENVIRONMENT_MAPPING:DIFFUSE_TEXTURE:INSTANCED:NORMALMAP:WORLD_UP_BLEND"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"0xf1d13b5be6441201"),")"),(0,o.kt)("p",null,"This template is referenced 1 time by ",(0,o.kt)("a",{parentName:"p",href:"/docs/Generated/Render%20Templates/base.render_template_database#generic-blend-diffuse-blend-mask-control-blend-normal-cube-environment-mapping-diffuse-texture-instanced-normalmap-world-up-blend"},"generic:BLEND_DIFFUSE:BLEND_MASK_CONTROL:BLEND_NORMAL:CUBE_ENVIRONMENT_MAPPING:DIFFUSE_TEXTURE:INSTANCED:NORMALMAP:WORLD_UP_BLEND"),".\nThis template uses the following inputs:\n|Name|UI Name|Type|\n|---|---|---|\n|diffuse_texture|Diffuse Texture (UV1)|texture|\n|diffuse_layer0_texture|Second diffuse (Shifted UV1)|texture|\n|bump_normal_texture|Normal map (UV2 else UV1)|texture|\n|normal_layer0_texture|Second normal map (UV1)|texture|\n|reflection_texture|Reflection Cube|texture|\n|blend_control|Blending Smoothing, Blend mask Bias|vector3|\n|world_up_blend_bias|World up blend bias|scalar|."),(0,o.kt)("h3",{id:"technique-deferred_ambient"},"Technique ",(0,o.kt)("inlineCode",{parentName:"h3"},"deferred_ambient")),(0,o.kt)("h3",{id:"render-states"},"Render States"),(0,o.kt)("p",null,"More info can be found on the ",(0,o.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 1,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 2,\n    D3DRS_COLORWRITEENABLE = 15,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,o.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,o.kt)("p",null,"More info can be found on the ",(0,o.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,o.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,o.kt)("h4",{id:"sampler-1"},"Sampler 1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,o.kt)("h4",{id:"sampler-2"},"Sampler 2"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,o.kt)("h4",{id:"sampler-3"},"Sampler 3"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,o.kt)("h4",{id:"sampler-4"},"Sampler 4"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,o.kt)("h3",{id:"shaders"},"Shaders"),(0,o.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"float camera_near_range : register(vs_3_0, c208);\ncolumn_major float4x4 proj_matrix : register(vs_3_0, c204);\ncolumn_major float4x4 ref_world_tm[50] : register(vs_3_0, c0);\nfloat ref_world_up_blend_bias : register(vs_3_0, c209);\ncolumn_major float4x4 view_matrix : register(vs_3_0, c200);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 normal : NORMAL;\n    float4 texcoord1 : TEXCOORD1;\n    float4 texcoord : TEXCOORD;\n    float4 tangent : TANGENT;\n    float4 binormal : BINORMAL;\n    float4 position1 : POSITION1;\n    float4 color : COLOR;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float texcoord1 : TEXCOORD1;\n    float texcoord7 : TEXCOORD7;\n    float4 texcoord : TEXCOORD;\n    float3 texcoord2 : TEXCOORD2;\n    float3 texcoord3 : TEXCOORD3;\n    float3 texcoord4 : TEXCOORD4;\n    float3 texcoord5 : TEXCOORD5;\n    float4 color : COLOR;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float4 temp0, temp1;\n    float addr0;\n    // def c210, 2, -1, 4, -0\n    // dcl_position v0\n    // dcl_normal v1\n    // dcl_texcoord1 v2\n    // dcl_texcoord v3\n    // dcl_tangent v4\n    // dcl_binormal v5\n    // dcl_position1 v6\n    // dcl_color v7\n    // dcl_position o0\n    // dcl_texcoord1 o1.x\n    // dcl_texcoord7 o2.x\n    // dcl_texcoord o3\n    // dcl_texcoord2 o4.xyz\n    // dcl_texcoord3 o5.xyz\n    // dcl_texcoord4 o6.xyz\n    // dcl_texcoord5 o7.xyz\n    // dcl_color o8\n    // mad r0, v0.xyzx, -c210.yyyw, -c210.wwwy\n    temp0 = i.position.xyzx * float4(1, 1, 1, 0) + float4(0, 0, 0, 1);\n    // frc r1.x, v6.x\n    temp1.x = frac(i.position1.x);\n    // add r1.x, -r1.x, v6.x\n    temp1.x = -temp1.x + i.position1.x;\n    // mul r1.x, r1.x, c210.z\n    temp1.x = temp1.x * float1(4);\n    // mova a0.x, r1.x\n    addr0.x = temp1.x;\n    // dp4 r1.w, r0, c3[a0.x]\n    temp1.w = dot(temp0, (ref_world_tm[0 + (addr0.x / 4)]._m03_m13_m23_m33));\n    // dp4 r1.x, r0, c0[a0.x]\n    temp1.x = dot(temp0, (ref_world_tm[0 + (addr0.x / 4)]._m00_m10_m20_m30));\n    // dp4 r1.y, r0, c1[a0.x]\n    temp1.y = dot(temp0, (ref_world_tm[0 + (addr0.x / 4)]._m01_m11_m21_m31));\n    // dp4 r1.z, r0, c2[a0.x]\n    temp1.z = dot(temp0, (ref_world_tm[0 + (addr0.x / 4)]._m02_m12_m22_m32));\n    // dp4 r0.x, r1, c200\n    temp0.x = dot(temp1, (view_matrix._m00_m10_m20_m30));\n    // dp4 r0.y, r1, c201\n    temp0.y = dot(temp1, (view_matrix._m01_m11_m21_m31));\n    // dp4 r0.z, r1, c202\n    temp0.z = dot(temp1, (view_matrix._m02_m12_m22_m32));\n    // dp4 r0.w, r1, c203\n    temp0.w = dot(temp1, (view_matrix._m03_m13_m23_m33));\n    // mov o7.xyz, r1\n    o.texcoord5 = temp1;\n    // dp4 o0.x, r0, c204\n    o.position.x = dot(temp0, (proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, r0, c205\n    o.position.y = dot(temp0, (proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.w, r0, c207\n    o.position.w = dot(temp0, (proj_matrix._m03_m13_m23_m33));\n    // dp4 r0.x, r0, c206\n    temp0.x = dot(temp0, (proj_matrix._m02_m12_m22_m32));\n    // add o1.x, r0.x, c208.x\n    o.texcoord1 = temp0.x + camera_near_range.x;\n    // mov o0.z, r0.x\n    o.position.z = temp0.x;\n    // mad r0.xyz, v4, c210.x, c210.y\n    temp0.xyz = i.tangent.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o4.x, r0, c0[a0.x]\n    o.texcoord2.x = dot(temp0.xyz, (ref_world_tm[0 + (addr0.x / 4)]._m00_m10_m20_m30).xyz);\n    // dp3 o5.x, r0, c1[a0.x]\n    o.texcoord3.x = dot(temp0.xyz, (ref_world_tm[0 + (addr0.x / 4)]._m01_m11_m21_m31).xyz);\n    // dp3 r0.x, r0, c2[a0.x]\n    temp0.x = dot(temp0.xyz, (ref_world_tm[0 + (addr0.x / 4)]._m02_m12_m22_m32).xyz);\n    // mad r1.xyz, v5, c210.x, c210.y\n    temp1.xyz = i.binormal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o4.y, -r1, c0[a0.x]\n    o.texcoord2.y = dot(-temp1.xyz, (ref_world_tm[0 + (addr0.x / 4)]._m00_m10_m20_m30).xyz);\n    // dp3 o5.y, -r1, c1[a0.x]\n    o.texcoord3.y = dot(-temp1.xyz, (ref_world_tm[0 + (addr0.x / 4)]._m01_m11_m21_m31).xyz);\n    // dp3 r0.y, -r1, c2[a0.x]\n    temp0.y = dot(-temp1.xyz, (ref_world_tm[0 + (addr0.x / 4)]._m02_m12_m22_m32).xyz);\n    // mad r1.xyz, v1, c210.x, c210.y\n    temp1.xyz = i.normal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o4.z, r1, c0[a0.x]\n    o.texcoord2.z = dot(temp1.xyz, (ref_world_tm[0 + (addr0.x / 4)]._m00_m10_m20_m30).xyz);\n    // dp3 o5.z, r1, c1[a0.x]\n    o.texcoord3.z = dot(temp1.xyz, (ref_world_tm[0 + (addr0.x / 4)]._m01_m11_m21_m31).xyz);\n    // dp3 r0.z, r1, c2[a0.x]\n    temp0.z = dot(temp1.xyz, (ref_world_tm[0 + (addr0.x / 4)]._m02_m12_m22_m32).xyz);\n    // dp3 r0.w, r0, r0\n    temp0.w = dot(temp0.xyz, temp0.xyz);\n    // mov o6.xyz, r0\n    o.texcoord4 = temp0;\n    // rsq r0.x, r0.w\n    temp0.x = 1 / sqrt(temp0.w);\n    // mad r0.x, r0.z, -r0.x, -c210.y\n    temp0.x = temp0.z * -temp0.x + float1(1);\n    // pow r1.x, r0.x, c209.x\n    temp1.x = pow(temp0.x, ref_world_up_blend_bias.x);\n    // min o2.x, r1.x, -c210.y\n    o.texcoord7 = min(temp1.x, float4(1, 1, 1, 1));\n    // mov o3.xy, v3\n    o.texcoord.xy = i.texcoord.xy;\n    // mov o3.zw, v2.xyxy\n    o.texcoord.zw = i.texcoord1.xy;\n    // mul o8, c210_abs.xxxy, v7\n    o.color = float4(2, 2, 2, 1) * i.color;\n    // \n\n    return o;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."),(0,o.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"sampler2D bump_normal_texture : register(ps_3_0, s2);\ncolumn_major float4x4 camera_world_matrix : register(ps_3_0, c0);\nsampler2D diffuse_layer0_texture : register(ps_3_0, s1);\nsampler2D diffuse_texture : register(ps_3_0, s0);\nsampler2D normal_layer0_texture : register(ps_3_0, s3);\nfloat2 ref_blend_control : register(ps_3_0, c3);\nsamplerCUBE reflection_texture : register(ps_3_0, s4);\nstruct PixelMain_Input\n{\n    float texcoord1 : TEXCOORD1;\n    float texcoord7 : TEXCOORD7;\n    float2 texcoord : TEXCOORD;\n    float3 texcoord2 : TEXCOORD2;\n    float3 texcoord3 : TEXCOORD3;\n    float3 texcoord4 : TEXCOORD4;\n    float3 texcoord5 : TEXCOORD5;\n};\n\nstruct PixelMain_Output\n{\n    float4 color1 : COLOR1;\n    float4 color : COLOR;\n    float4 color2 : COLOR2;\n};\n\nPixelMain_Output PixelMain(PixelMain_Input i)\n{\n    PixelMain_Output o;\n    float4 temp0, temp1, temp2, temp3, temp4, temp5;\n    // def c4, -0.5, 2, 1, 0.25\n    // def c5, 0.4, 0, 0, 0\n    // dcl_texcoord1 v0.x\n    // dcl_texcoord7_pp v1.x\n    // dcl_texcoord v2.xy\n    // dcl_texcoord2 v3.xyz\n    // dcl_texcoord3 v4.xyz\n    // dcl_texcoord4 v5.xyz\n    // dcl_texcoord5 v6.xyz\n    // dcl_2d s0\n    // dcl_2d s1\n    // dcl_2d s2\n    // dcl_2d s3\n    // dcl_cube s4\n    // texld r0, v2, s2\n    temp0 = tex2D(bump_normal_texture, i.texcoord.xy);\n    // mov r0.xy, r0.wyzw\n    temp0.xy = temp0.wy;\n    // texld r1, v2, s3\n    temp1 = tex2D(normal_layer0_texture, i.texcoord.xy);\n    // mov r0.zw, r1.xywy\n    temp0.zw = temp1.wy;\n    // add r0, r0, c4.x\n    temp0 = temp0 + float4(-0.5, -0.5, -0.5, -0.5);\n    // add r0.zw, r0, r0\n    temp0.zw = temp0.zw + temp0.zw;\n    // mad r0.xy, r0, c4.y, -r0.zwzw\n    temp0.xy = temp0.xy * float2(2, 2) + -temp0.zw;\n    // rcp r1.x, c3.x\n    temp1.x = 1.0f / ref_blend_control.x;\n    // texld_pp r2, v2, s1\n    temp2 = /* not implemented _pp modifier */ tex2D(diffuse_layer0_texture, i.texcoord.xy);\n    // add_pp r1.y, r2.w, -v1.x\n    temp1.y = /* not implemented _pp modifier */ temp2.w + -i.texcoord7.x;\n    // mul_sat_pp r1.x, r1.x, r1.y\n    ;// error\n    // mad r0.xy, r1.x, r0, r0.zwzw\n    temp0.xy = temp1.xx * temp0.xy + temp0.zw;\n    // mul r0.w, r0.x, r0.x\n    temp0.w = temp0.x * temp0.x;\n    // mad r0.w, r0.y, r0.y, -r0.w\n    temp0.w = temp0.y * temp0.y + -temp0.w;\n    // add r0.w, -r0.w, c4.z\n    temp0.w = -temp0.w + float1(1);\n    // rsq r0.w, r0.w\n    temp0.w = 1 / sqrt(temp0.w);\n    // rcp r0.z, r0.w\n    temp0.z = 1.0f / temp0.w;\n    // dp3 r3.x, r0, v3\n    temp3.x = dot(temp0.xyz, i.texcoord2.xyz);\n    // dp3 r3.y, r0, v4\n    temp3.y = dot(temp0.xyz, i.texcoord3.xyz);\n    // dp3 r3.z, r0, v5\n    temp3.z = dot(temp0.xyz, i.texcoord4.xyz);\n    // nrm_pp r0.xyz, r3\n    temp0.xyz = /* not implemented _pp modifier */ normalize(temp3.xyz).xyz;\n    // add r3.x, c0.w, -v6.x\n    temp3.x = (camera_world_matrix._m00_m10_m20_m30).w + -i.texcoord5.x;\n    // add r3.y, c1.w, -v6.y\n    temp3.y = (camera_world_matrix._m01_m11_m21_m31).w + -i.texcoord5.y;\n    // add r3.z, c2.w, -v6.z\n    temp3.z = (camera_world_matrix._m02_m12_m22_m32).w + -i.texcoord5.z;\n    // nrm r4.xyz, r3\n    temp4.xyz = normalize(temp3.xyz).xyz;\n    // dp3 r0.w, r0, r4\n    temp0.w = dot(temp0.xyz, temp4.xyz);\n    // add r1.y, r0.w, r0.w\n    temp1.y = temp0.w + temp0.w;\n    // mov_sat r0.w, r0.w\n    temp0.w = saturate(temp0.w);\n    // add r0.w, -r0.w, c4.z\n    temp0.w = -temp0.w + float1(1);\n    // dp2add r0.w, r0.w, r0.w, c4.w\n    temp0.w = dot(temp0.ww, temp0.ww) + float1(0.25);\n    // mad r1.yzw, r1.y, -r0.xxyz, r4.xxyz\n    temp1.yzw = temp1.yyy * -temp0.xyz + temp4.xyz;\n    // mad_pp oC1.xyz, r0, -c4.x, -c4.x\n    o.color1.xyz = /* not implemented _pp modifier */ temp0.xyz * float3(0.5, 0.5, 0.5) + float3(0.5, 0.5, 0.5);\n    // texld r3, r1.yzww, s4\n    temp3 = texCUBE(reflection_texture, temp1.yzw);\n    // texld_pp r4, v2, s0\n    temp4 = /* not implemented _pp modifier */ tex2D(diffuse_texture, i.texcoord.xy);\n    // lrp_pp r5, r1.x, r4, r2\n    temp5 = /* not implemented _pp modifier */ lerp(temp2, temp4, temp1.x);\n    // mul r0.x, r0.w, r5.w\n    temp0.x = temp0.w * temp5.w;\n    // mad_pp oC0.xyz, r3, r0.x, r5\n    o.color.xyz = /* not implemented _pp modifier */ temp3.xyz * temp0.xxx + temp5.xyz;\n    // mov_pp oC1.w, r5.w\n    o.color1.w = /* not implemented _pp modifier */ temp5.w;\n    // mov oC0.w, c5.x\n    o.color.w = float1(0.4);\n    // mov oC2, v0.x\n    o.color2 = i.texcoord1.x;\n    // \n\n    return o;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."))}c.isMDXComponent=!0}}]);