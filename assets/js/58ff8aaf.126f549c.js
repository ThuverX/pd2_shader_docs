"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[4478],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>x});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),i=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},d=function(e){var t=i(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},_=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=i(r),_=o,x=c["".concat(s,".").concat(_)]||c[_]||m[_]||a;return r?n.createElement(x,p(p({ref:t},d),{},{components:r})):n.createElement(x,p({ref:t},d))}));function x(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,p=new Array(a);p[0]=_;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:o,p[1]=l;for(var i=2;i<a;i++)p[i]=r[i];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}_.displayName="MDXCreateElement"},6016:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>i});var n=r(7462),o=(r(7294),r(3905));const a={id:0x3c4802bd10553800,title:"Post Color Grading Prepare Default"},p="Post Color Grading Prepare Default",l={unversionedId:"Generated/Shaders/Post/4343724851644938000",id:"Generated/Shaders/Post/4343724851644938000",title:"Post Color Grading Prepare Default",description:"(postcolorgrading_prepare:default, 0x3c4802bd10553877)",source:"@site/docs/Generated/Shaders/Post/0x3c4802bd10553877.mdx",sourceDirName:"Generated/Shaders/Post",slug:"/Generated/Shaders/Post/4343724851644938000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Post/4343724851644938000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/Generated/Shaders/Post/0x3c4802bd10553877.mdx",tags:[],version:"current",frontMatter:{id:"4343724851644938000",title:"Post Color Grading Prepare Default"},sidebar:"docsSidebar",previous:{title:"Post Downscale Default",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Post/3981552304024541700"},next:{title:"Post Smaa Blend Neighbourhood Default Smaa Hlsl 3",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Post/4491164139891084300"}},s={},i=[{value:"Technique <code>ambient</code>",id:"technique-ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],d={toc:i},c="wrapper";function m(e){let{components:t,...r}=e;return(0,o.kt)(c,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"post-color-grading-prepare-default"},"Post Color Grading Prepare Default"),(0,o.kt)("p",null,"(",(0,o.kt)("inlineCode",{parentName:"p"},"post_color_grading_prepare:default"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"0x3c4802bd10553877"),")"),(0,o.kt)("p",null,"This template is referenced 1 time by ",(0,o.kt)("a",{parentName:"p",href:"/docs/Generated/Render%20Templates/post.render_template_database#post-color-grading-prepare"},"post_color_grading_prepare"),"."),(0,o.kt)("h3",{id:"technique-ambient"},"Technique ",(0,o.kt)("inlineCode",{parentName:"h3"},"ambient")),(0,o.kt)("h3",{id:"render-states"},"Render States"),(0,o.kt)("p",null,"More info can be found on the ",(0,o.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 0,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 0,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 1,\n    D3DRS_COLORWRITEENABLE = 7,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,o.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,o.kt)("p",null,"More info can be found on the ",(0,o.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,o.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 1,\n    D3DSAMP_MINFILTER = 1,\n    D3DSAMP_MIPFILTER = 1,\n};\n")),(0,o.kt)("h3",{id:"shaders"},"Shaders"),(0,o.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x4 view_proj_matrix : register(vs_3_0, c0);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 texcoord : TEXCOORD;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float2 texcoord : TEXCOORD;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    // def c4, 1, 0, 0, 0\n    // dcl_position v0\n    // dcl_texcoord v1\n    // dcl_position o0\n    // dcl_texcoord o1.xy\n    // dp4 o0.x, v0, c0\n    o.position.x = dot(i.position, (view_proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, v0, c1\n    o.position.y = dot(i.position, (view_proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.w, v0, c3\n    o.position.w = dot(i.position, (view_proj_matrix._m03_m13_m23_m33));\n    // mov o0.z, c4.x\n    o.position.z = float1(1);\n    // mov o1.xy, v1\n    o.texcoord = i.texcoord;\n    // \n\n    return o;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."),(0,o.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"sampler2D filter_color_texture : register(ps_3_0, s0);\nfloat3 ref_LUT_settings_a : register(ps_3_0, c0);\nfloat3 ref_LUT_settings_b : register(ps_3_0, c1);\nfloat ref_contrast : register(ps_3_0, c2);\nfloat4 PixelMain(float2 texcoord : TEXCOORD) : COLOR\n{\n    float4 out_color;\n    float4 temp0, temp1;\n    float3 temp2;\n    // def c3, 1.2, 0, 1, 0.5\n    // def c4, 0.37, 2, 1.8, 1\n    // dcl_texcoord v0.xy\n    // dcl_2d s0\n    // texld r0, v0, s0\n    temp0 = tex2D(filter_color_texture, texcoord.xy);\n    // mul r1.xyz, r0, r0\n    temp1.xyz = temp0.xyz * temp0.xyz;\n    // mad r1.xyz, r1, r0, -r0\n    temp1.xyz = temp1.xyz * temp0.xyz + -temp0.xyz;\n    // mad r0.xyz, c2.x, r1, r0\n    temp0.xyz = ref_contrast.xxx * temp1.xyz + temp0.xyz;\n    // max r1.x, r0.y, r0.z\n    temp1.x = max(temp0.y, temp0.z);\n    // max r2.x, r0.x, r1.x\n    temp2.x = max(temp0.x, temp1.x);\n    // mul r1.x, r2.x, c3.x\n    temp1.x = temp2.x * float1(1.2);\n    // mov r1.yz, c3.y\n    temp1.yz = float2(0, 0);\n    // lrp r2.xyz, c0.x, r1.xzyw, r0.xzyw\n    temp2.xyz = lerp(temp0.xzy, temp1.xzy, ref_LUT_settings_a.xxx);\n    // mov r0.zw, c3\n    temp0.zw = float2(1, 0.5);\n    // add r0.x, r0.z, -c0.y\n    temp0.x = temp0.z + -ref_LUT_settings_a.y;\n    // mul r2.xy, r0.x, r2\n    temp2.xy = temp0.xx * temp2.xy;\n    // mad r0.x, c1.z, -r0.w, r0.z\n    temp0.x = ref_LUT_settings_b.z * -temp0.w + temp0.z;\n    // mul r0.xy, r0.x, r2.xzzw\n    temp0.xy = temp0.xx * temp2.xz;\n    // mov r0.zw, r2.y\n    temp0.zw = temp2.y;\n    // add r0, r0, c1.z\n    temp0 = temp0 + ref_LUT_settings_b.z;\n    // dp3 r1.x, r0.xyww, c4.x\n    temp1.x = dot(temp0.xyw, float3(0.37, 0.37, 0.37));\n    // add r1, -r0.xyww, r1.x\n    temp1 = -temp0.xyww + temp1.x;\n    // mad r0, c1.x, r1, r0\n    temp0 = ref_LUT_settings_b.x * temp1 + temp0;\n    // mov r1.y, c1.y\n    temp1.y = ref_LUT_settings_b.y;\n    // mad oC0, r1.y, c4.yzww, r0\n    out_color = temp1.y * float4(2, 1.8, 1, 1) + temp0;\n    // \n\n    return out_color;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."))}m.isMDXComponent=!0}}]);