"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[5310],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>D});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},p=Object.keys(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)r=p[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var a=n.createContext({}),m=function(e){var t=n.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},d=function(e){var t=m(e.components);return n.createElement(a.Provider,{value:t},e.children)},c="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},_=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,p=e.originalType,a=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=m(r),_=o,D=c["".concat(a,".").concat(_)]||c[_]||s[_]||p;return r?n.createElement(D,l(l({ref:t},d),{},{components:r})):n.createElement(D,l({ref:t},d))}));function D(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var p=r.length,l=new Array(p);l[0]=_;var i={};for(var a in t)hasOwnProperty.call(t,a)&&(i[a]=t[a]);i.originalType=e,i[c]="string"==typeof e?e:o,l[1]=i;for(var m=2;m<p;m++)l[m]=r[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}_.displayName="MDXCreateElement"},5250:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>s,frontMatter:()=>p,metadata:()=>i,toc:()=>m});var n=r(7462),o=(r(7294),r(3905));const p={id:0x2491e60f2902b800,title:"Bloom Color Correction Default Bloom Opacity"},l="Bloom Color Correction Default Bloom Opacity",i={unversionedId:"Generated/Shaders/Filters/2635140209775393000",id:"Generated/Shaders/Filters/2635140209775393000",title:"Bloom Color Correction Default Bloom Opacity",description:"(bloomcolorcorrectionBLOOM_OPACITY, 0x2491e60f2902b70c)",source:"@site/docs/Generated/Shaders/Filters/0x2491e60f2902b70c.mdx",sourceDirName:"Generated/Shaders/Filters",slug:"/Generated/Shaders/Filters/2635140209775393000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Filters/2635140209775393000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/Generated/Shaders/Filters/0x2491e60f2902b70c.mdx",tags:[],version:"current",frontMatter:{id:"2635140209775393000",title:"Bloom Color Correction Default Bloom Opacity"},sidebar:"docsSidebar",previous:{title:"9 Tap Filter Default",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Filters/2285030570074273500"},next:{title:"Gaussian Blur Default",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Filters/172713939348533540"}},a={},m=[{value:"Technique <code>ambient</code>",id:"technique-ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Sampler 1",id:"sampler-1",level:4},{value:"Sampler 2",id:"sampler-2",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],d={toc:m},c="wrapper";function s(e){let{components:t,...r}=e;return(0,o.kt)(c,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"bloom-color-correction-default-bloom-opacity"},"Bloom Color Correction Default Bloom Opacity"),(0,o.kt)("p",null,"(",(0,o.kt)("inlineCode",{parentName:"p"},"bloom_color_correction:default:BLOOM_OPACITY"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"0x2491e60f2902b70c"),")"),(0,o.kt)("p",null,"This template is referenced 1 time by ",(0,o.kt)("a",{parentName:"p",href:"/docs/Generated/Render%20Templates/filters.render_template_database#bloom-color-correction-bloom-opacity"},"bloom_color_correction:BLOOM_OPACITY"),"."),(0,o.kt)("h3",{id:"technique-ambient"},"Technique ",(0,o.kt)("inlineCode",{parentName:"h3"},"ambient")),(0,o.kt)("h3",{id:"render-states"},"Render States"),(0,o.kt)("p",null,"More info can be found on the ",(0,o.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 0,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 0,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 1,\n    D3DRS_COLORWRITEENABLE = 15,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 1,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,o.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,o.kt)("p",null,"More info can be found on the ",(0,o.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,o.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 1,\n    D3DSAMP_MINFILTER = 1,\n    D3DSAMP_MIPFILTER = 1,\n};\n")),(0,o.kt)("h4",{id:"sampler-1"},"Sampler 1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 2,\n    D3DSAMP_MINFILTER = 2,\n    D3DSAMP_MIPFILTER = 2,\n};\n")),(0,o.kt)("h4",{id:"sampler-2"},"Sampler 2"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 2,\n    D3DSAMP_MINFILTER = 2,\n    D3DSAMP_MIPFILTER = 2,\n};\n")),(0,o.kt)("h3",{id:"shaders"},"Shaders"),(0,o.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x4 view_proj_matrix : register(vs_3_0, c0);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 texcoord : TEXCOORD;\n    float4 texcoord1 : TEXCOORD1;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float2 texcoord : TEXCOORD;\n    float2 texcoord1 : TEXCOORD1;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    // dcl_position v0\n    // dcl_texcoord v1\n    // dcl_texcoord1 v2\n    // dcl_position o0\n    // dcl_texcoord o1.xy\n    // dcl_texcoord1 o2.xy\n    // dp4 o0.x, v0, c0\n    o.position.x = dot(i.position, (view_proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, v0, c1\n    o.position.y = dot(i.position, (view_proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.z, v0, c2\n    o.position.z = dot(i.position, (view_proj_matrix._m02_m12_m22_m32));\n    // dp4 o0.w, v0, c3\n    o.position.w = dot(i.position, (view_proj_matrix._m03_m13_m23_m33));\n    // mov o1.xy, v1\n    o.texcoord = i.texcoord;\n    // mov o2.xy, v2\n    o.texcoord1 = i.texcoord1;\n    // \n\n    return o;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."),(0,o.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"sampler2D diffuse_texture : register(ps_3_0, s0);\nsampler2D filter_color_texture : register(ps_3_0, s2);\nfloat3 filter_color_texture_size : register(ps_3_0, c1);\nfloat ref_opacity : register(ps_3_0, c0);\nsampler2D self_illumination_texture : register(ps_3_0, s1);\nstruct PixelMain_Input\n{\n    float2 texcoord : TEXCOORD;\n    float2 texcoord1 : TEXCOORD1;\n};\n\nfloat4 PixelMain(PixelMain_Input i) : COLOR\n{\n    float4 out_color;\n    float4 temp0, temp1, temp2;\n    // def c2, 2.2, 0.5, 0, 1\n    // dcl_texcoord v0.xy\n    // dcl_texcoord1 v1.xy\n    // dcl_2d s0\n    // dcl_2d s1\n    // dcl_2d s2\n    // texld_pp r0, v1, s1\n    temp0 = /* not implemented _pp modifier */ tex2D(self_illumination_texture, i.texcoord1.xy);\n    // log r1.x, r0.x\n    temp1.x = log2(temp0.x);\n    // log r1.y, r0.y\n    temp1.y = log2(temp0.y);\n    // log r1.z, r0.z\n    temp1.z = log2(temp0.z);\n    // mul r0.xyz, r1, c2.x\n    temp0.xyz = temp1.xyz * float3(2.2, 2.2, 2.2);\n    // exp_pp r1.x, r0.x\n    temp1.x = /* not implemented _pp modifier */ exp2(temp0.x);\n    // exp_pp r1.y, r0.y\n    temp1.y = /* not implemented _pp modifier */ exp2(temp0.y);\n    // exp_pp r1.z, r0.z\n    temp1.z = /* not implemented _pp modifier */ exp2(temp0.z);\n    // texld_pp r0, v0, s0\n    temp0 = /* not implemented _pp modifier */ tex2D(diffuse_texture, i.texcoord.xy);\n    // mad_sat_pp r0.xyz, r1, c0.x, r0\n    ;// error\n    // rcp r1.x, c1.x\n    temp1.x = 1.0f / filter_color_texture_size.x;\n    // rcp r1.z, c1.y\n    temp1.z = 1.0f / filter_color_texture_size.y;\n    // mul_pp r1.xy, r1.xzzw, c2.y\n    temp1.xy = /* not implemented _pp modifier */ temp1.xz * float2(0.5, 0.5);\n    // mov_pp r0.w, c2.z\n    temp0.w = /* not implemented _pp modifier */ float1(0);\n    // add_pp r2, r0.xwyw, r1.xyxy\n    temp2 = /* not implemented _pp modifier */ temp0.xwyw + temp1.xyxy;\n    // add_pp r0.xy, r0.zwzw, r1\n    temp0.xy = /* not implemented _pp modifier */ temp0.zw + temp1.xy;\n    // texld_pp r0, r0, s2\n    temp0 = /* not implemented _pp modifier */ tex2D(filter_color_texture, temp0.xy);\n    // mov_pp oC0.z, r0.z\n    out_color.z = /* not implemented _pp modifier */ temp0.z;\n    // texld_pp r0, r2, s2\n    temp0 = /* not implemented _pp modifier */ tex2D(filter_color_texture, temp2.xy);\n    // texld_pp r1, r2.zwzw, s2\n    temp1 = /* not implemented _pp modifier */ tex2D(filter_color_texture, temp2.zw);\n    // mov_pp oC0.y, r1.y\n    out_color.y = /* not implemented _pp modifier */ temp1.y;\n    // mul_pp oC0.xw, r0.x, c2.wyzz\n    out_color.xw = /* not implemented _pp modifier */ temp0.xx * float2(1, 0);\n    // \n\n    return out_color;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."))}s.isMDXComponent=!0}}]);