"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[69752],{603905:(e,a,n)=>{n.d(a,{Zo:()=>p,kt:()=>_});var t=n(667294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function l(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?l(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function o(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var m=t.createContext({}),s=function(e){var a=t.useContext(m),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},p=function(e){var a=s(e.components);return t.createElement(m.Provider,{value:a},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,l=e.originalType,m=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=s(n),u=r,_=d["".concat(m,".").concat(u)]||d[u]||c[u]||l;return n?t.createElement(_,i(i({ref:a},p),{},{components:n})):t.createElement(_,i({ref:a},p))}));function _(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=u;var o={};for(var m in a)hasOwnProperty.call(a,m)&&(o[m]=a[m]);o.originalType=e,o[d]="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},64531:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>m,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var t=n(487462),r=(n(667294),n(603905));const l={id:168546093488987e5,title:"Generic Shadow Caster Ati Diffuse Texture Diffuse Uvanim Global Environment Mapping Normalmap Normalmap Depth Texture Normalmap Uv1 Normal Uvanim Parallax Parallax Animation Parallax Relief Parallax Shadows Self Illumination Skinned 3weights"},i="Generic Shadow Caster Ati Diffuse Texture Diffuse Uvanim Global Environment Mapping Normalmap Normalmap Depth Texture Normalmap Uv1 Normal Uvanim Parallax Parallax Animation Parallax Relief Parallax Shadows Self Illumination Skinned 3weights",o={unversionedId:"Generated/Shaders/Base/[4300-4400]/16854609348898700000",id:"Generated/Shaders/Base/[4300-4400]/16854609348898700000",title:"Generic Shadow Caster Ati Diffuse Texture Diffuse Uvanim Global Environment Mapping Normalmap Normalmap Depth Texture Normalmap Uv1 Normal Uvanim Parallax Parallax Animation Parallax Relief Parallax Shadows Self Illumination Skinned 3weights",description:"(genericATIDIFFUSEUVANIMNORMALMAPNORMALMAPUV1PARALLAXPARALLAXRELIEFSELFILLUMINATION:SKINNED3WEIGHTS, 0xe9e799e73d15b5b4)",source:"@site/docs/Generated/Shaders/Base/[4300-4400]/0xe9e799e73d15b5b4.mdx",sourceDirName:"Generated/Shaders/Base/[4300-4400]",slug:"/Generated/Shaders/Base/[4300-4400]/16854609348898700000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[4300-4400]/16854609348898700000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/Generated/Shaders/Base/[4300-4400]/0xe9e799e73d15b5b4.mdx",tags:[],version:"current",frontMatter:{id:"16854609348898700000",title:"Generic Shadow Caster Ati Diffuse Texture Diffuse Uvanim Global Environment Mapping Normalmap Normalmap Depth Texture Normalmap Uv1 Normal Uvanim Parallax Parallax Animation Parallax Relief Parallax Shadows Self Illumination Skinned 3weights"},sidebar:"docsSidebar",previous:{title:"Generic Shadow Caster Alpha Masked Diffuse Texture External Alpha Ref Normalmap Nvidia Opacity Texture Skinned 3weights",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[4300-4400]/16853358294357543000"},next:{title:"Generic Default Diffuse Texture Global Environment Mapping Gloss Blurs Cubemap Gloss Control Value",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[4300-4400]/16857698515371598000"}},m={},s=[{value:"Technique <code>ambient</code>",id:"technique-ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],p={toc:s},d="wrapper";function c(e){let{components:a,...n}=e;return(0,r.kt)(d,(0,t.Z)({},p,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"generic-shadow-caster-ati-diffuse-texture-diffuse-uvanim-global-environment-mapping-normalmap-normalmap-depth-texture-normalmap-uv1-normal-uvanim-parallax-parallax-animation-parallax-relief-parallax-shadows-self-illumination-skinned-3weights"},"Generic Shadow Caster Ati Diffuse Texture Diffuse Uvanim Global Environment Mapping Normalmap Normalmap Depth Texture Normalmap Uv1 Normal Uvanim Parallax Parallax Animation Parallax Relief Parallax Shadows Self Illumination Skinned 3weights"),(0,r.kt)("p",null,"(",(0,r.kt)("inlineCode",{parentName:"p"},"generic:shadow_caster:ATI:DIFFUSE_TEXTURE:DIFFUSE_UVANIM:GLOBAL_ENVIRONMENT_MAPPING:NORMALMAP:NORMALMAP_DEPTH_TEXTURE:NORMALMAP_UV1:NORMAL_UVANIM:PARALLAX:PARALLAX_ANIMATION:PARALLAX_RELIEF:PARALLAX_SHADOWS:SELF_ILLUMINATION:SKINNED_3WEIGHTS"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"0xe9e799e73d15b5b4"),")"),(0,r.kt)("p",null,"This template is referenced 1 time by ",(0,r.kt)("a",{parentName:"p",href:"/docs/Generated/Render%20Templates/base.render_template_database#generic-diffuse-texture-diffuse-uvanim-global-environment-mapping-normalmap-normalmap-depth-texture-normalmap-uv1-normal-uvanim-parallax-parallax-animation-parallax-relief-parallax-shadows-self-illumination-skinned-3weights"},"generic:DIFFUSE_TEXTURE:DIFFUSE_UVANIM:GLOBAL_ENVIRONMENT_MAPPING:NORMALMAP:NORMALMAP_DEPTH_TEXTURE:NORMALMAP_UV1:NORMAL_UVANIM:PARALLAX:PARALLAX_ANIMATION:PARALLAX_RELIEF:PARALLAX_SHADOWS:SELF_ILLUMINATION:SKINNED_3WEIGHTS"),".\nThis template uses the following inputs:\n|Name|UI Name|Type|\n|---|---|---|\n|diffuse_texture|Diffuse Texture (UV1)|texture|\n|bump_normal_texture|Normal map (UV2 else UV1)|texture|\n|parallax_animation_texture|Parallax animation texture|texture|\n|uv_speed|UV Speed|vector3|\n|parallax_scale|Parallax scale|scalar|\n|parallax_layers|Number of parallax layers|scalar|\n|parallax_animation_scale|Parallax animation scale|scalar|\n|parallax_animation_uv_offset|Parallax animation uv offset|vector3|\n|parallax_animation_uv_scale|Parallax animation uv scale|vector3|\n|parallax_animation_normal_settings|Parallax normal animation (X=height threshold, Y=scale)|vector3|\n|parallax_shadow_scale|Parallax shadow scale|scalar|\n|parallax_shadowing|Parallax self shadowing amount|scalar|\n|self_illumination_texture|Self Illumination Texture (UV4)|texture|\n|il_multiplier|Self Illumination Intensity Multiplier|scalar|."),(0,r.kt)("h3",{id:"technique-ambient"},"Technique ",(0,r.kt)("inlineCode",{parentName:"h3"},"ambient")),(0,r.kt)("h3",{id:"render-states"},"Render States"),(0,r.kt)("p",null,"More info can be found on the ",(0,r.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 1,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 2,\n    D3DRS_COLORWRITEENABLE = 0,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 961656599,\n    D3DRS_SLOPESCALEDEPTHBIAS = 1075838976,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,r.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,r.kt)("p",null,"More info can be found on the ",(0,r.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,r.kt)("h3",{id:"shaders"},"Shaders"),(0,r.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x3 bones[54] : register(vs_3_0, c0);\ncolumn_major float4x4 view_proj_matrix : register(vs_3_0, c162);\nstruct VertexMain_Input\n{\n    float4 blendweight : BLENDWEIGHT;\n    float4 blendindices : BLENDINDICES;\n    float4 position : POSITION;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float texcoord1 : TEXCOORD1;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float4 temp0;\n    float2 addr0;\n    float3 temp1;\n    // def c166, 3, 1, 0, 0\n    // dcl_blendweight v0\n    // dcl_blendindices v1\n    // dcl_position v2\n    // dcl_position o0\n    // dcl_texcoord1 o1.x\n    // mul r0.xyz, c166.x, v1\n    temp0.xyz = float3(3, 3, 3) * i.blendindices.xyz;\n    // mova a0.x, r0.y\n    addr0.x = temp0.y;\n    // dp4 r1.x, v2, c0[a0.x]\n    temp1.x = dot(i.position, (bones[0 + (addr0.x / 3)]._m00_m10_m20_m30));\n    // dp4 r1.y, v2, c1[a0.x]\n    temp1.y = dot(i.position, (bones[0 + (addr0.x / 3)]._m01_m11_m21_m31));\n    // dp4 r1.z, v2, c2[a0.x]\n    temp1.z = dot(i.position, (bones[0 + (addr0.x / 3)]._m02_m12_m22_m32));\n    // mul r1.xyz, r1, v0.y\n    temp1.xyz = temp1.xyz * i.blendweight.yyy;\n    // mova a0.xy, r0.xzzw\n    addr0.xy = temp0.xz;\n    // dp4 r0.x, v2, c0[a0.x]\n    temp0.x = dot(i.position, (bones[0 + (addr0.x / 3)]._m00_m10_m20_m30));\n    // dp4 r0.y, v2, c1[a0.x]\n    temp0.y = dot(i.position, (bones[0 + (addr0.x / 3)]._m01_m11_m21_m31));\n    // dp4 r0.z, v2, c2[a0.x]\n    temp0.z = dot(i.position, (bones[0 + (addr0.x / 3)]._m02_m12_m22_m32));\n    // mad r0.xyz, v0.x, r0, r1\n    temp0.xyz = i.blendweight.xxx * temp0.xyz + temp1.xyz;\n    // dp4 r1.x, v2, c0[a0.y]\n    temp1.x = dot(i.position, (bones[0 + (addr0.y / 3)]._m00_m10_m20_m30));\n    // dp4 r1.y, v2, c1[a0.y]\n    temp1.y = dot(i.position, (bones[0 + (addr0.y / 3)]._m01_m11_m21_m31));\n    // dp4 r1.z, v2, c2[a0.y]\n    temp1.z = dot(i.position, (bones[0 + (addr0.y / 3)]._m02_m12_m22_m32));\n    // mad r0.xyz, v0.z, r1, r0\n    temp0.xyz = i.blendweight.zzz * temp1.xyz + temp0.xyz;\n    // mov r0.w, c166.y\n    temp0.w = float1(1);\n    // dp4 o0.x, r0, c162\n    o.position.x = dot(temp0, (view_proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, r0, c163\n    o.position.y = dot(temp0, (view_proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.w, r0, c165\n    o.position.w = dot(temp0, (view_proj_matrix._m03_m13_m23_m33));\n    // dp4 r0.x, r0, c164\n    temp0.x = dot(temp0, (view_proj_matrix._m02_m12_m22_m32));\n    // mov o0.z, r0.x\n    o.position.z = temp0.x;\n    // mov o1.x, r0.x\n    o.texcoord1 = temp0.x;\n    // \n\n    return o;\n}\n")),(0,r.kt)("p",null,"Decompiled by DXDecompiler."),(0,r.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-hlsl"},"float4 PixelMain(float texcoord1 : TEXCOORD1) : COLOR\n{\n    float4 out_color;\n    // def c0, 1, 0, 0, 0\n    // dcl_texcoord1 v0.x\n    // mul oC0, c0.xyyy, v0.x\n    out_color = float4(1, 0, 0, 0) * texcoord1.x;\n    // \n\n    return out_color;\n}\n")),(0,r.kt)("p",null,"Decompiled by DXDecompiler."))}c.isMDXComponent=!0}}]);