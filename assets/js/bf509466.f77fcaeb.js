"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[55654],{603905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(667294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function m(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var d=n.createContext({}),l=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(d.Provider,{value:t},e.children)},x="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},i=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,d=e.parentName,c=m(e,["components","mdxType","originalType","parentName"]),x=l(r),i=o,f=x["".concat(d,".").concat(i)]||x[i]||s[i]||a;return r?n.createElement(f,p(p({ref:t},c),{},{components:r})):n.createElement(f,p({ref:t},c))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,p=new Array(a);p[0]=i;var m={};for(var d in t)hasOwnProperty.call(t,d)&&(m[d]=t[d]);m.originalType=e,m[x]="string"==typeof e?e:o,p[1]=m;for(var l=2;l<a;l++)p[l]=r[l];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}i.displayName="MDXCreateElement"},663184:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>s,frontMatter:()=>a,metadata:()=>m,toc:()=>l});var n=r(487462),o=(r(667294),r(603905));const a={id:0x361fcfcdd31cd600,title:"Post Dof Upscale Default Three"},p="Post Dof Upscale Default Three",m={unversionedId:"Generated/Shaders/Post/3900064285243266600",id:"Generated/Shaders/Post/3900064285243266600",title:"Post Dof Upscale Default Three",description:"(postDOFupscaleTHREE, 0x361fcfcdd31cd570)",source:"@site/docs/Generated/Shaders/Post/0x361fcfcdd31cd570.mdx",sourceDirName:"Generated/Shaders/Post",slug:"/Generated/Shaders/Post/3900064285243266600",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Post/3900064285243266600",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/Generated/Shaders/Post/0x361fcfcdd31cd570.mdx",tags:[],version:"current",frontMatter:{id:"3900064285243266600",title:"Post Dof Upscale Default Three"},sidebar:"docsSidebar",previous:{title:"Post Dome Occ Process Default",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Post/3893093928851877000"},next:{title:"Filter Mark Shadow Areas Default Border",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Post/3975765243328823300"}},d={},l=[{value:"Technique <code>ambient</code>",id:"technique-ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Sampler 1",id:"sampler-1",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],c={toc:l},x="wrapper";function s(e){let{components:t,...r}=e;return(0,o.kt)(x,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"post-dof-upscale-default-three"},"Post Dof Upscale Default Three"),(0,o.kt)("p",null,"(",(0,o.kt)("inlineCode",{parentName:"p"},"post_DOF_upscale:default:THREE"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"0x361fcfcdd31cd570"),")"),(0,o.kt)("p",null,"This template is referenced 1 time by ",(0,o.kt)("a",{parentName:"p",href:"/docs/Generated/Render%20Templates/post.render_template_database#post-dof-upscale-three"},"post_DOF_upscale:THREE"),"."),(0,o.kt)("h3",{id:"technique-ambient"},"Technique ",(0,o.kt)("inlineCode",{parentName:"h3"},"ambient")),(0,o.kt)("h3",{id:"render-states"},"Render States"),(0,o.kt)("p",null,"More info can be found on the ",(0,o.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 0,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 0,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 1,\n    D3DRS_COLORWRITEENABLE = 15,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,o.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,o.kt)("p",null,"More info can be found on the ",(0,o.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,o.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 2,\n    D3DSAMP_MINFILTER = 2,\n    D3DSAMP_MIPFILTER = 2,\n};\n")),(0,o.kt)("h4",{id:"sampler-1"},"Sampler 1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 2,\n    D3DSAMP_MINFILTER = 2,\n    D3DSAMP_MIPFILTER = 2,\n};\n")),(0,o.kt)("h3",{id:"shaders"},"Shaders"),(0,o.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"float3 ref_radial_offset : register(vs_3_0, c5);\nfloat3 ref_settings : register(vs_3_0, c4);\ncolumn_major float4x4 view_proj_matrix : register(vs_3_0, c0);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 texcoord : TEXCOORD;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float2 texcoord : TEXCOORD;\n    float4 texcoord1 : TEXCOORD1;\n    float4 texcoord2 : TEXCOORD2;\n    float4 texcoord3 : TEXCOORD3;\n    float4 texcoord4 : TEXCOORD4;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float4 temp0, temp1, temp2, temp3, temp4;\n    // def c6, 0, 1, -0.5, 0.5\n    // def c7, 0.003, 0.006, 0.009, 0.012\n    // def c8, 0.01, 0.02, 0.03, 0.04\n    // def c9, 0.05, 0.06, 0.07, 0.08\n    // def c10, 0.015, 0.018, 0.021, 0.024\n    // dcl_position v0\n    // dcl_texcoord v1\n    // dcl_position o0\n    // dcl_texcoord o1.xy\n    // dcl_texcoord1 o2\n    // dcl_texcoord2 o3\n    // dcl_texcoord3 o4\n    // dcl_texcoord4 o5\n    // dp4 o0.x, v0, c0\n    o.position.x = dot(i.position, (view_proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, v0, c1\n    o.position.y = dot(i.position, (view_proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.w, v0, c3\n    o.position.w = dot(i.position, (view_proj_matrix._m03_m13_m23_m33));\n    // dp3 r0.x, c5, c5\n    temp0.x = dot(ref_radial_offset.xyz, ref_radial_offset.xyz);\n    // rsq r0.x, r0.x\n    temp0.x = 1 / sqrt(temp0.x);\n    // rcp r0.y, r0.x\n    temp0.y = 1.0f / temp0.x;\n    // mad r0.xzw, c5.xyyz, r0.x, -c5.xyyz\n    temp0.xzw = ref_radial_offset.xyz * temp0.xxx + -ref_radial_offset.xyz;\n    // slt r0.y, c6.x, r0.y\n    temp0.y = (float1(0) < temp0.y) ? 1 : 0;\n    // mad r0.xyz, r0.y, r0.xzww, c5\n    temp0.xyz = temp0.yyy * temp0.xzw + ref_radial_offset.xyz;\n    // mul r0.z, r0.z, c4.x\n    temp0.z = temp0.z * ref_settings.x;\n    // mov r1.y, c6.y\n    temp1.y = float1(1);\n    // mad r2, r0.xyxy, c4.x, r1.y\n    temp2 = temp0.xyxy * ref_settings.x + temp1.y;\n    // add r2, -r2, c6.y\n    temp2 = -temp2 + float4(1, 1, 1, 1);\n    // mad r3, r0.z, c8, r1.y\n    temp3 = temp0.z * float4(0.01, 0.02, 0.03, 0.04) + temp1.y;\n    // mad r0, r0.z, c9, r1.y\n    temp0 = temp0.z * float4(0.05, 0.06, 0.07, 0.08) + temp1.y;\n    // add r1, c6.z, v1.xyxy\n    temp1 = float4(-0.5, -0.5, -0.5, -0.5) + i.texcoord.xyxy;\n    // mad r4, r2.zwzw, c7.xxyy, r1.zwzw\n    temp4 = temp2.zwzw * float4(0.003, 0.003, 0.006, 0.006) + temp1.zwzw;\n    // mad o2, r4, r3.xxyy, c6.w\n    o.texcoord1 = temp4 * temp3.xxyy + float4(0.5, 0.5, 0.5, 0.5);\n    // mad r4, r2.zwzw, c7.zzww, r1.zwzw\n    temp4 = temp2.zwzw * float4(0.009, 0.009, 0.012, 0.012) + temp1.zwzw;\n    // mad o3, r4, r3.zzww, c6.w\n    o.texcoord2 = temp4 * temp3.zzww + float4(0.5, 0.5, 0.5, 0.5);\n    // mad r3, r2.zwzw, c10.xxyy, r1.zwzw\n    temp3 = temp2.zwzw * float4(0.015, 0.015, 0.018, 0.018) + temp1.zwzw;\n    // mad r1, r2, c10.zzww, r1\n    temp1 = temp2 * float4(0.021, 0.021, 0.024, 0.024) + temp1;\n    // mad o5, r1, r0.zzww, c6.w\n    o.texcoord4 = temp1 * temp0.zzww + float4(0.5, 0.5, 0.5, 0.5);\n    // mad o4, r3, r0.xxyy, c6.w\n    o.texcoord3 = temp3 * temp0.xxyy + float4(0.5, 0.5, 0.5, 0.5);\n    // mov o0.z, c6.y\n    o.position.z = float1(1);\n    // mov o1.xy, v1\n    o.texcoord = i.texcoord;\n    // \n\n    return o;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."),(0,o.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"sampler2D diffuse_texture : register(ps_3_0, s0);\nfloat3 ref_settings : register(ps_3_0, c1);\nfloat3 render_target_size : register(ps_3_0, c0);\nsampler2D self_illumination_texture : register(ps_3_0, s1);\nstruct PixelMain_Input\n{\n    float2 texcoord : TEXCOORD;\n    float4 texcoord1 : TEXCOORD1;\n    float4 texcoord2 : TEXCOORD2;\n    float4 texcoord3 : TEXCOORD3;\n    float4 texcoord4 : TEXCOORD4;\n};\n\nfloat4 PixelMain(PixelMain_Input i) : COLOR\n{\n    float4 out_color;\n    float4 temp0, temp1, temp2, temp3, temp4, temp5;\n    // def c2, 1, -1, 0.73, -0.73\n    // def c3, 0.5, -1.5, 1.5, -0.5\n    // def c4, 0.2, 0.215448, 0.1, 0\n    // def c5, 0.25, 0.15, 0.5882353, 2.3529413\n    // dcl_texcoord v0.xy\n    // dcl_texcoord1 v1\n    // dcl_texcoord2 v2\n    // dcl_texcoord3 v3\n    // dcl_texcoord4 v4\n    // dcl_2d s0\n    // dcl_2d s1\n    // texld r0, v0, s0\n    temp0 = tex2D(diffuse_texture, i.texcoord.xy);\n    // texld r1, v0, s1\n    temp1 = tex2D(self_illumination_texture, i.texcoord.xy);\n    // rcp r2.x, c0.x\n    temp2.x = 1.0f / render_target_size.x;\n    // rcp r2.y, c0.y\n    temp2.y = 1.0f / render_target_size.y;\n    // mul r3, r2.xyxy, c1.z\n    temp3 = temp2.xyxy * ref_settings.z;\n    // mad r4, r3.zwzw, c3.xyzx, v0.xyxy\n    temp4 = temp3.zwzw * float4(0.5, -1.5, 1.5, 0.5) + i.texcoord.xyxy;\n    // mad r3, r3, c3.wzyw, v0.xyxy\n    temp3 = temp3 * float4(-0.5, 1.5, -1.5, -0.5) + i.texcoord.xyxy;\n    // texld r5, r4, s1\n    temp5 = tex2D(self_illumination_texture, temp4.xy);\n    // texld r4, r4.zwzw, s1\n    temp4 = tex2D(self_illumination_texture, temp4.zw);\n    // add r1, r1, r5\n    temp1 = temp1 + temp5;\n    // add r1, r4, r1\n    temp1 = temp4 + temp1;\n    // texld r4, r3, s1\n    temp4 = tex2D(self_illumination_texture, temp3.xy);\n    // texld r3, r3.zwzw, s1\n    temp3 = tex2D(self_illumination_texture, temp3.zw);\n    // add r1, r1, r4\n    temp1 = temp1 + temp4;\n    // add r1, r3, r1\n    temp1 = temp3 + temp1;\n    // mad r2.z, r1.w, c4.y, c4.z\n    temp2.z = temp1.w * float1(0.215448) + float1(0.1);\n    // mul r2.xy, r2.z, r2\n    temp2.xy = temp2.zz * temp2.xy;\n    // mov r2.z, c4.w\n    temp2.z = float1(0);\n    // add r3.xy, r2.xzzw, v1\n    temp3.xy = temp2.xz + i.texcoord1.xy;\n    // texld r3, r3, s0\n    temp3 = tex2D(diffuse_texture, temp3.xy);\n    // mul r3, r3, c5.x\n    temp3 = temp3 * float4(0.25, 0.25, 0.25, 0.25);\n    // mad r0, r0, c4.z, r3\n    temp0 = temp0 * float4(0.1, 0.1, 0.1, 0.1) + temp3;\n    // mov r2.w, -r2.x\n    temp2.w = -temp2.x;\n    // add r3.xy, r2.wzzw, v1.zwzw\n    temp3.xy = temp2.wz + i.texcoord1.zw;\n    // texld r3, r3, s0\n    temp3 = tex2D(diffuse_texture, temp3.xy);\n    // mad r0, r3, c5.x, r0\n    temp0 = temp3 * float4(0.25, 0.25, 0.25, 0.25) + temp0;\n    // add r3.xy, r2.zyzw, v2\n    temp3.xy = temp2.zy + i.texcoord2.xy;\n    // mad r2.zw, r2.xyzy, c2.xyxy, v2\n    temp2.zw = temp2.zy * float2(1, -1) + i.texcoord2.zw;\n    // texld r4, r2.zwzw, s0\n    temp4 = tex2D(diffuse_texture, temp2.zw);\n    // texld r3, r3, s0\n    temp3 = tex2D(diffuse_texture, temp3.xy);\n    // mad r0, r3, c5.x, r0\n    temp0 = temp3 * float4(0.25, 0.25, 0.25, 0.25) + temp0;\n    // mad r0, r4, c5.x, r0\n    temp0 = temp4 * float4(0.25, 0.25, 0.25, 0.25) + temp0;\n    // mad r3, r2.xyxy, c2.zzww, v3\n    temp3 = temp2.xyxy * float4(0.73, 0.73, -0.73, -0.73) + i.texcoord3;\n    // mad r2, r2.xyxy, c2.zwwz, v4\n    temp2 = temp2.xyxy * float4(0.73, -0.73, -0.73, 0.73) + i.texcoord4;\n    // texld r4, r3, s0\n    temp4 = tex2D(diffuse_texture, temp3.xy);\n    // texld r3, r3.zwzw, s0\n    temp3 = tex2D(diffuse_texture, temp3.zw);\n    // mad r0, r4, c5.y, r0\n    temp0 = temp4 * float4(0.15, 0.15, 0.15, 0.15) + temp0;\n    // mad r0, r3, c5.y, r0\n    temp0 = temp3 * float4(0.15, 0.15, 0.15, 0.15) + temp0;\n    // texld r3, r2, s0\n    temp3 = tex2D(diffuse_texture, temp2.xy);\n    // texld r2, r2.zwzw, s0\n    temp2 = tex2D(diffuse_texture, temp2.zw);\n    // mad r0, r3, c5.y, r0\n    temp0 = temp3 * float4(0.15, 0.15, 0.15, 0.15) + temp0;\n    // mad r0, r2, c5.y, r0\n    temp0 = temp2 * float4(0.15, 0.15, 0.15, 0.15) + temp0;\n    // mul r0.xyz, r0, c5.z\n    temp0.xyz = temp0.xyz * float3(0.5882353, 0.5882353, 0.5882353);\n    // mad r1.xyz, r1, c4.x, -r0\n    temp1.xyz = temp1.xyz * float3(0.2, 0.2, 0.2) + -temp0.xyz;\n    // mad oC0.xyz, c1.y, r1, r0\n    out_color.xyz = ref_settings.yyy * temp1.xyz + temp0.xyz;\n    // mul r0.x, r1.w, c4.x\n    temp0.x = temp1.w * float1(0.2);\n    // mad r0.x, r0.w, c5.w, r0.x\n    temp0.x = temp0.w * float1(2.3529413) + temp0.x;\n    // add oC0.w, -r0.x, c2.x\n    out_color.w = -temp0.x + float1(1);\n    // \n\n    return out_color;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."))}s.isMDXComponent=!0}}]);