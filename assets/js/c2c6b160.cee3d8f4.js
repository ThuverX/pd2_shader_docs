"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[52200],{603905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>s});var r=n(667294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function m(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?m(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):m(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},m=Object.keys(e);for(r=0;r<m.length;r++)n=m[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(e);for(r=0;r<m.length;r++)n=m[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var _=r.createContext({}),d=function(e){var t=r.useContext(_),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=d(e.components);return r.createElement(_.Provider,{value:t},e.children)},i="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},x=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,m=e.originalType,_=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),i=d(n),x=o,s=i["".concat(_,".").concat(x)]||i[x]||c[x]||m;return n?r.createElement(s,a(a({ref:t},l),{},{components:n})):r.createElement(s,a({ref:t},l))}));function s(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var m=n.length,a=new Array(m);a[0]=x;var p={};for(var _ in t)hasOwnProperty.call(t,_)&&(p[_]=t[_]);p.originalType=e,p[i]="string"==typeof e?e:o,a[1]=p;for(var d=2;d<m;d++)a[d]=n[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}x.displayName="MDXCreateElement"},465955:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>_,contentTitle:()=>a,default:()=>c,frontMatter:()=>m,metadata:()=>p,toc:()=>d});var r=n(487462),o=(n(667294),n(603905));const m={id:0x7a94fedf810f8c00,title:"Solid Mask Default Depth Scaling"},a="Solid Mask Default Depth Scaling",p={unversionedId:"Generated/Shaders/Base/[2300-2400]/8832965005076827000",id:"Generated/Shaders/Base/[2300-2400]/8832965005076827000",title:"Solid Mask Default Depth Scaling",description:"(solidmaskDEPTHSCALING, 0x7a94fedf810f8af9)",source:"@site/docs/Generated/Shaders/Base/[2300-2400]/0x7a94fedf810f8af9.mdx",sourceDirName:"Generated/Shaders/Base/[2300-2400]",slug:"/Generated/Shaders/Base/[2300-2400]/8832965005076827000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[2300-2400]/8832965005076827000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/Generated/Shaders/Base/[2300-2400]/0x7a94fedf810f8af9.mdx",tags:[],version:"current",frontMatter:{id:"8832965005076827000",title:"Solid Mask Default Depth Scaling"},sidebar:"docsSidebar",previous:{title:"Generic Shadow Caster Alpha Masked Cube Environment Mapping Diffuse Texture Opacity Texture Simple Tint",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[2300-2400]/8827945911948206000"},next:{title:"Opacity Default Cube Environment Mapping Cube Fresnel Diffuse Texture Normalmap Opacity Fade To Solid Vertex Color",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[2300-2400]/8838076182846986000"}},_={},d=[{value:"Technique <code>deferred_ambient_fps_depth</code>",id:"technique-deferred_ambient_fps_depth",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4},{value:"Technique <code>deferred_ambient_fps</code>",id:"technique-deferred_ambient_fps",level:3},{value:"Render States",id:"render-states-1",level:3},{value:"Sampler States",id:"sampler-states-1",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Sampler 1",id:"sampler-1",level:4},{value:"Sampler 2",id:"sampler-2",level:4},{value:"Sampler 3",id:"sampler-3",level:4},{value:"Shaders",id:"shaders-1",level:3},{value:"Vertex Shader",id:"vertex-shader-1",level:4},{value:"Pixel Shader",id:"pixel-shader-1",level:4}],l={toc:d},i="wrapper";function c(e){let{components:t,...n}=e;return(0,o.kt)(i,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"solid-mask-default-depth-scaling"},"Solid Mask Default Depth Scaling"),(0,o.kt)("p",null,"(",(0,o.kt)("inlineCode",{parentName:"p"},"solid_mask:default:DEPTH_SCALING"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"0x7a94fedf810f8af9"),")"),(0,o.kt)("p",null,"This template is referenced 1 time by ",(0,o.kt)("a",{parentName:"p",href:"/docs/Generated/Render%20Templates/base.render_template_database#solid-mask-depth-scaling"},"solid_mask:DEPTH_SCALING"),".\nThis template uses the following inputs:\n|Name|UI Name|Type|\n|---|---|---|\n|diffuse_texture|Diffuse|texture|\n|bump_normal_texture|Normalmap|texture|\n|reflection_texture|MATCAP Texture|texture|\n|material_texture|Pattern texture|texture|\n|tint_color_a|Tint Color A|vector3|\n|tint_color_b|Tint Color B|vector3|\n|material_amount|Material apply amount|scalar|."),(0,o.kt)("h3",{id:"technique-deferred_ambient_fps_depth"},"Technique ",(0,o.kt)("inlineCode",{parentName:"h3"},"deferred_ambient_fps_depth")),(0,o.kt)("h3",{id:"render-states"},"Render States"),(0,o.kt)("p",null,"More info can be found on the ",(0,o.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 8,\n    D3DRS_ZWRITEENABLE = 1,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 2,\n    D3DRS_COLORWRITEENABLE = 0,\n    D3DRS_COLORWRITEENABLE1 = 0,\n    D3DRS_COLORWRITEENABLE2 = 0,\n    D3DRS_STENCILENABLE = 1,\n    D3DRS_STENCILFUNC = 8,\n    D3DRS_STENCILFAIL = 3,\n    D3DRS_STENCILMASK = -1,\n    D3DRS_STENCILPASS = 3,\n    D3DRS_STENCILREF = 4,\n    D3DRS_STENCILWRITEMASK = 255,\n    D3DRS_STENCILZFAIL = 3,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,o.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,o.kt)("p",null,"More info can be found on the ",(0,o.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,o.kt)("h3",{id:"shaders"},"Shaders"),(0,o.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x4 proj_matrix : register(vs_3_0, c8);\ncolumn_major float4x4 view_matrix : register(vs_3_0, c4);\ncolumn_major float4x4 world_matrix : register(vs_3_0, c0);\nfloat4 VertexMain(float4 position : POSITION) : POSITION\n{\n    float4 out_position;\n    float4 temp0, temp1;\n    // dcl_position v0\n    // dcl_position o0\n    // dp4 r0.x, v0, c0\n    temp0.x = dot(position, (world_matrix._m00_m10_m20_m30));\n    // dp4 r0.y, v0, c1\n    temp0.y = dot(position, (world_matrix._m01_m11_m21_m31));\n    // dp4 r0.z, v0, c2\n    temp0.z = dot(position, (world_matrix._m02_m12_m22_m32));\n    // dp4 r0.w, v0, c3\n    temp0.w = dot(position, (world_matrix._m03_m13_m23_m33));\n    // dp4 r1.x, r0, c4\n    temp1.x = dot(temp0, (view_matrix._m00_m10_m20_m30));\n    // dp4 r1.y, r0, c5\n    temp1.y = dot(temp0, (view_matrix._m01_m11_m21_m31));\n    // dp4 r1.z, r0, c6\n    temp1.z = dot(temp0, (view_matrix._m02_m12_m22_m32));\n    // dp4 r1.w, r0, c7\n    temp1.w = dot(temp0, (view_matrix._m03_m13_m23_m33));\n    // dp4 o0.x, r1, c8\n    out_position.x = dot(temp1, (proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, r1, c9\n    out_position.y = dot(temp1, (proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.z, r1, c10\n    out_position.z = dot(temp1, (proj_matrix._m02_m12_m22_m32));\n    // dp4 o0.w, r1, c11\n    out_position.w = dot(temp1, (proj_matrix._m03_m13_m23_m33));\n    // \n\n    return out_position;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."),(0,o.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"struct PixelMain_Output\n{\n    float4 color : COLOR;\n    float4 color1 : COLOR1;\n    float4 color2 : COLOR2;\n};\n\nPixelMain_Output PixelMain()\n{\n    PixelMain_Output o;\n    // def c0, 1, 0, 0, 0\n    // mov oC0, c0.x\n    o.color = float4(1, 1, 1, 1);\n    // mov oC1, c0.x\n    o.color1 = float4(1, 1, 1, 1);\n    // mov oC2, c0.x\n    o.color2 = float4(1, 1, 1, 1);\n    // \n\n    return o;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."),(0,o.kt)("h3",{id:"technique-deferred_ambient_fps"},"Technique ",(0,o.kt)("inlineCode",{parentName:"h3"},"deferred_ambient_fps")),(0,o.kt)("h3",{id:"render-states-1"},"Render States"),(0,o.kt)("p",null,"More info can be found on the ",(0,o.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 1,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 2,\n    D3DRS_COLORWRITEENABLE = 15,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,o.kt)("h3",{id:"sampler-states-1"},"Sampler States"),(0,o.kt)("p",null,"More info can be found on the ",(0,o.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,o.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,o.kt)("h4",{id:"sampler-1"},"Sampler 1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,o.kt)("h4",{id:"sampler-2"},"Sampler 2"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,o.kt)("h4",{id:"sampler-3"},"Sampler 3"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,o.kt)("h3",{id:"shaders-1"},"Shaders"),(0,o.kt)("h4",{id:"vertex-shader-1"},"Vertex Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"float camera_near_range : register(vs_3_0, c12);\ncolumn_major float4x4 proj_matrix : register(vs_3_0, c8);\ncolumn_major float4x4 view_matrix : register(vs_3_0, c4);\ncolumn_major float4x4 world_matrix : register(vs_3_0, c0);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 normal : NORMAL;\n    float4 tangent : TANGENT;\n    float4 binormal : BINORMAL;\n    float4 texcoord : TEXCOORD;\n    float4 texcoord1 : TEXCOORD1;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float4 texcoord : TEXCOORD;\n    float4 texcoord2 : TEXCOORD2;\n    float4 texcoord1 : TEXCOORD1;\n    float2 texcoord3 : TEXCOORD3;\n    float3 texcoord4 : TEXCOORD4;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float4 temp0, temp1;\n    // def c13, 2, -1, 0, 0\n    // dcl_position v0\n    // dcl_normal v1\n    // dcl_tangent v2\n    // dcl_binormal v3\n    // dcl_texcoord v4\n    // dcl_texcoord1 v5\n    // dcl_position o0\n    // dcl_texcoord o1\n    // dcl_texcoord2 o2\n    // dcl_texcoord1 o3\n    // dcl_texcoord3 o4.xy\n    // dcl_texcoord4 o5.xyz\n    // dp4 r0.w, v0, c3\n    temp0.w = dot(i.position, (world_matrix._m03_m13_m23_m33));\n    // dp4 r0.x, v0, c0\n    temp0.x = dot(i.position, (world_matrix._m00_m10_m20_m30));\n    // dp4 r0.y, v0, c1\n    temp0.y = dot(i.position, (world_matrix._m01_m11_m21_m31));\n    // dp4 r0.z, v0, c2\n    temp0.z = dot(i.position, (world_matrix._m02_m12_m22_m32));\n    // dp4 r1.x, r0, c4\n    temp1.x = dot(temp0, (view_matrix._m00_m10_m20_m30));\n    // dp4 r1.y, r0, c5\n    temp1.y = dot(temp0, (view_matrix._m01_m11_m21_m31));\n    // dp4 r1.z, r0, c6\n    temp1.z = dot(temp0, (view_matrix._m02_m12_m22_m32));\n    // dp4 r1.w, r0, c7\n    temp1.w = dot(temp0, (view_matrix._m03_m13_m23_m33));\n    // mov o5.xyz, r0\n    o.texcoord4 = temp0;\n    // dp4 o0.x, r1, c8\n    o.position.x = dot(temp1, (proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, r1, c9\n    o.position.y = dot(temp1, (proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.w, r1, c11\n    o.position.w = dot(temp1, (proj_matrix._m03_m13_m23_m33));\n    // dp4 r0.x, r1, c10\n    temp0.x = dot(temp1, (proj_matrix._m02_m12_m22_m32));\n    // mad r0.yzw, v2.xxyz, c13.x, c13.y\n    temp0.yzw = i.tangent.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o3.x, r0.yzww, c0\n    o.texcoord1.x = dot(temp0.yzw, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o2.x, r0.yzww, c1\n    o.texcoord2.x = dot(temp0.yzw, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o1.z, r0.yzww, c2\n    o.texcoord.z = dot(temp0.yzw, (world_matrix._m02_m12_m22_m32).xyz);\n    // mad r0.yzw, v3.xxyz, c13.x, c13.y\n    temp0.yzw = i.binormal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o3.y, -r0.yzww, c0\n    o.texcoord1.y = dot(-temp0.yzw, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o2.y, -r0.yzww, c1\n    o.texcoord2.y = dot(-temp0.yzw, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o1.w, -r0.yzww, c2\n    o.texcoord.w = dot(-temp0.yzw, (world_matrix._m02_m12_m22_m32).xyz);\n    // mad r0.yzw, v1.xxyz, c13.x, c13.y\n    temp0.yzw = i.normal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o3.z, r0.yzww, c0\n    o.texcoord1.z = dot(temp0.yzw, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o2.z, r0.yzww, c1\n    o.texcoord2.z = dot(temp0.yzw, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o2.w, r0.yzww, c2\n    o.texcoord2.w = dot(temp0.yzw, (world_matrix._m02_m12_m22_m32).xyz);\n    // add o3.w, r0.x, c12.x\n    o.texcoord1.w = temp0.x + camera_near_range.x;\n    // mov o0.z, r0.x\n    o.position.z = temp0.x;\n    // mov o1.xy, v4\n    o.texcoord.xy = i.texcoord.xy;\n    // mov o4.xy, v5\n    o.texcoord3 = i.texcoord1;\n    // \n\n    return o;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."),(0,o.kt)("h4",{id:"pixel-shader-1"},"Pixel Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"sampler2D bump_normal_texture : register(ps_3_0, s1);\ncolumn_major float4x4 camera_world_matrix : register(ps_3_0, c0);\nsampler2D diffuse_texture : register(ps_3_0, s0);\nsampler2D material_texture : register(ps_3_0, s3);\nfloat ref_material_amount : register(ps_3_0, c5);\nfloat3 ref_tint_color_a : register(ps_3_0, c3);\nfloat3 ref_tint_color_b : register(ps_3_0, c4);\nsampler2D reflection_texture : register(ps_3_0, s2);\nstruct PixelMain_Input\n{\n    float4 texcoord : TEXCOORD;\n    float4 texcoord2 : TEXCOORD2;\n    float4 texcoord1 : TEXCOORD1;\n    float2 texcoord3 : TEXCOORD3;\n};\n\nstruct PixelMain_Output\n{\n    float4 color1 : COLOR1;\n    float4 color : COLOR;\n    float4 color2 : COLOR2;\n};\n\nPixelMain_Output PixelMain(PixelMain_Input i)\n{\n    PixelMain_Output o;\n    float4 temp0, temp1, temp3;\n    float3 temp2;\n    // def c6, -0.5, 1, 0.5, 6\n    // def c7, 1, -1, 0.5, 0\n    // dcl_texcoord v0\n    // dcl_texcoord2 v1\n    // dcl_texcoord1 v2\n    // dcl_texcoord3 v3.xy\n    // dcl_2d s0\n    // dcl_2d s1\n    // dcl_2d s2\n    // dcl_2d s3\n    // mov r0.xy, v0.zwzw\n    temp0.xy = i.texcoord.zw;\n    // mov r0.z, v1.w\n    temp0.z = i.texcoord2.w;\n    // texld_pp r1, v0, s1\n    temp1 = /* not implemented _pp modifier */ tex2D(bump_normal_texture, i.texcoord.xy);\n    // add_pp r1.xy, r1.wyzw, c6.x\n    temp1.xy = /* not implemented _pp modifier */ temp1.wy + float2(-0.5, -0.5);\n    // add_pp r1.xy, r1, r1\n    temp1.xy = /* not implemented _pp modifier */ temp1.xy + temp1.xy;\n    // mul_pp r0.w, r1.x, r1.x\n    temp0.w = /* not implemented _pp modifier */ temp1.x * temp1.x;\n    // mad_pp r0.w, r1.y, r1.y, -r0.w\n    temp0.w = /* not implemented _pp modifier */ temp1.y * temp1.y + -temp0.w;\n    // add_pp r0.w, -r0.w, c6.y\n    temp0.w = /* not implemented _pp modifier */ -temp0.w + float1(1);\n    // rsq_pp r0.w, r0.w\n    temp0.w = /* not implemented _pp modifier */ 1 / sqrt(temp0.w);\n    // rcp_pp r1.z, r0.w\n    temp1.z = /* not implemented _pp modifier */ 1.0f / temp0.w;\n    // dp3 r0.z, r1, r0\n    temp0.z = dot(temp1.xyz, temp0.xyz);\n    // dp3 r0.x, r1, v2\n    temp0.x = dot(temp1.xyz, i.texcoord1.xyz);\n    // dp3 r0.y, r1, v1\n    temp0.y = dot(temp1.xyz, i.texcoord2.xyz);\n    // nrm_pp r1.xyz, r0\n    temp1.xyz = /* not implemented _pp modifier */ normalize(temp0.xyz).xyz;\n    // mov r0.x, c0.y\n    temp0.x = (camera_world_matrix._m00_m10_m20_m30).y;\n    // mov r0.y, c1.y\n    temp0.y = (camera_world_matrix._m01_m11_m21_m31).y;\n    // mov r0.z, c2.y\n    temp0.z = (camera_world_matrix._m02_m12_m22_m32).y;\n    // dp3 r0.x, r0, r1\n    temp0.x = dot(temp0.xyz, temp1.xyz);\n    // mov r2.x, c0.z\n    temp2.x = (camera_world_matrix._m00_m10_m20_m30).z;\n    // mov r2.y, c1.z\n    temp2.y = (camera_world_matrix._m01_m11_m21_m31).z;\n    // mov r2.z, c2.z\n    temp2.z = (camera_world_matrix._m02_m12_m22_m32).z;\n    // dp3 r0.y, r2, r1\n    temp0.y = dot(temp2.xyz, temp1.xyz);\n    // mad_pp oC1.xyz, r1, c6.z, c6.z\n    o.color1.xyz = /* not implemented _pp modifier */ temp1.xyz * float3(0.5, 0.5, 0.5) + float3(0.5, 0.5, 0.5);\n    // add r0.xy, r0, c6.y\n    temp0.xy = temp0.xy + float2(1, 1);\n    // mul r0.xy, r0, c6.z\n    temp0.xy = temp0.xy * float2(0.5, 0.5);\n    // mad r0.xy, r0, c7, c7.zxzw\n    temp0.xy = temp0.xy * float2(1, -1) + float2(0.5, 1);\n    // mad r0.xy, v0, -c6.w, r0\n    temp0.xy = i.texcoord.xy * float2(-6, -6) + temp0.xy;\n    // mul r0.zw, c6.w, v0.xyxy\n    temp0.zw = float2(6, 6) * i.texcoord.xy;\n    // mad r0.xy, c5.x, r0, r0.zwzw\n    temp0.xy = ref_material_amount.xx * temp0.xy + temp0.zw;\n    // texld r0, r0, s2\n    temp0 = tex2D(reflection_texture, temp0.xy);\n    // texld r1, v0, s0\n    temp1 = tex2D(diffuse_texture, i.texcoord.xy);\n    // add r2.x, r1.y, r1.x\n    temp2.x = temp1.y + temp1.x;\n    // add r2.x, r1.z, r2.x\n    temp2.x = temp1.z + temp2.x;\n    // mul_sat r2.x, r2.x, c6.z\n    temp2.x = saturate(temp2.x * float1(0.5));\n    // rsq r2.x, r2.x\n    temp2.x = 1 / sqrt(temp2.x);\n    // rcp r2.x, r2.x\n    temp2.x = 1.0f / temp2.x;\n    // mad r0, r0, r2.x, -r1\n    temp0 = temp0 * temp2.x + -temp1;\n    // texld r3, v3, s3\n    temp3 = tex2D(material_texture, i.texcoord3.xy);\n    // mad r0, r3.z, r0, r1\n    temp0 = temp3.z * temp0 + temp1;\n    // mad r1.xyz, c4, r2.x, -r0\n    temp1.xyz = ref_tint_color_b.xyz * temp2.xxx + -temp0.xyz;\n    // mad r0.xyz, r3.y, r1, r0\n    temp0.xyz = temp3.yyy * temp1.xyz + temp0.xyz;\n    // mov oC1.w, r0.w\n    o.color1.w = temp0.w;\n    // mad r1.xyz, c3, r2.x, -r0\n    temp1.xyz = ref_tint_color_a.xyz * temp2.xxx + -temp0.xyz;\n    // mad oC0.xyz, r3.x, r1, r0\n    o.color.xyz = temp3.xxx * temp1.xyz + temp0.xyz;\n    // mov oC0.w, c6.z\n    o.color.w = float1(0.5);\n    // mov oC2, v2.w\n    o.color2 = i.texcoord1.w;\n    // \n\n    return o;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."))}c.isMDXComponent=!0}}]);