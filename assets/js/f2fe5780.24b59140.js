"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[6959],{3905:(e,t,r)=>{r.d(t,{Zo:()=>x,kt:()=>w});var n=r(7294);function p(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function m(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){p(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,p=function(e,t){if(null==e)return{};var r,n,p={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(p[r]=e[r]);return p}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(p[r]=e[r])}return p}var l=n.createContext({}),d=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):m(m({},t),e)),r},x=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",i={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,p=e.mdxType,a=e.originalType,l=e.parentName,x=o(e,["components","mdxType","originalType","parentName"]),c=d(r),s=p,w=c["".concat(l,".").concat(s)]||c[s]||i[s]||a;return r?n.createElement(w,m(m({ref:t},x),{},{components:r})):n.createElement(w,m({ref:t},x))}));function w(e,t){var r=arguments,p=t&&t.mdxType;if("string"==typeof e||p){var a=r.length,m=new Array(a);m[0]=s;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[c]="string"==typeof e?e:p,m[1]=o;for(var d=2;d<a;d++)m[d]=r[d];return n.createElement.apply(null,m)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},8613:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>m,default:()=>i,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var n=r(7462),p=(r(7294),r(3905));const a={id:0xa69939fbabd3d800,title:"Initial Luminance Default"},m="Initial Luminance Default",o={unversionedId:"Generated/Shaders/Filters/12004690034815130000",id:"Generated/Shaders/Filters/12004690034815130000",title:"Initial Luminance Default",description:"(initial_luminance:default, 0xa69939fbabd3d824)",source:"@site/docs/Generated/Shaders/Filters/0xa69939fbabd3d824.mdx",sourceDirName:"Generated/Shaders/Filters",slug:"/Generated/Shaders/Filters/12004690034815130000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Filters/12004690034815130000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/Generated/Shaders/Filters/0xa69939fbabd3d824.mdx",tags:[],version:"current",frontMatter:{id:"12004690034815130000",title:"Initial Luminance Default"},sidebar:"docsSidebar",previous:{title:"Exposure Default",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Filters/11948465529117270000"},next:{title:"Motion Blur Gather Default",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Filters/12513729351562619000"}},l={},d=[{value:"Technique <code>ambient</code>",id:"technique-ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],x={toc:d},c="wrapper";function i(e){let{components:t,...r}=e;return(0,p.kt)(c,(0,n.Z)({},x,r,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"initial-luminance-default"},"Initial Luminance Default"),(0,p.kt)("p",null,"(",(0,p.kt)("inlineCode",{parentName:"p"},"initial_luminance:default"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"0xa69939fbabd3d824"),")"),(0,p.kt)("p",null,"This template is referenced 1 time by ",(0,p.kt)("a",{parentName:"p",href:"/docs/Generated/Render%20Templates/filters.render_template_database#initial-luminance"},"initial_luminance"),"."),(0,p.kt)("h3",{id:"technique-ambient"},"Technique ",(0,p.kt)("inlineCode",{parentName:"h3"},"ambient")),(0,p.kt)("h3",{id:"render-states"},"Render States"),(0,p.kt)("p",null,"More info can be found on the ",(0,p.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 0,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 0,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 1,\n    D3DRS_COLORWRITEENABLE = 1,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,p.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,p.kt)("p",null,"More info can be found on the ",(0,p.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,p.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 1,\n    D3DSAMP_MINFILTER = 1,\n    D3DSAMP_MIPFILTER = 1,\n};\n")),(0,p.kt)("h3",{id:"shaders"},"Shaders"),(0,p.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x4 view_proj_matrix : register(vs_3_0, c0);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 texcoord : TEXCOORD;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float2 texcoord : TEXCOORD;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    // dcl_position v0\n    // dcl_texcoord v1\n    // dcl_position o0\n    // dcl_texcoord o1.xy\n    // dp4 o0.x, v0, c0\n    o.position.x = dot(i.position, (view_proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, v0, c1\n    o.position.y = dot(i.position, (view_proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.z, v0, c2\n    o.position.z = dot(i.position, (view_proj_matrix._m02_m12_m22_m32));\n    // dp4 o0.w, v0, c3\n    o.position.w = dot(i.position, (view_proj_matrix._m03_m13_m23_m33));\n    // mov o1.xy, v1\n    o.texcoord = i.texcoord;\n    // \n\n    return o;\n}\n")),(0,p.kt)("p",null,"Decompiled by DXDecompiler."),(0,p.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-hlsl"},"float3 ref_inv_dest_resolution : register(ps_3_0, c9);\nfloat3 ref_samples[9] : register(ps_3_0, c0);\nsampler2D ref_src_texture : register(ps_3_0, s0);\nfloat4 PixelMain(float2 texcoord : TEXCOORD) : COLOR\n{\n    float4 out_color;\n    float4 temp0, temp1;\n    // def c10, 0.5, 0.0001, 0.6931472, -9.2103405\n    // def c11, 0.11111111, 0, 0, 0\n    // dcl_texcoord v0.xy\n    // dcl_2d s0\n    // mov r0.xy, c9\n    temp0.xy = ref_inv_dest_resolution.xy;\n    // mad r0.zw, c0.xyxy, r0.xyxy, v0.xyxy\n    temp0.zw = ref_samples[0].xy * temp0.xy + texcoord.xy;\n    // texld r1, r0.zwzw, s0\n    temp1 = tex2D(ref_src_texture, temp0.zw);\n    // dp3 r0.z, r1, c10.x\n    temp0.z = dot(temp1.xyz, float3(0.5, 0.5, 0.5));\n    // log r0.w, r0.z\n    temp0.w = log2(temp0.z);\n    // add r0.z, -r0.z, c10.y\n    temp0.z = -temp0.z + float1(0.0001);\n    // mul r0.w, r0.w, c10.z\n    temp0.w = temp0.w * float1(0.6931472);\n    // cmp r0.z, r0.z, c10.w, r0.w\n    temp0.z = (temp0.z >= 0) ? float1(-9.2103405) : temp0.w;\n    // mad r1.xy, c1, r0, v0\n    temp1.xy = ref_samples[1].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // dp3 r0.w, r1, c10.x\n    temp0.w = dot(temp1.xyz, float3(0.5, 0.5, 0.5));\n    // log r1.x, r0.w\n    temp1.x = log2(temp0.w);\n    // add r0.w, -r0.w, c10.y\n    temp0.w = -temp0.w + float1(0.0001);\n    // mul r1.x, r1.x, c10.z\n    temp1.x = temp1.x * float1(0.6931472);\n    // cmp r0.w, r0.w, c10.w, r1.x\n    temp0.w = (temp0.w >= 0) ? float1(-9.2103405) : temp1.x;\n    // add r0.z, r0.w, r0.z\n    temp0.z = temp0.w + temp0.z;\n    // mad r1.xy, c2, r0, v0\n    temp1.xy = ref_samples[2].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // dp3 r0.w, r1, c10.x\n    temp0.w = dot(temp1.xyz, float3(0.5, 0.5, 0.5));\n    // log r1.x, r0.w\n    temp1.x = log2(temp0.w);\n    // add r0.w, -r0.w, c10.y\n    temp0.w = -temp0.w + float1(0.0001);\n    // mul r1.x, r1.x, c10.z\n    temp1.x = temp1.x * float1(0.6931472);\n    // cmp r0.w, r0.w, c10.w, r1.x\n    temp0.w = (temp0.w >= 0) ? float1(-9.2103405) : temp1.x;\n    // add r0.z, r0.w, r0.z\n    temp0.z = temp0.w + temp0.z;\n    // mad r1.xy, c3, r0, v0\n    temp1.xy = ref_samples[3].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // dp3 r0.w, r1, c10.x\n    temp0.w = dot(temp1.xyz, float3(0.5, 0.5, 0.5));\n    // log r1.x, r0.w\n    temp1.x = log2(temp0.w);\n    // add r0.w, -r0.w, c10.y\n    temp0.w = -temp0.w + float1(0.0001);\n    // mul r1.x, r1.x, c10.z\n    temp1.x = temp1.x * float1(0.6931472);\n    // cmp r0.w, r0.w, c10.w, r1.x\n    temp0.w = (temp0.w >= 0) ? float1(-9.2103405) : temp1.x;\n    // add r0.z, r0.w, r0.z\n    temp0.z = temp0.w + temp0.z;\n    // mad r1.xy, c4, r0, v0\n    temp1.xy = ref_samples[4].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // dp3 r0.w, r1, c10.x\n    temp0.w = dot(temp1.xyz, float3(0.5, 0.5, 0.5));\n    // log r1.x, r0.w\n    temp1.x = log2(temp0.w);\n    // add r0.w, -r0.w, c10.y\n    temp0.w = -temp0.w + float1(0.0001);\n    // mul r1.x, r1.x, c10.z\n    temp1.x = temp1.x * float1(0.6931472);\n    // cmp r0.w, r0.w, c10.w, r1.x\n    temp0.w = (temp0.w >= 0) ? float1(-9.2103405) : temp1.x;\n    // add r0.z, r0.w, r0.z\n    temp0.z = temp0.w + temp0.z;\n    // mad r1.xy, c5, r0, v0\n    temp1.xy = ref_samples[5].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // dp3 r0.w, r1, c10.x\n    temp0.w = dot(temp1.xyz, float3(0.5, 0.5, 0.5));\n    // log r1.x, r0.w\n    temp1.x = log2(temp0.w);\n    // add r0.w, -r0.w, c10.y\n    temp0.w = -temp0.w + float1(0.0001);\n    // mul r1.x, r1.x, c10.z\n    temp1.x = temp1.x * float1(0.6931472);\n    // cmp r0.w, r0.w, c10.w, r1.x\n    temp0.w = (temp0.w >= 0) ? float1(-9.2103405) : temp1.x;\n    // add r0.z, r0.w, r0.z\n    temp0.z = temp0.w + temp0.z;\n    // mad r1.xy, c6, r0, v0\n    temp1.xy = ref_samples[6].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // dp3 r0.w, r1, c10.x\n    temp0.w = dot(temp1.xyz, float3(0.5, 0.5, 0.5));\n    // log r1.x, r0.w\n    temp1.x = log2(temp0.w);\n    // add r0.w, -r0.w, c10.y\n    temp0.w = -temp0.w + float1(0.0001);\n    // mul r1.x, r1.x, c10.z\n    temp1.x = temp1.x * float1(0.6931472);\n    // cmp r0.w, r0.w, c10.w, r1.x\n    temp0.w = (temp0.w >= 0) ? float1(-9.2103405) : temp1.x;\n    // add r0.z, r0.w, r0.z\n    temp0.z = temp0.w + temp0.z;\n    // mad r1.xy, c7, r0, v0\n    temp1.xy = ref_samples[7].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // dp3 r0.w, r1, c10.x\n    temp0.w = dot(temp1.xyz, float3(0.5, 0.5, 0.5));\n    // log r1.x, r0.w\n    temp1.x = log2(temp0.w);\n    // add r0.w, -r0.w, c10.y\n    temp0.w = -temp0.w + float1(0.0001);\n    // mul r1.x, r1.x, c10.z\n    temp1.x = temp1.x * float1(0.6931472);\n    // cmp r0.w, r0.w, c10.w, r1.x\n    temp0.w = (temp0.w >= 0) ? float1(-9.2103405) : temp1.x;\n    // add r0.z, r0.w, r0.z\n    temp0.z = temp0.w + temp0.z;\n    // mad r0.xy, c8, r0, v0\n    temp0.xy = ref_samples[8].xy * temp0.xy + texcoord.xy;\n    // texld r1, r0, s0\n    temp1 = tex2D(ref_src_texture, temp0.xy);\n    // dp3 r0.x, r1, c10.x\n    temp0.x = dot(temp1.xyz, float3(0.5, 0.5, 0.5));\n    // log r0.y, r0.x\n    temp0.y = log2(temp0.x);\n    // add r0.x, -r0.x, c10.y\n    temp0.x = -temp0.x + float1(0.0001);\n    // mul r0.y, r0.y, c10.z\n    temp0.y = temp0.y * float1(0.6931472);\n    // cmp r0.x, r0.x, c10.w, r0.y\n    temp0.x = (temp0.x >= 0) ? float1(-9.2103405) : temp0.y;\n    // add r0.x, r0.x, r0.z\n    temp0.x = temp0.x + temp0.z;\n    // mul oC0, r0.x, c11.x\n    out_color = temp0.x * float4(0.11111111, 0.11111111, 0.11111111, 0.11111111);\n    // \n\n    return out_color;\n}\n")),(0,p.kt)("p",null,"Decompiled by DXDecompiler."))}i.isMDXComponent=!0}}]);