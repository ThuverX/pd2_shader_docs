"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[5811],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>y});var n=r(7294);function p(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function m(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){p(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function x(e,t){if(null==e)return{};var r,n,p=function(e,t){if(null==e)return{};var r,n,p={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(p[r]=e[r]);return p}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(p[r]=e[r])}return p}var o=n.createContext({}),d=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):m(m({},t),e)),r},s=function(e){var t=d(e.components);return n.createElement(o.Provider,{value:t},e.children)},c="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},i=n.forwardRef((function(e,t){var r=e.components,p=e.mdxType,a=e.originalType,o=e.parentName,s=x(e,["components","mdxType","originalType","parentName"]),c=d(r),i=p,y=c["".concat(o,".").concat(i)]||c[i]||l[i]||a;return r?n.createElement(y,m(m({ref:t},s),{},{components:r})):n.createElement(y,m({ref:t},s))}));function y(e,t){var r=arguments,p=t&&t.mdxType;if("string"==typeof e||p){var a=r.length,m=new Array(a);m[0]=i;var x={};for(var o in t)hasOwnProperty.call(t,o)&&(x[o]=t[o]);x.originalType=e,x[c]="string"==typeof e?e:p,m[1]=x;for(var d=2;d<a;d++)m[d]=r[d];return n.createElement.apply(null,m)}return n.createElement.apply(null,r)}i.displayName="MDXCreateElement"},1508:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>m,default:()=>l,frontMatter:()=>a,metadata:()=>x,toc:()=>d});var n=r(7462),p=(r(7294),r(3905));const a={id:0x435516c64f19e000,title:"Scene Luminance Default"},m="Scene Luminance Default",x={unversionedId:"Generated/Shaders/Filters/4851809214548009000",id:"Generated/Shaders/Filters/4851809214548009000",title:"Scene Luminance Default",description:"(scene_luminance:default, 0x435516c64f19df83)",source:"@site/docs/Generated/Shaders/Filters/0x435516c64f19df83.mdx",sourceDirName:"Generated/Shaders/Filters",slug:"/Generated/Shaders/Filters/4851809214548009000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Filters/4851809214548009000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/Generated/Shaders/Filters/0x435516c64f19df83.mdx",tags:[],version:"current",frontMatter:{id:"4851809214548009000",title:"Scene Luminance Default"},sidebar:"docsSidebar",previous:{title:"Depth Patch Skydome Default",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Filters/4427126847890672600"},next:{title:"Grayscale Default Vertex Color",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Filters/4992161156828236000"}},o={},d=[{value:"Technique <code>ambient</code>",id:"technique-ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],s={toc:d},c="wrapper";function l(e){let{components:t,...r}=e;return(0,p.kt)(c,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"scene-luminance-default"},"Scene Luminance Default"),(0,p.kt)("p",null,"(",(0,p.kt)("inlineCode",{parentName:"p"},"scene_luminance:default"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"0x435516c64f19df83"),")"),(0,p.kt)("p",null,"This template is referenced 1 time by ",(0,p.kt)("a",{parentName:"p",href:"/docs/Generated/Render%20Templates/filters.render_template_database#scene-luminance"},"scene_luminance"),"."),(0,p.kt)("h3",{id:"technique-ambient"},"Technique ",(0,p.kt)("inlineCode",{parentName:"h3"},"ambient")),(0,p.kt)("h3",{id:"render-states"},"Render States"),(0,p.kt)("p",null,"More info can be found on the ",(0,p.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 0,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 0,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 1,\n    D3DRS_COLORWRITEENABLE = 1,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,p.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,p.kt)("p",null,"More info can be found on the ",(0,p.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,p.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 1,\n    D3DSAMP_MINFILTER = 1,\n    D3DSAMP_MIPFILTER = 1,\n};\n")),(0,p.kt)("h3",{id:"shaders"},"Shaders"),(0,p.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x4 view_proj_matrix : register(vs_3_0, c0);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 texcoord : TEXCOORD;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float2 texcoord : TEXCOORD;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    // dcl_position v0\n    // dcl_texcoord v1\n    // dcl_position o0\n    // dcl_texcoord o1.xy\n    // dp4 o0.x, v0, c0\n    o.position.x = dot(i.position, (view_proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, v0, c1\n    o.position.y = dot(i.position, (view_proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.z, v0, c2\n    o.position.z = dot(i.position, (view_proj_matrix._m02_m12_m22_m32));\n    // dp4 o0.w, v0, c3\n    o.position.w = dot(i.position, (view_proj_matrix._m03_m13_m23_m33));\n    // mov o1.xy, v1\n    o.texcoord = i.texcoord;\n    // \n\n    return o;\n}\n")),(0,p.kt)("p",null,"Decompiled by DXDecompiler."),(0,p.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-hlsl"},"float3 ref_inv_dest_resolution : register(ps_3_0, c16);\nfloat3 ref_samples[16] : register(ps_3_0, c0);\nsampler2D ref_src_texture : register(ps_3_0, s0);\nfloat4 PixelMain(float2 texcoord : TEXCOORD) : COLOR\n{\n    float4 out_color;\n    float4 temp0, temp1, temp2;\n    // def c17, 0.09016844, -0.064, 0.164, 0.3\n    // def c18, 2.8625, 0, 0, 0\n    // dcl_texcoord v0.xy\n    // dcl_2d s0\n    // mov r0.xy, c16\n    temp0.xy = ref_inv_dest_resolution.xy;\n    // mad r0.zw, c0.xyxy, r0.xyxy, v0.xyxy\n    temp0.zw = ref_samples[0].xy * temp0.xy + texcoord.xy;\n    // texld r1, r0.zwzw, s0\n    temp1 = tex2D(ref_src_texture, temp0.zw);\n    // mad r0.zw, c1.xyxy, r0.xyxy, v0.xyxy\n    temp0.zw = ref_samples[1].xy * temp0.xy + texcoord.xy;\n    // texld r2, r0.zwzw, s0\n    temp2 = tex2D(ref_src_texture, temp0.zw);\n    // add r0.z, r1.x, r2.x\n    temp0.z = temp1.x + temp2.x;\n    // mad r1.xy, c2, r0, v0\n    temp1.xy = ref_samples[2].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // add r0.z, r0.z, r1.x\n    temp0.z = temp0.z + temp1.x;\n    // mad r1.xy, c3, r0, v0\n    temp1.xy = ref_samples[3].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // add r0.z, r0.z, r1.x\n    temp0.z = temp0.z + temp1.x;\n    // mad r1.xy, c4, r0, v0\n    temp1.xy = ref_samples[4].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // add r0.z, r0.z, r1.x\n    temp0.z = temp0.z + temp1.x;\n    // mad r1.xy, c5, r0, v0\n    temp1.xy = ref_samples[5].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // add r0.z, r0.z, r1.x\n    temp0.z = temp0.z + temp1.x;\n    // mad r1.xy, c6, r0, v0\n    temp1.xy = ref_samples[6].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // add r0.z, r0.z, r1.x\n    temp0.z = temp0.z + temp1.x;\n    // mad r1.xy, c7, r0, v0\n    temp1.xy = ref_samples[7].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // add r0.z, r0.z, r1.x\n    temp0.z = temp0.z + temp1.x;\n    // mad r1.xy, c8, r0, v0\n    temp1.xy = ref_samples[8].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // add r0.z, r0.z, r1.x\n    temp0.z = temp0.z + temp1.x;\n    // mad r1.xy, c9, r0, v0\n    temp1.xy = ref_samples[9].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // add r0.z, r0.z, r1.x\n    temp0.z = temp0.z + temp1.x;\n    // mad r1.xy, c10, r0, v0\n    temp1.xy = ref_samples[10].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // add r0.z, r0.z, r1.x\n    temp0.z = temp0.z + temp1.x;\n    // mad r1.xy, c11, r0, v0\n    temp1.xy = ref_samples[11].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // add r0.z, r0.z, r1.x\n    temp0.z = temp0.z + temp1.x;\n    // mad r1.xy, c12, r0, v0\n    temp1.xy = ref_samples[12].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // add r0.z, r0.z, r1.x\n    temp0.z = temp0.z + temp1.x;\n    // mad r1.xy, c13, r0, v0\n    temp1.xy = ref_samples[13].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // add r0.z, r0.z, r1.x\n    temp0.z = temp0.z + temp1.x;\n    // mad r1.xy, c14, r0, v0\n    temp1.xy = ref_samples[14].xy * temp0.xy + texcoord.xy;\n    // texld r1, r1, s0\n    temp1 = tex2D(ref_src_texture, temp1.xy);\n    // add r0.z, r0.z, r1.x\n    temp0.z = temp0.z + temp1.x;\n    // mad r0.xy, c15, r0, v0\n    temp0.xy = ref_samples[15].xy * temp0.xy + texcoord.xy;\n    // texld r1, r0, s0\n    temp1 = tex2D(ref_src_texture, temp0.xy);\n    // add r0.x, r0.z, r1.x\n    temp0.x = temp0.z + temp1.x;\n    // mul r0.x, r0.x, c17.x\n    temp0.x = temp0.x * float1(0.09016844);\n    // exp r0.x, r0.x\n    temp0.x = exp2(temp0.x);\n    // rcp r0.y, r0.x\n    temp0.y = 1.0f / temp0.x;\n    // add r0.x, r0.x, c17.y\n    temp0.x = temp0.x + float1(-0.064);\n    // mad r0.y, r0.y, c17.z, c17.w\n    temp0.y = temp0.y * float1(0.164) + float1(0.3);\n    // cmp oC0, r0.x, r0.y, c18.x\n    out_color = (temp0.x >= 0) ? temp0.y : float4(2.8625, 2.8625, 2.8625, 2.8625);\n    // \n\n    return out_color;\n}\n")),(0,p.kt)("p",null,"Decompiled by DXDecompiler."))}l.isMDXComponent=!0}}]);