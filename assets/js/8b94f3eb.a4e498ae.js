"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[77873],{3905:(e,t,n)=>{n.d(t,{Zo:()=>_,kt:()=>s});var r=n(67294);function m(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){m(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,r,m=function(e,t){if(null==e)return{};var n,r,m={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(m[n]=e[n]);return m}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(m[n]=e[n])}return m}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},_=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},l="mdxType",x={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,m=e.mdxType,a=e.originalType,i=e.parentName,_=d(e,["components","mdxType","originalType","parentName"]),l=p(n),c=m,s=l["".concat(i,".").concat(c)]||l[c]||x[c]||a;return n?r.createElement(s,o(o({ref:t},_),{},{components:n})):r.createElement(s,o({ref:t},_))}));function s(e,t){var n=arguments,m=t&&t.mdxType;if("string"==typeof e||m){var a=n.length,o=new Array(a);o[0]=c;var d={};for(var i in t)hasOwnProperty.call(t,i)&&(d[i]=t[i]);d.originalType=e,d[l]="string"==typeof e?e:m,o[1]=d;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},21459:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>x,frontMatter:()=>a,metadata:()=>d,toc:()=>p});var r=n(87462),m=(n(67294),n(3905));const a={id:0x53196964ec5cbc00,title:"Generic Shadow Caster Diffuse Texture Double Sided Normalmap Nvidia Skinned 3weights Vegetation Bending"},o="Generic Shadow Caster Diffuse Texture Double Sided Normalmap Nvidia Skinned 3weights Vegetation Bending",d={unversionedId:"Generated/Shaders/Base/[1500-1600]/5987933061748932000",id:"Generated/Shaders/Base/[1500-1600]/5987933061748932000",title:"Generic Shadow Caster Diffuse Texture Double Sided Normalmap Nvidia Skinned 3weights Vegetation Bending",description:"(genericDIFFUSETEXTURENORMALMAPSKINNED3WEIGHTS:VEGETATION_BENDING, 0x53196964ec5cbaee)",source:"@site/docs/Generated/Shaders/Base/[1500-1600]/0x53196964ec5cbaee.mdx",sourceDirName:"Generated/Shaders/Base/[1500-1600]",slug:"/Generated/Shaders/Base/[1500-1600]/5987933061748932000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[1500-1600]/5987933061748932000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/docs/Generated/Shaders/Base/[1500-1600]/0x53196964ec5cbaee.mdx",tags:[],version:"current",frontMatter:{id:"5987933061748932000",title:"Generic Shadow Caster Diffuse Texture Double Sided Normalmap Nvidia Skinned 3weights Vegetation Bending"},sidebar:"docsSidebar",previous:{title:"Generic Default Cube Environment Mapping Diffuse Texture Gsma Texture Normalmap Vertex Color Vertex Color Alpha",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[1500-1600]/5985027830689453000"},next:{title:"Generic Shadow Caster Depth Scaling Diffuse Texture Normalmap Skinned 3weights Vertex Color Vertex Color Alpha Vertex Color Character",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[1500-1600]/5990155742525463000"}},i={},p=[{value:"Technique <code>ambient</code>",id:"technique-ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],_={toc:p},l="wrapper";function x(e){let{components:t,...n}=e;return(0,m.kt)(l,(0,r.Z)({},_,n,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("h1",{id:"generic-shadow-caster-diffuse-texture-double-sided-normalmap-nvidia-skinned-3weights-vegetation-bending"},"Generic Shadow Caster Diffuse Texture Double Sided Normalmap Nvidia Skinned 3weights Vegetation Bending"),(0,m.kt)("p",null,"(",(0,m.kt)("inlineCode",{parentName:"p"},"generic:shadow_caster:DIFFUSE_TEXTURE:DOUBLE_SIDED:NORMALMAP:NVIDIA:SKINNED_3WEIGHTS:VEGETATION_BENDING"),", ",(0,m.kt)("inlineCode",{parentName:"p"},"0x53196964ec5cbaee"),")"),(0,m.kt)("h3",{id:"technique-ambient"},"Technique ",(0,m.kt)("inlineCode",{parentName:"h3"},"ambient")),(0,m.kt)("h3",{id:"render-states"},"Render States"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 1,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 1,\n    D3DRS_COLORWRITEENABLE = 0,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 961656599,\n    D3DRS_SLOPESCALEDEPTHBIAS = 1075838976,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,m.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,m.kt)("h3",{id:"shaders"},"Shaders"),(0,m.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x3 bones[54] : register(vs_3_0, c0);\ncolumn_major float4x4 proj_matrix : register(vs_3_0, c170);\nfloat3 ref_branch_settings : register(vs_3_0, c177);\nfloat3 ref_detail_settings : register(vs_3_0, c176);\nfloat ref_speed : register(vs_3_0, c175);\nfloat ref_time : register(vs_3_0, c174);\ncolumn_major float4x4 view_matrix : register(vs_3_0, c166);\ncolumn_major float4x4 world_matrix : register(vs_3_0, c162);\nstruct VertexMain_Input\n{\n    float4 blendweight : BLENDWEIGHT;\n    float4 blendindices : BLENDINDICES;\n    float4 position : POSITION;\n    float4 normal : NORMAL;\n    float4 color : COLOR;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float texcoord1 : TEXCOORD1;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float4 temp0, temp1, temp2;\n    float3 addr0, temp3;\n    // def c178, 3, 1, 2, -1\n    // def c179, 1.975, 0.793, 0.375, 0.193\n    // def c180, 2, -0.5, 0, 0\n    // dcl_blendweight v0\n    // dcl_blendindices v1\n    // dcl_position v2\n    // dcl_normal v3\n    // dcl_color v4\n    // dcl_position o0\n    // dcl_texcoord1 o1.x\n    // mov r0.x, c162.w\n    temp0.x = (world_matrix._m00_m10_m20_m30).w;\n    // mov r0.y, c163.w\n    temp0.y = (world_matrix._m01_m11_m21_m31).w;\n    // mov r0.z, c164.w\n    temp0.z = (world_matrix._m02_m12_m22_m32).w;\n    // dp3 r0.x, r0, c178.y\n    temp0.x = dot(temp0.xyz, float3(1, 1, 1));\n    // add r0.x, r0.x, v4.y\n    temp0.x = temp0.x + i.color.y;\n    // add r0.x, r0.x, c174.x\n    temp0.x = temp0.x + ref_time.x;\n    // mul r0.zw, r0.x, c177.y\n    temp0.zw = temp0.x * ref_branch_settings.y;\n    // add r1.x, c174.x, v4.y\n    temp1.x = ref_time.x + i.color.y;\n    // mul r0.xy, r1.x, c176.y\n    temp0.xy = temp1.x * ref_detail_settings.y;\n    // mul r0, r0, c175.x\n    temp0 = temp0 * ref_speed.x;\n    // mul r0, r0, c179\n    temp0 = temp0 * float4(1.975, 0.793, 0.375, 0.193);\n    // frc r0, r0\n    temp0 = frac(temp0);\n    // mad r0, r0, c180.x, c180.y\n    temp0 = temp0 * float4(2, 2, 2, 2) + float4(-0.5, -0.5, -0.5, -0.5);\n    // frc r0, r0\n    temp0 = frac(temp0);\n    // mad r0, r0, c178.z, c178.w\n    temp0 = temp0 * float4(2, 2, 2, 2) + float4(-1, -1, -1, -1);\n    // mul r1, r0_abs, r0_abs\n    temp1 = abs(temp0) * abs(temp0);\n    // mad r0, r0_abs, -c178.z, c178.x\n    temp0 = abs(temp0) * float4(-2, -2, -2, -2) + float4(3, 3, 3, 3);\n    // mul r0, r0, r1\n    temp0 = temp0 * temp1;\n    // add r0.xyz, r0.yyww, r0.xxzw\n    temp0.xyz = temp0.yyw + temp0.xxz;\n    // mul r0.w, v4.z, v4.x\n    temp0.w = i.color.z * i.color.x;\n    // mul r0.w, r0.w, c176.x\n    temp0.w = temp0.w * ref_detail_settings.x;\n    // mul r1.xyz, c178.x, v1\n    temp1.xyz = float3(3, 3, 3) * i.blendindices.xyz;\n    // mova a0.xyz, r1.yxzw\n    addr0.xyz = temp1.yxz;\n    // mad r2.xyz, v3, c178.z, c178.w\n    temp2.xyz = i.normal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 r3.x, r2, c0[a0.x]\n    temp3.x = dot(temp2.xyz, (bones[0 + (addr0.x / 3)]._m00_m10_m20_m30).xyz);\n    // dp3 r3.y, r2, c1[a0.x]\n    temp3.y = dot(temp2.xyz, (bones[0 + (addr0.x / 3)]._m01_m11_m21_m31).xyz);\n    // dp3 r3.z, r2, c2[a0.x]\n    temp3.z = dot(temp2.xyz, (bones[0 + (addr0.x / 3)]._m02_m12_m22_m32).xyz);\n    // mul r3.xyz, r3, v0.y\n    temp3.xyz = temp3.xyz * i.blendweight.yyy;\n    // dp3 r1.x, r2, c0[a0.y]\n    temp1.x = dot(temp2.xyz, (bones[0 + (addr0.y / 3)]._m00_m10_m20_m30).xyz);\n    // dp3 r1.y, r2, c1[a0.y]\n    temp1.y = dot(temp2.xyz, (bones[0 + (addr0.y / 3)]._m01_m11_m21_m31).xyz);\n    // dp3 r1.z, r2, c2[a0.y]\n    temp1.z = dot(temp2.xyz, (bones[0 + (addr0.y / 3)]._m02_m12_m22_m32).xyz);\n    // mad r1.xyz, v0.x, r1, r3\n    temp1.xyz = i.blendweight.xxx * temp1.xyz + temp3.xyz;\n    // dp3 r3.x, r2, c0[a0.z]\n    temp3.x = dot(temp2.xyz, (bones[0 + (addr0.z / 3)]._m00_m10_m20_m30).xyz);\n    // dp3 r3.y, r2, c1[a0.z]\n    temp3.y = dot(temp2.xyz, (bones[0 + (addr0.z / 3)]._m01_m11_m21_m31).xyz);\n    // dp3 r3.z, r2, c2[a0.z]\n    temp3.z = dot(temp2.xyz, (bones[0 + (addr0.z / 3)]._m02_m12_m22_m32).xyz);\n    // mad r1.xyz, v0.z, r3, r1\n    temp1.xyz = i.blendweight.zzz * temp3.xyz + temp1.xyz;\n    // nrm r2.xyz, r1\n    temp2.xyz = normalize(temp1.xyz).xyz;\n    // dp3 r1.x, r2, c162\n    temp1.x = dot(temp2.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 r1.y, r2, c163\n    temp1.y = dot(temp2.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // mul r1.xy, r0.w, r1\n    temp1.xy = temp0.ww * temp1.xy;\n    // mul r1.z, c177.x, v4.z\n    temp1.z = ref_branch_settings.x * i.color.z;\n    // dp4 r2.x, v2, c0[a0.x]\n    temp2.x = dot(i.position, (bones[0 + (addr0.x / 3)]._m00_m10_m20_m30));\n    // dp4 r2.y, v2, c1[a0.x]\n    temp2.y = dot(i.position, (bones[0 + (addr0.x / 3)]._m01_m11_m21_m31));\n    // dp4 r2.z, v2, c2[a0.x]\n    temp2.z = dot(i.position, (bones[0 + (addr0.x / 3)]._m02_m12_m22_m32));\n    // mul r2.xyz, r2, v0.y\n    temp2.xyz = temp2.xyz * i.blendweight.yyy;\n    // dp4 r3.x, v2, c0[a0.y]\n    temp3.x = dot(i.position, (bones[0 + (addr0.y / 3)]._m00_m10_m20_m30));\n    // dp4 r3.y, v2, c1[a0.y]\n    temp3.y = dot(i.position, (bones[0 + (addr0.y / 3)]._m01_m11_m21_m31));\n    // dp4 r3.z, v2, c2[a0.y]\n    temp3.z = dot(i.position, (bones[0 + (addr0.y / 3)]._m02_m12_m22_m32));\n    // mad r2.xyz, v0.x, r3, r2\n    temp2.xyz = i.blendweight.xxx * temp3.xyz + temp2.xyz;\n    // dp4 r3.x, v2, c0[a0.z]\n    temp3.x = dot(i.position, (bones[0 + (addr0.z / 3)]._m00_m10_m20_m30));\n    // dp4 r3.y, v2, c1[a0.z]\n    temp3.y = dot(i.position, (bones[0 + (addr0.z / 3)]._m01_m11_m21_m31));\n    // dp4 r3.z, v2, c2[a0.z]\n    temp3.z = dot(i.position, (bones[0 + (addr0.z / 3)]._m02_m12_m22_m32));\n    // mad r2.xyz, v0.z, r3, r2\n    temp2.xyz = i.blendweight.zzz * temp3.xyz + temp2.xyz;\n    // mov r2.w, c178.y\n    temp2.w = float1(1);\n    // dp4 r3.x, r2, c162\n    temp3.x = dot(temp2, (world_matrix._m00_m10_m20_m30));\n    // dp4 r3.y, r2, c163\n    temp3.y = dot(temp2, (world_matrix._m01_m11_m21_m31));\n    // dp4 r3.z, r2, c164\n    temp3.z = dot(temp2, (world_matrix._m02_m12_m22_m32));\n    // dp4 r2.w, r2, c165\n    temp2.w = dot(temp2, (world_matrix._m03_m13_m23_m33));\n    // mad r2.xyz, r0, r1, r3\n    temp2.xyz = temp0.xyz * temp1.xyz + temp3.xyz;\n    // dp4 r0.x, r2, c166\n    temp0.x = dot(temp2, (view_matrix._m00_m10_m20_m30));\n    // dp4 r0.y, r2, c167\n    temp0.y = dot(temp2, (view_matrix._m01_m11_m21_m31));\n    // dp4 r0.z, r2, c168\n    temp0.z = dot(temp2, (view_matrix._m02_m12_m22_m32));\n    // dp4 r0.w, r2, c169\n    temp0.w = dot(temp2, (view_matrix._m03_m13_m23_m33));\n    // dp4 o0.x, r0, c170\n    o.position.x = dot(temp0, (proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, r0, c171\n    o.position.y = dot(temp0, (proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.w, r0, c173\n    o.position.w = dot(temp0, (proj_matrix._m03_m13_m23_m33));\n    // dp4 r0.x, r0, c172\n    temp0.x = dot(temp0, (proj_matrix._m02_m12_m22_m32));\n    // mov o0.z, r0.x\n    o.position.z = temp0.x;\n    // mov o1.x, r0.x\n    o.texcoord1 = temp0.x;\n    // \n\n    return o;\n}\n")),(0,m.kt)("p",null,"Decompiled by DXDecompiler."),(0,m.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-hlsl"},"float4 PixelMain(float texcoord1 : TEXCOORD1) : COLOR\n{\n    float4 out_color;\n    // def c0, 1, 0, 0, 0\n    // dcl_texcoord1 v0.x\n    // mul oC0, c0.xyyy, v0.x\n    out_color = float4(1, 0, 0, 0) * texcoord1.x;\n    // \n\n    return out_color;\n}\n")),(0,m.kt)("p",null,"Decompiled by DXDecompiler."))}x.isMDXComponent=!0}}]);