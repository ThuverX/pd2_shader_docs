"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[51859],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>s});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function m(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=n.createContext({}),i=function(e){var r=n.useContext(d),t=r;return e&&(t="function"==typeof e?e(r):m(m({},r),e)),t},p=function(e){var r=i(e.components);return n.createElement(d.Provider,{value:r},e.children)},x="mdxType",_={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},c=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),x=i(t),c=o,s=x["".concat(d,".").concat(c)]||x[c]||_[c]||a;return t?n.createElement(s,m(m({ref:r},p),{},{components:t})):n.createElement(s,m({ref:r},p))}));function s(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,m=new Array(a);m[0]=c;var l={};for(var d in r)hasOwnProperty.call(r,d)&&(l[d]=r[d]);l.originalType=e,l[x]="string"==typeof e?e:o,m[1]=l;for(var i=2;i<a;i++)m[i]=t[i];return n.createElement.apply(null,m)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},22489:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>m,default:()=>_,frontMatter:()=>a,metadata:()=>l,toc:()=>i});var n=t(87462),o=(t(67294),t(3905));const a={id:0x632dd8ceff581800,title:"Generic Default Axis Aligned Billboard Billboard Center Offset Billboard Up Axis Diffuse Texture Double Sided"},m="Generic Default Axis Aligned Billboard Billboard Center Offset Billboard Up Axis Diffuse Texture Double Sided",l={unversionedId:"Generated/Shaders/Base/[1800-1900]/7146606567265671000",id:"Generated/Shaders/Base/[1800-1900]/7146606567265671000",title:"Generic Default Axis Aligned Billboard Billboard Center Offset Billboard Up Axis Diffuse Texture Double Sided",description:"(genericAXISALIGNEDBILLBOARDBILLBOARDUPAXISDOUBLESIDED, 0x632dd8ceff58185a)",source:"@site/docs/Generated/Shaders/Base/[1800-1900]/0x632dd8ceff58185a.mdx",sourceDirName:"Generated/Shaders/Base/[1800-1900]",slug:"/Generated/Shaders/Base/[1800-1900]/7146606567265671000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[1800-1900]/7146606567265671000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/docs/Generated/Shaders/Base/[1800-1900]/0x632dd8ceff58185a.mdx",tags:[],version:"current",frontMatter:{id:"7146606567265671000",title:"Generic Default Axis Aligned Billboard Billboard Center Offset Billboard Up Axis Diffuse Texture Double Sided"},sidebar:"docsSidebar",previous:{title:"Generic Shadow Caster Alpha Masked Diffuse Texture Double Sided Normalmap Nvidia Opacity Texture Rl Environment",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[1800-1900]/7140427216540386000"},next:{title:"Generic Default Blend Diffuse Blend Gsma Blend Mask Control Cube Environment Mapping Diffuse Texture Gloss Control Value Normalmap Vertex Color",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[1800-1900]/7149268112717058000"}},d={},i=[{value:"Technique <code>deferred_ambient</code>",id:"technique-deferred_ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],p={toc:i},x="wrapper";function _(e){let{components:r,...t}=e;return(0,o.kt)(x,(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"generic-default-axis-aligned-billboard-billboard-center-offset-billboard-up-axis-diffuse-texture-double-sided"},"Generic Default Axis Aligned Billboard Billboard Center Offset Billboard Up Axis Diffuse Texture Double Sided"),(0,o.kt)("p",null,"(",(0,o.kt)("inlineCode",{parentName:"p"},"generic:default:AXIS_ALIGNED_BILLBOARD:BILLBOARD_CENTER_OFFSET:BILLBOARD_UP_AXIS:DIFFUSE_TEXTURE:DOUBLE_SIDED"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"0x632dd8ceff58185a"),")"),(0,o.kt)("h3",{id:"technique-deferred_ambient"},"Technique ",(0,o.kt)("inlineCode",{parentName:"h3"},"deferred_ambient")),(0,o.kt)("h3",{id:"render-states"},"Render States"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 1,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 1,\n    D3DRS_COLORWRITEENABLE = 15,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,o.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,o.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,o.kt)("h3",{id:"shaders"},"Shaders"),(0,o.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"float camera_near_range : register(vs_3_0, c14);\ncolumn_major float4x4 camera_proj_matrix : register(vs_3_0, c4);\ncolumn_major float4x4 camera_view_matrix : register(vs_3_0, c0);\ncolumn_major float4x4 camera_world_matrix : register(vs_3_0, c8);\nfloat3 ref_billboard_center_offset : register(vs_3_0, c16);\nfloat3 ref_billboard_up_axis : register(vs_3_0, c15) = { 0, 1, 0 };\nfloat3 ref_global_axis : register(vs_3_0, c17) = { 0, 0, 1 };\ncolumn_major float4x4 world_matrix : register(vs_3_0, c11);\nstruct VertexMain_Input\n{\n    float4 normal : NORMAL;\n    float4 texcoord6 : TEXCOORD6;\n    float4 texcoord7 : TEXCOORD7;\n    float4 texcoord : TEXCOORD;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float texcoord1 : TEXCOORD1;\n    float2 texcoord : TEXCOORD;\n    float3 texcoord2 : TEXCOORD2;\n    float3 texcoord5 : TEXCOORD5;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float4 temp0, temp1;\n    float3 temp2, temp3, temp4;\n    // def c18, 2, -1, 1, 0\n    // dcl_normal v0\n    // dcl_texcoord6 v1\n    // dcl_texcoord7 v2\n    // dcl_texcoord v3\n    // dcl_position o0\n    // dcl_texcoord1 o1.x\n    // dcl_texcoord o2.xy\n    // dcl_texcoord2 o3.xyz\n    // dcl_texcoord5 o4.xyz\n    // mul r0.xy, c15, c15\n    temp0.xy = ref_billboard_up_axis.xy * ref_billboard_up_axis.xy;\n    // add r0.x, r0.y, r0.x\n    temp0.x = temp0.y + temp0.x;\n    // rsq r0.x, r0.x\n    temp0.x = 1 / sqrt(temp0.x);\n    // mul r0.xyz, r0.x, c15.yxyw\n    temp0.xyz = temp0.xxx * ref_billboard_up_axis.yxy;\n    // add r1.xyz, c16.xxyw, v2.xxyw\n    temp1.xyz = ref_billboard_center_offset.xxy + i.texcoord7.xxy;\n    // mul r0.xzw, r0.xyyz, r1.xyyz\n    temp0.xzw = temp0.xyz * temp1.xyz;\n    // mad r0.x, r1.z, -r0.y, r0.x\n    temp0.x = temp1.z * -temp0.y + temp0.x;\n    // add r0.y, r0.w, r0.z\n    temp0.y = temp0.w + temp0.z;\n    // mov r1.z, c9.y\n    temp1.z = (camera_world_matrix._m01_m11_m21_m31).y;\n    // mov r1.x, c10.y\n    temp1.x = (camera_world_matrix._m02_m12_m22_m32).y;\n    // mov r1.y, c8.y\n    temp1.y = (camera_world_matrix._m00_m10_m20_m30).y;\n    // nrm r2.xyz, c17\n    temp2.xyz = normalize(ref_global_axis.xyz).xyz;\n    // mul r3.xyz, r1, r2.yzxw\n    temp3.xyz = temp1.xyz * temp2.yzx;\n    // mad r1.xyz, r1.zxyw, r2.zxyw, -r3\n    temp1.xyz = temp1.zxy * temp2.zxy + -temp3.xyz;\n    // nrm r3.xyz, r1\n    temp3.xyz = normalize(temp1.xyz).xyz;\n    // mad r1, v1.xyzx, c18.zzzw, c18.wwwz\n    temp1 = i.texcoord6.xyzx * float4(1, 1, 1, 0) + float4(0, 0, 0, 1);\n    // dp4 r4.x, r1, c11\n    temp4.x = dot(temp1, (world_matrix._m00_m10_m20_m30));\n    // dp4 r4.y, r1, c12\n    temp4.y = dot(temp1, (world_matrix._m01_m11_m21_m31));\n    // dp4 r4.z, r1, c13\n    temp4.z = dot(temp1, (world_matrix._m02_m12_m22_m32));\n    // mad r0.xzw, r3.xyyz, r0.x, r4.xyyz\n    temp0.xzw = temp3.xyz * temp0.xxx + temp4.xyz;\n    // mov o4.xyz, r4\n    o.texcoord5 = temp4;\n    // mad r0.xyz, r2, r0.y, r0.xzww\n    temp0.xyz = temp2.xyz * temp0.yyy + temp0.xzw;\n    // mov r0.w, c18.z\n    temp0.w = float1(1);\n    // dp4 r1.x, r0, c0\n    temp1.x = dot(temp0, (camera_view_matrix._m00_m10_m20_m30));\n    // dp4 r1.y, r0, c1\n    temp1.y = dot(temp0, (camera_view_matrix._m01_m11_m21_m31));\n    // dp4 r1.z, r0, c2\n    temp1.z = dot(temp0, (camera_view_matrix._m02_m12_m22_m32));\n    // dp4 r1.w, r0, c3\n    temp1.w = dot(temp0, (camera_view_matrix._m03_m13_m23_m33));\n    // dp4 o0.x, r1, c4\n    o.position.x = dot(temp1, (camera_proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, r1, c5\n    o.position.y = dot(temp1, (camera_proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.w, r1, c7\n    o.position.w = dot(temp1, (camera_proj_matrix._m03_m13_m23_m33));\n    // dp4 r0.x, r1, c6\n    temp0.x = dot(temp1, (camera_proj_matrix._m02_m12_m22_m32));\n    // add o1.x, r0.x, c14.x\n    o.texcoord1 = temp0.x + camera_near_range.x;\n    // mov o0.z, r0.x\n    o.position.z = temp0.x;\n    // mad r0.xyz, v0, c18.x, c18.y\n    temp0.xyz = i.normal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o3.x, r0, c11\n    o.texcoord2.x = dot(temp0.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o3.y, r0, c12\n    o.texcoord2.y = dot(temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o3.z, r0, c13\n    o.texcoord2.z = dot(temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mov o2.xy, v3\n    o.texcoord = i.texcoord;\n    // \n\n    return o;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."),(0,o.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"sampler2D diffuse_texture : register(ps_3_0, s0);\nstruct PixelMain_Input\n{\n    float texcoord1 : TEXCOORD1;\n    float2 texcoord : TEXCOORD;\n    float3 texcoord2 : TEXCOORD2;\n    float4 vpos : vPos;\n};\n\nstruct PixelMain_Output\n{\n    float4 color1 : COLOR1;\n    float4 color : COLOR;\n    float4 color2 : COLOR2;\n};\n\nPixelMain_Output PixelMain(PixelMain_Input i)\n{\n    PixelMain_Output o;\n    float4 temp0;\n    float3 temp1;\n    // def c0, 1, -1, 0.5, 0.4\n    // dcl_texcoord1 v0.x\n    // dcl_texcoord v1.xy\n    // dcl_texcoord2_pp v2.xyz\n    // dcl vPos\n    // dcl_2d s0\n    // cmp r0.x, vPos, c0.x, c0.y\n    temp0.x = (vPos.x >= 0) ? float1(1) : float1(-1);\n    // cmp_pp r0.xyz, -r0.x, v2, -v2\n    temp0.xyz = /* not implemented _pp modifier */ (-temp0.xxx >= 0) ? i.texcoord2.xyz : -i.texcoord2.xyz;\n    // nrm_pp r1.xyz, r0\n    temp1.xyz = /* not implemented _pp modifier */ normalize(temp0.xyz).xyz;\n    // mad_pp oC1.xyz, r1, c0.z, c0.z\n    o.color1.xyz = /* not implemented _pp modifier */ temp1.xyz * float3(0.5, 0.5, 0.5) + float3(0.5, 0.5, 0.5);\n    // texld_pp r0, v1, s0\n    temp0 = /* not implemented _pp modifier */ tex2D(diffuse_texture, i.texcoord.xy);\n    // mov_pp oC0.xyz, r0\n    o.color.xyz = /* not implemented _pp modifier */ temp0.xyz;\n    // mov_pp oC1.w, r0.w\n    o.color1.w = /* not implemented _pp modifier */ temp0.w;\n    // mov oC0.w, c0.w\n    o.color.w = float1(0.4);\n    // mov oC2, v0.x\n    o.color2 = i.texcoord1.x;\n    // \n\n    return o;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."))}_.isMDXComponent=!0}}]);