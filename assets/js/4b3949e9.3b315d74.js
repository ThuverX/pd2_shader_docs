"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[87224],{603905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>s});var r=n(667294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function m(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):d(d({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},x="mdxType",i={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},_=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=m(e,["components","mdxType","originalType","parentName"]),x=l(n),_=o,s=x["".concat(p,".").concat(_)]||x[_]||i[_]||a;return n?r.createElement(s,d(d({ref:t},c),{},{components:n})):r.createElement(s,d({ref:t},c))}));function s(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,d=new Array(a);d[0]=_;var m={};for(var p in t)hasOwnProperty.call(t,p)&&(m[p]=t[p]);m.originalType=e,m[x]="string"==typeof e?e:o,d[1]=m;for(var l=2;l<a;l++)d[l]=n[l];return r.createElement.apply(null,d)}return r.createElement.apply(null,n)}_.displayName="MDXCreateElement"},219435:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>d,default:()=>i,frontMatter:()=>a,metadata:()=>m,toc:()=>l});var r=n(487462),o=(n(667294),n(603905));const a={id:0x7f7dc57b46287800,title:"Generic Default Diffuse Texture Distance Fade 2 Instanced Normalmap"},d="Generic Default Diffuse Texture Distance Fade 2 Instanced Normalmap",m={unversionedId:"Generated/Shaders/Base/[2400-2500]/9186715948154386000",id:"Generated/Shaders/Base/[2400-2500]/9186715948154386000",title:"Generic Default Diffuse Texture Distance Fade 2 Instanced Normalmap",description:"(genericDIFFUSETEXTUREINSTANCED:NORMALMAP, 0x7f7dc57b4628789d)",source:"@site/docs/Generated/Shaders/Base/[2400-2500]/0x7f7dc57b4628789d.mdx",sourceDirName:"Generated/Shaders/Base/[2400-2500]",slug:"/Generated/Shaders/Base/[2400-2500]/9186715948154386000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[2400-2500]/9186715948154386000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/Generated/Shaders/Base/[2400-2500]/0x7f7dc57b4628789d.mdx",tags:[],version:"current",frontMatter:{id:"9186715948154386000",title:"Generic Default Diffuse Texture Distance Fade 2 Instanced Normalmap"},sidebar:"docsSidebar",previous:{title:"Generic Default Alpha Masked Diffuse Texture Double Sided External Alpha Ref Normalmap Simple Tint",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[2400-2500]/9180530741632028000"},next:{title:"Generic Shadow Caster Align Normal World Z Alpha Masked Ati Diffuse Texture External Alpha Ref",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[2400-2500]/9192051918187485000"}},p={},l=[{value:"Technique <code>deferred_ambient</code>",id:"technique-deferred_ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Sampler 1",id:"sampler-1",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],c={toc:l},x="wrapper";function i(e){let{components:t,...n}=e;return(0,o.kt)(x,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"generic-default-diffuse-texture-distance-fade-2-instanced-normalmap"},"Generic Default Diffuse Texture Distance Fade 2 Instanced Normalmap"),(0,o.kt)("p",null,"(",(0,o.kt)("inlineCode",{parentName:"p"},"generic:default:DIFFUSE_TEXTURE:DISTANCE_FADE_2:INSTANCED:NORMALMAP"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"0x7f7dc57b4628789d"),")"),(0,o.kt)("p",null,"This template is referenced 1 time by ",(0,o.kt)("a",{parentName:"p",href:"/docs/Generated/Render%20Templates/base.render_template_database#generic-diffuse-texture-distance-fade-2-instanced-normalmap"},"generic:DIFFUSE_TEXTURE:DISTANCE_FADE_2:INSTANCED:NORMALMAP"),".\nThis template uses the following inputs:\n|Name|UI Name|Type|\n|---|---|---|\n|diffuse_texture|Diffuse Texture (UV1)|texture|\n|bump_normal_texture|Normal map (UV2 else UV1)|texture|."),(0,o.kt)("h3",{id:"technique-deferred_ambient"},"Technique ",(0,o.kt)("inlineCode",{parentName:"h3"},"deferred_ambient")),(0,o.kt)("h3",{id:"render-states"},"Render States"),(0,o.kt)("p",null,"More info can be found on the ",(0,o.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 1,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 2,\n    D3DRS_COLORWRITEENABLE = 15,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,o.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,o.kt)("p",null,"More info can be found on the ",(0,o.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,o.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,o.kt)("h4",{id:"sampler-1"},"Sampler 1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,o.kt)("h3",{id:"shaders"},"Shaders"),(0,o.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"float GLOBAL_fov_ratio : register(vs_3_0, c205);\nfloat camera_near_range : register(vs_3_0, c204);\ncolumn_major float4x4 ref_world_tm[50] : register(vs_3_0, c0);\ncolumn_major float4x4 view_proj_matrix : register(vs_3_0, c200);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 normal : NORMAL;\n    float4 texcoord1 : TEXCOORD1;\n    float4 texcoord : TEXCOORD;\n    float4 tangent : TANGENT;\n    float4 binormal : BINORMAL;\n    float4 position1 : POSITION1;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float2 texcoord1 : TEXCOORD1;\n    float4 texcoord : TEXCOORD;\n    float3 texcoord2 : TEXCOORD2;\n    float3 texcoord3 : TEXCOORD3;\n    float3 texcoord4 : TEXCOORD4;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float4 temp0, temp1;\n    float addr0;\n    // def c206, 2, -1, 4, -0\n    // def c207, -1625, 0.0011428571, 0, 0\n    // dcl_position v0\n    // dcl_normal v1\n    // dcl_texcoord1 v2\n    // dcl_texcoord v3\n    // dcl_tangent v4\n    // dcl_binormal v5\n    // dcl_position1 v6\n    // dcl_position o0\n    // dcl_texcoord1 o1.xy\n    // dcl_texcoord o2\n    // dcl_texcoord2 o3.xyz\n    // dcl_texcoord3 o4.xyz\n    // dcl_texcoord4 o5.xyz\n    // mad r0, v0.xyzx, -c206.yyyw, -c206.wwwy\n    temp0 = i.position.xyzx * float4(1, 1, 1, 0) + float4(0, 0, 0, 1);\n    // frc r1.x, v6.x\n    temp1.x = frac(i.position1.x);\n    // add r1.x, -r1.x, v6.x\n    temp1.x = -temp1.x + i.position1.x;\n    // mul r1.x, r1.x, c206.z\n    temp1.x = temp1.x * float1(4);\n    // mova a0.x, r1.x\n    addr0.x = temp1.x;\n    // dp4 r1.x, r0, c0[a0.x]\n    temp1.x = dot(temp0, (ref_world_tm[0 + (addr0.x / 4)]._m00_m10_m20_m30));\n    // dp4 r1.y, r0, c1[a0.x]\n    temp1.y = dot(temp0, (ref_world_tm[0 + (addr0.x / 4)]._m01_m11_m21_m31));\n    // dp4 r1.z, r0, c2[a0.x]\n    temp1.z = dot(temp0, (ref_world_tm[0 + (addr0.x / 4)]._m02_m12_m22_m32));\n    // dp4 r1.w, r0, c3[a0.x]\n    temp1.w = dot(temp0, (ref_world_tm[0 + (addr0.x / 4)]._m03_m13_m23_m33));\n    // dp4 o0.x, r1, c200\n    o.position.x = dot(temp1, (view_proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, r1, c201\n    o.position.y = dot(temp1, (view_proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.w, r1, c203\n    o.position.w = dot(temp1, (view_proj_matrix._m03_m13_m23_m33));\n    // dp4 r0.x, r1, c202\n    temp0.x = dot(temp1, (view_proj_matrix._m02_m12_m22_m32));\n    // rsq r0.y, c205.x\n    temp0.y = 1 / sqrt(GLOBAL_fov_ratio.x);\n    // add r0.z, r0.x, c204.x\n    temp0.z = temp0.x + camera_near_range.x;\n    // mov o0.z, r0.x\n    o.position.z = temp0.x;\n    // mad r0.x, r0.z, r0.y, c207.x\n    temp0.x = temp0.z * temp0.y + float1(-1625);\n    // mov o1.x, r0.z\n    o.texcoord1.x = temp0.z;\n    // mul_sat r0.x, r0.x, c207.y\n    temp0.x = saturate(temp0.x * float1(0.0011428571));\n    // add o1.y, -r0.x, -c206.y\n    o.texcoord1.y = -temp0.x + float1(1);\n    // mad r0.xyz, v4, c206.x, c206.y\n    temp0.xyz = i.tangent.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o3.x, r0, c0[a0.x]\n    o.texcoord2.x = dot(temp0.xyz, (ref_world_tm[0 + (addr0.x / 4)]._m00_m10_m20_m30).xyz);\n    // dp3 o4.x, r0, c1[a0.x]\n    o.texcoord3.x = dot(temp0.xyz, (ref_world_tm[0 + (addr0.x / 4)]._m01_m11_m21_m31).xyz);\n    // dp3 o5.x, r0, c2[a0.x]\n    o.texcoord4.x = dot(temp0.xyz, (ref_world_tm[0 + (addr0.x / 4)]._m02_m12_m22_m32).xyz);\n    // mad r0.xyz, v5, c206.x, c206.y\n    temp0.xyz = i.binormal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o3.y, -r0, c0[a0.x]\n    o.texcoord2.y = dot(-temp0.xyz, (ref_world_tm[0 + (addr0.x / 4)]._m00_m10_m20_m30).xyz);\n    // dp3 o4.y, -r0, c1[a0.x]\n    o.texcoord3.y = dot(-temp0.xyz, (ref_world_tm[0 + (addr0.x / 4)]._m01_m11_m21_m31).xyz);\n    // dp3 o5.y, -r0, c2[a0.x]\n    o.texcoord4.y = dot(-temp0.xyz, (ref_world_tm[0 + (addr0.x / 4)]._m02_m12_m22_m32).xyz);\n    // mad r0.xyz, v1, c206.x, c206.y\n    temp0.xyz = i.normal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o3.z, r0, c0[a0.x]\n    o.texcoord2.z = dot(temp0.xyz, (ref_world_tm[0 + (addr0.x / 4)]._m00_m10_m20_m30).xyz);\n    // dp3 o4.z, r0, c1[a0.x]\n    o.texcoord3.z = dot(temp0.xyz, (ref_world_tm[0 + (addr0.x / 4)]._m01_m11_m21_m31).xyz);\n    // dp3 o5.z, r0, c2[a0.x]\n    o.texcoord4.z = dot(temp0.xyz, (ref_world_tm[0 + (addr0.x / 4)]._m02_m12_m22_m32).xyz);\n    // mov o2.xy, v3\n    o.texcoord.xy = i.texcoord.xy;\n    // mov o2.zw, v2.xyxy\n    o.texcoord.zw = i.texcoord1.xy;\n    // \n\n    return o;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."),(0,o.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"sampler2D bump_normal_texture : register(ps_3_0, s1);\nsampler2D diffuse_texture : register(ps_3_0, s0);\nstruct PixelMain_Input\n{\n    float2 texcoord1 : TEXCOORD1;\n    float4 texcoord : TEXCOORD;\n    float3 texcoord2 : TEXCOORD2;\n    float3 texcoord3 : TEXCOORD3;\n    float3 texcoord4 : TEXCOORD4;\n    float2 vface : vFace;\n};\n\nstruct PixelMain_Output\n{\n    float4 color1 : COLOR1;\n    float4 color : COLOR;\n    float4 color2 : COLOR2;\n};\n\nPixelMain_Output PixelMain(PixelMain_Input i)\n{\n    PixelMain_Output o;\n    float4 temp0, temp1, temp2;\n    // def c0, 4, 0.25, -4, -0.25\n    // def c1, -0, -1, -2, -3\n    // def c2, 1, -1, -0.5, 0.5\n    // def c3, 0.4, 0, 0, 0\n    // def c4, 0.05882353, 0.7647059, 0.23529412, 0.9411765\n    // def c5, 0.5294118, 0.29411766, 0.7058824, 0.47058824\n    // def c6, 0.1764706, 0.88235295, 0.11764706, 0.8235294\n    // def c7, 0.64705884, 0.4117647, 0.5882353, 0.3529412\n    // dcl_texcoord1 v0.xy\n    // dcl_texcoord v1\n    // dcl_texcoord2 v2.xyz\n    // dcl_texcoord3 v3.xyz\n    // dcl_texcoord4 v4.xyz\n    // dcl vFace.xy\n    // dcl_2d s0\n    // dcl_2d s1\n    // cmp r0, vFace.yyxx, c0.xyxy, c0.zwzw\n    temp0 = (vFace.yyxx >= 0) ? float4(4, 0.25, 4, 0.25) : float4(-4, -0.25, -4, -0.25);\n    // mul r0.yw, r0.xwzy, vFace.xxzy\n    temp0.yw = temp0.wy * vFace.xy;\n    // frc r0.yw, r0\n    temp0.yw = frac(temp0.yw);\n    // mul r0.xy, r0.ywzw, r0.zxzw\n    temp0.xy = temp0.yw * temp0.zx;\n    // frc r0.zw, r0.xyxy\n    temp0.zw = frac(temp0.xy);\n    // add r0.xy, r0, -r0.zwzw\n    temp0.xy = temp0.xy + -temp0.zw;\n    // add r1, r0.y, c1\n    temp1 = temp0.y + float4(-0, -1, -2, -3);\n    // add r0, r0.x, c1\n    temp0 = temp0.x + float4(-0, -1, -2, -3);\n    // cmp r0, -r0_abs, -c1.y, -c1.x\n    temp0 = (-abs(temp0) >= 0) ? float4(1, 1, 1, 1) : float4(0, 0, 0, 0);\n    // cmp r1, -r1_abs, -c1.y, -c1.x\n    temp1 = (-abs(temp1) >= 0) ? float4(1, 1, 1, 1) : float4(0, 0, 0, 0);\n    // dp4 r2.x, c4, r0\n    temp2.x = dot(float4(0.05882353, 0.7647059, 0.23529412, 0.9411765), temp0);\n    // dp4 r2.y, c5, r0\n    temp2.y = dot(float4(0.5294118, 0.29411766, 0.7058824, 0.47058824), temp0);\n    // dp4 r2.z, c6, r0\n    temp2.z = dot(float4(0.1764706, 0.88235295, 0.11764706, 0.8235294), temp0);\n    // dp4 r2.w, c7, r0\n    temp2.w = dot(float4(0.64705884, 0.4117647, 0.5882353, 0.3529412), temp0);\n    // dp4 r0.x, r2, r1\n    temp0.x = dot(temp2, temp1);\n    // add r0.x, -r0.x, v0.y\n    temp0.x = -temp0.x + i.texcoord1.y;\n    // cmp r0, r0.x, c2.x, c2.y\n    temp0 = (temp0.x >= 0) ? float4(1, 1, 1, 1) : float4(-1, -1, -1, -1);\n    // texkill r0\n    clip(temp0);\n    // texld_pp r0, v1.zwzw, s1\n    temp0 = /* not implemented _pp modifier */ tex2D(bump_normal_texture, i.texcoord.zw);\n    // add_pp r0.xy, r0.wyzw, c2.z\n    temp0.xy = /* not implemented _pp modifier */ temp0.wy + float2(-0.5, -0.5);\n    // add_pp r0.xy, r0, r0\n    temp0.xy = /* not implemented _pp modifier */ temp0.xy + temp0.xy;\n    // mul_pp r0.w, r0.x, r0.x\n    temp0.w = /* not implemented _pp modifier */ temp0.x * temp0.x;\n    // mad_pp r0.w, r0.y, r0.y, -r0.w\n    temp0.w = /* not implemented _pp modifier */ temp0.y * temp0.y + -temp0.w;\n    // add_pp r0.w, -r0.w, -c1.y\n    temp0.w = /* not implemented _pp modifier */ -temp0.w + float1(1);\n    // rsq_pp r0.w, r0.w\n    temp0.w = /* not implemented _pp modifier */ 1 / sqrt(temp0.w);\n    // rcp_pp r0.z, r0.w\n    temp0.z = /* not implemented _pp modifier */ 1.0f / temp0.w;\n    // dp3 r1.x, r0, v2\n    temp1.x = dot(temp0.xyz, i.texcoord2.xyz);\n    // dp3 r1.y, r0, v3\n    temp1.y = dot(temp0.xyz, i.texcoord3.xyz);\n    // dp3 r1.z, r0, v4\n    temp1.z = dot(temp0.xyz, i.texcoord4.xyz);\n    // nrm_pp r0.xyz, r1\n    temp0.xyz = /* not implemented _pp modifier */ normalize(temp1.xyz).xyz;\n    // mad_pp oC1.xyz, r0, c2.w, c2.w\n    o.color1.xyz = /* not implemented _pp modifier */ temp0.xyz * float3(0.5, 0.5, 0.5) + float3(0.5, 0.5, 0.5);\n    // texld_pp r0, v1, s0\n    temp0 = /* not implemented _pp modifier */ tex2D(diffuse_texture, i.texcoord.xy);\n    // mov_pp oC0.xyz, r0\n    o.color.xyz = /* not implemented _pp modifier */ temp0.xyz;\n    // mov_pp oC1.w, r0.w\n    o.color1.w = /* not implemented _pp modifier */ temp0.w;\n    // mov oC0.w, c3.x\n    o.color.w = float1(0.4);\n    // mov oC2, v0.x\n    o.color2 = i.texcoord1.x;\n    // \n\n    return o;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."))}i.isMDXComponent=!0}}]);