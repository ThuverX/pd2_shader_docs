"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[37346],{603905:(e,t,r)=>{r.d(t,{Zo:()=>x,kt:()=>s});var n=r(667294);function m(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){m(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,m=function(e,t){if(null==e)return{};var r,n,m={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(m[r]=e[r]);return m}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(m[r]=e[r])}return m}var d=n.createContext({}),_=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},x=function(e){var t=_(e.components);return n.createElement(d.Provider,{value:t},e.children)},i="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,m=e.mdxType,a=e.originalType,d=e.parentName,x=p(e,["components","mdxType","originalType","parentName"]),i=_(r),c=m,s=i["".concat(d,".").concat(c)]||i[c]||l[c]||a;return r?n.createElement(s,o(o({ref:t},x),{},{components:r})):n.createElement(s,o({ref:t},x))}));function s(e,t){var r=arguments,m=t&&t.mdxType;if("string"==typeof e||m){var a=r.length,o=new Array(a);o[0]=c;var p={};for(var d in t)hasOwnProperty.call(t,d)&&(p[d]=t[d]);p.originalType=e,p[i]="string"==typeof e?e:m,o[1]=p;for(var _=2;_<a;_++)o[_]=r[_];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},746220:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>l,frontMatter:()=>a,metadata:()=>p,toc:()=>_});var n=r(487462),m=(r(667294),r(603905));const a={id:90691023176743400,title:"Opacity Default Diffuse Texture Nvidia Opacity Fade Skinned 3weights Take Global Light"},o="Opacity Default Diffuse Texture Nvidia Opacity Fade Skinned 3weights Take Global Light",p={unversionedId:"Generated/Shaders/Base/[0-100]/90691023176743400",id:"Generated/Shaders/Base/[0-100]/90691023176743400",title:"Opacity Default Diffuse Texture Nvidia Opacity Fade Skinned 3weights Take Global Light",description:"(opacityDIFFUSETEXTUREOPACITYFADETAKEGLOBAL_LIGHT, 0x14233014cc439e8)",source:"@site/docs/Generated/Shaders/Base/[0-100]/0x14233014cc439e8.mdx",sourceDirName:"Generated/Shaders/Base/[0-100]",slug:"/Generated/Shaders/Base/[0-100]/90691023176743400",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[0-100]/90691023176743400",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/Generated/Shaders/Base/[0-100]/0x14233014cc439e8.mdx",tags:[],version:"current",frontMatter:{id:"90691023176743400",title:"Opacity Default Diffuse Texture Nvidia Opacity Fade Skinned 3weights Take Global Light"},sidebar:"docsSidebar",previous:{title:"Generic Shadow Caster Ati Depth Scaling Diffuse Texture Double Sided Global Environment Mapping Normalmap",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[0-100]/89997673670561440"},next:{title:"Generic Shadow Caster Alpha Masked Diffuse Texture Double Sided External Alpha Ref Nvidia Opacity Texture",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[0-100]/100025439451506510"}},d={},_=[{value:"Technique <code>transparent</code>",id:"technique-transparent",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Sampler 1",id:"sampler-1",level:4},{value:"Sampler 2",id:"sampler-2",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],x={toc:_},i="wrapper";function l(e){let{components:t,...r}=e;return(0,m.kt)(i,(0,n.Z)({},x,r,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("h1",{id:"opacity-default-diffuse-texture-nvidia-opacity-fade-skinned-3weights-take-global-light"},"Opacity Default Diffuse Texture Nvidia Opacity Fade Skinned 3weights Take Global Light"),(0,m.kt)("p",null,"(",(0,m.kt)("inlineCode",{parentName:"p"},"opacity:default:DIFFUSE_TEXTURE:NVIDIA:OPACITY_FADE:SKINNED_3WEIGHTS:TAKE_GLOBAL_LIGHT"),", ",(0,m.kt)("inlineCode",{parentName:"p"},"0x14233014cc439e8"),")"),(0,m.kt)("p",null,"This template is referenced 1 time by ",(0,m.kt)("a",{parentName:"p",href:"/docs/Generated/Render%20Templates/base.render_template_database#opacity-diffuse-texture-opacity-fade-skinned-3weights-take-global-light"},"opacity:DIFFUSE_TEXTURE:OPACITY_FADE:SKINNED_3WEIGHTS:TAKE_GLOBAL_LIGHT"),".\nThis template uses the following inputs:\n|Name|UI Name|Type|\n|---|---|---|\n|opacity_texture|Opacity Texture (UV5)|texture|\n|diffuse_texture|Diffuse Texture (UV1)|texture|\n|opacity_fade|Opacity fade (fade, end in cm)|vector3|."),(0,m.kt)("h3",{id:"technique-transparent"},"Technique ",(0,m.kt)("inlineCode",{parentName:"h3"},"transparent")),(0,m.kt)("h3",{id:"render-states"},"Render States"),(0,m.kt)("p",null,"More info can be found on the ",(0,m.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 0,\n    D3DRS_ALPHABLENDENABLE = 1,\n    D3DRS_CULLMODE = 2,\n    D3DRS_COLORWRITEENABLE = 7,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 1,\n    D3DRS_STENCILFUNC = 6,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 5,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 4,\n    D3DRS_STENCILWRITEMASK = 5,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n    D3DRS_BLENDOP = 1,\n    D3DRS_DESTBLEND = 6,\n    D3DRS_SRCBLEND = 5,\n};\n")),(0,m.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,m.kt)("p",null,"More info can be found on the ",(0,m.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,m.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,m.kt)("h4",{id:"sampler-1"},"Sampler 1"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 2,\n    D3DSAMP_MINFILTER = 2,\n    D3DSAMP_MIPFILTER = 2,\n};\n")),(0,m.kt)("h4",{id:"sampler-2"},"Sampler 2"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,m.kt)("h3",{id:"shaders"},"Shaders"),(0,m.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x3 bones[54] : register(vs_3_0, c0);\nfloat camera_near_range : register(vs_3_0, c174);\ncolumn_major float4x4 proj_matrix : register(vs_3_0, c170);\nfloat3 ref_opacity_fade : register(vs_3_0, c175);\ncolumn_major float4x4 view_matrix : register(vs_3_0, c166);\ncolumn_major float4x4 world_matrix : register(vs_3_0, c162);\nstruct VertexMain_Input\n{\n    float4 blendweight : BLENDWEIGHT;\n    float4 blendindices : BLENDINDICES;\n    float4 position : POSITION;\n    float4 normal : NORMAL;\n    float4 texcoord4 : TEXCOORD4;\n    float4 texcoord : TEXCOORD;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float texcoord7 : TEXCOORD7;\n    float2 texcoord1 : TEXCOORD1;\n    float4 texcoord5 : TEXCOORD5;\n    float2 texcoord : TEXCOORD;\n    float3 texcoord2 : TEXCOORD2;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float4 temp0, temp1;\n    float3 addr0, temp2;\n    // def c176, 2, -1, 3, 1\n    // dcl_blendweight v0\n    // dcl_blendindices v1\n    // dcl_position v2\n    // dcl_normal v3\n    // dcl_texcoord4 v4\n    // dcl_texcoord v5\n    // dcl_position o0\n    // dcl_texcoord7 o1.x\n    // dcl_texcoord1 o2.xy\n    // dcl_texcoord5 o3\n    // dcl_texcoord o4.xy\n    // dcl_texcoord2 o5.xyz\n    // mul r0.xyz, c176.z, v1\n    temp0.xyz = float3(3, 3, 3) * i.blendindices.xyz;\n    // mova a0.xyz, r0.yxzw\n    addr0.xyz = temp0.yxz;\n    // dp4 r1.x, v2, c0[a0.x]\n    temp1.x = dot(i.position, (bones[0 + (addr0.x / 3)]._m00_m10_m20_m30));\n    // dp4 r1.y, v2, c1[a0.x]\n    temp1.y = dot(i.position, (bones[0 + (addr0.x / 3)]._m01_m11_m21_m31));\n    // dp4 r1.z, v2, c2[a0.x]\n    temp1.z = dot(i.position, (bones[0 + (addr0.x / 3)]._m02_m12_m22_m32));\n    // mul r1.xyz, r1, v0.y\n    temp1.xyz = temp1.xyz * i.blendweight.yyy;\n    // dp4 r0.x, v2, c0[a0.y]\n    temp0.x = dot(i.position, (bones[0 + (addr0.y / 3)]._m00_m10_m20_m30));\n    // dp4 r0.y, v2, c1[a0.y]\n    temp0.y = dot(i.position, (bones[0 + (addr0.y / 3)]._m01_m11_m21_m31));\n    // dp4 r0.z, v2, c2[a0.y]\n    temp0.z = dot(i.position, (bones[0 + (addr0.y / 3)]._m02_m12_m22_m32));\n    // mad r0.xyz, v0.x, r0, r1\n    temp0.xyz = i.blendweight.xxx * temp0.xyz + temp1.xyz;\n    // dp4 r1.x, v2, c0[a0.z]\n    temp1.x = dot(i.position, (bones[0 + (addr0.z / 3)]._m00_m10_m20_m30));\n    // dp4 r1.y, v2, c1[a0.z]\n    temp1.y = dot(i.position, (bones[0 + (addr0.z / 3)]._m01_m11_m21_m31));\n    // dp4 r1.z, v2, c2[a0.z]\n    temp1.z = dot(i.position, (bones[0 + (addr0.z / 3)]._m02_m12_m22_m32));\n    // mad r0.xyz, v0.z, r1, r0\n    temp0.xyz = i.blendweight.zzz * temp1.xyz + temp0.xyz;\n    // mov r0.w, c176.w\n    temp0.w = float1(1);\n    // dp4 r1.w, r0, c165\n    temp1.w = dot(temp0, (world_matrix._m03_m13_m23_m33));\n    // dp4 r1.x, r0, c162\n    temp1.x = dot(temp0, (world_matrix._m00_m10_m20_m30));\n    // dp4 r1.y, r0, c163\n    temp1.y = dot(temp0, (world_matrix._m01_m11_m21_m31));\n    // dp4 r1.z, r0, c164\n    temp1.z = dot(temp0, (world_matrix._m02_m12_m22_m32));\n    // dp4 r0.x, r1, c166\n    temp0.x = dot(temp1, (view_matrix._m00_m10_m20_m30));\n    // dp4 r0.y, r1, c167\n    temp0.y = dot(temp1, (view_matrix._m01_m11_m21_m31));\n    // dp4 r0.z, r1, c168\n    temp0.z = dot(temp1, (view_matrix._m02_m12_m22_m32));\n    // dp4 r0.w, r1, c169\n    temp0.w = dot(temp1, (view_matrix._m03_m13_m23_m33));\n    // mov o3.xyz, r1\n    o.texcoord5.xyz = temp1.xyz;\n    // dp4 o0.x, r0, c170\n    o.position.x = dot(temp0, (proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, r0, c171\n    o.position.y = dot(temp0, (proj_matrix._m01_m11_m21_m31));\n    // dp4 r1.w, r0, c173\n    temp1.w = dot(temp0, (proj_matrix._m03_m13_m23_m33));\n    // dp4 r1.z, r0, c172\n    temp1.z = dot(temp0, (proj_matrix._m02_m12_m22_m32));\n    // add r0.x, r1.w, -c175.x\n    temp0.x = temp1.w + -ref_opacity_fade.x;\n    // mov o0.zw, r1\n    o.position.zw = temp1.zw;\n    // add o3.w, r1.z, c174.x\n    o.texcoord5.w = temp1.z + camera_near_range.x;\n    // rcp r0.y, c175.y\n    temp0.y = 1.0f / ref_opacity_fade.y;\n    // mul_sat r0.x, r0.y, r0.x\n    temp0.x = saturate(temp0.y * temp0.x);\n    // add o1.x, -r0.x, c176.w\n    o.texcoord7 = -temp0.x + float4(1, 1, 1, 1);\n    // mad r0.xyz, v3, c176.x, c176.y\n    temp0.xyz = i.normal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 r1.x, r0, c0[a0.x]\n    temp1.x = dot(temp0.xyz, (bones[0 + (addr0.x / 3)]._m00_m10_m20_m30).xyz);\n    // dp3 r1.y, r0, c1[a0.x]\n    temp1.y = dot(temp0.xyz, (bones[0 + (addr0.x / 3)]._m01_m11_m21_m31).xyz);\n    // dp3 r1.z, r0, c2[a0.x]\n    temp1.z = dot(temp0.xyz, (bones[0 + (addr0.x / 3)]._m02_m12_m22_m32).xyz);\n    // mul r1.xyz, r1, v0.y\n    temp1.xyz = temp1.xyz * i.blendweight.yyy;\n    // dp3 r2.x, r0, c0[a0.y]\n    temp2.x = dot(temp0.xyz, (bones[0 + (addr0.y / 3)]._m00_m10_m20_m30).xyz);\n    // dp3 r2.y, r0, c1[a0.y]\n    temp2.y = dot(temp0.xyz, (bones[0 + (addr0.y / 3)]._m01_m11_m21_m31).xyz);\n    // dp3 r2.z, r0, c2[a0.y]\n    temp2.z = dot(temp0.xyz, (bones[0 + (addr0.y / 3)]._m02_m12_m22_m32).xyz);\n    // mad r1.xyz, v0.x, r2, r1\n    temp1.xyz = i.blendweight.xxx * temp2.xyz + temp1.xyz;\n    // dp3 r2.x, r0, c0[a0.z]\n    temp2.x = dot(temp0.xyz, (bones[0 + (addr0.z / 3)]._m00_m10_m20_m30).xyz);\n    // dp3 r2.y, r0, c1[a0.z]\n    temp2.y = dot(temp0.xyz, (bones[0 + (addr0.z / 3)]._m01_m11_m21_m31).xyz);\n    // dp3 r2.z, r0, c2[a0.z]\n    temp2.z = dot(temp0.xyz, (bones[0 + (addr0.z / 3)]._m02_m12_m22_m32).xyz);\n    // mad r0.xyz, v0.z, r2, r1\n    temp0.xyz = i.blendweight.zzz * temp2.xyz + temp1.xyz;\n    // nrm r1.xyz, r0\n    temp1.xyz = normalize(temp0.xyz).xyz;\n    // dp3 o5.x, r1, c162\n    o.texcoord2.x = dot(temp1.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o5.y, r1, c163\n    o.texcoord2.y = dot(temp1.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o5.z, r1, c164\n    o.texcoord2.z = dot(temp1.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // mov o2.xy, v4\n    o.texcoord1 = i.texcoord4;\n    // mov o4.xy, v5\n    o.texcoord = i.texcoord;\n    // \n\n    return o;\n}\n")),(0,m.kt)("p",null,"Decompiled by DXDecompiler."),(0,m.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-hlsl"},"float3 GLOBAL_ambient_color : register(ps_3_0, c17);\nfloat3 GLOBAL_shadow_slice_depths : register(ps_3_0, c16);\ncolumn_major float4x4 camera_world_matrix : register(ps_3_0, c12);\nsampler2D diffuse_texture : register(ps_3_0, s2);\nfloat3 global_light_col : register(ps_3_0, c18);\nfloat3 global_light_dir : register(ps_3_0, c15);\ncolumn_major float4x4 global_shadow_projection[3] : register(ps_3_0, c0);\nsampler2D opacity_texture : register(ps_3_0, s0);\nsampler2D shadow_depth : register(ps_3_0, s1);\nstruct PixelMain_Input\n{\n    float texcoord7 : TEXCOORD7;\n    float4 texcoord5 : TEXCOORD5;\n    float2 texcoord : TEXCOORD;\n    float3 texcoord2 : TEXCOORD2;\n};\n\nfloat4 PixelMain(PixelMain_Input i) : COLOR\n{\n    float4 out_color;\n    float4 temp0, temp1, temp2, temp3, temp4;\n    // def c19, 0.9, 511.5, 0.5, 0.3\n    // def c20, 0, 1, 2, 3\n    // dcl_texcoord7 v0.x\n    // dcl_texcoord5 v1\n    // dcl_texcoord v2.xy\n    // dcl_texcoord2 v3.xyz\n    // dcl_2d s0\n    // dcl_2d s1\n    // dcl_2d s2\n    // mov r0.x, -v1.w\n    temp0.x = -i.texcoord5.w;\n    // add r0.yzw, c16.xxyz, -v1.w\n    temp0.yzw = GLOBAL_shadow_slice_depths.xyz + -i.texcoord5.www;\n    // cmp r0, r0, c20.x, c20.y\n    temp0 = (temp0 >= 0) ? float4(0, 0, 0, 0) : float4(1, 1, 1, 1);\n    // dp4 r0.x, r0, c20.y\n    temp0.x = dot(temp0, float4(1, 1, 1, 1));\n    // add r0.xyz, r0.x, -c20.yzww\n    temp0.xyz = temp0.xxx + float3(-1, -2, -3);\n    // mov r1.x, c20.x\n    temp1.x = float1(0);\n    // cmp r2, -r0_abs.x, c0, r1.x\n    temp2 = (-abs(temp0).x >= 0) ? (global_shadow_projection[0]._m00_m10_m20_m30) : temp1.x;\n    // cmp r2, -r0_abs.y, c4, r2\n    temp2 = (-abs(temp0).y >= 0) ? (global_shadow_projection[1]._m00_m10_m20_m30) : temp2;\n    // cmp r2, -r0_abs.z, c8, r2\n    temp2 = (-abs(temp0).z >= 0) ? (global_shadow_projection[2]._m00_m10_m20_m30) : temp2;\n    // mad r3, v1.xyzx, c20.yyyx, c20.xxxy\n    temp3 = i.texcoord5.xyzx * float4(1, 1, 1, 0) + float4(0, 0, 0, 1);\n    // dp4 r2.x, r3, r2\n    temp2.x = dot(temp3, temp2);\n    // cmp r4, -r0_abs.x, c1, r1.x\n    temp4 = (-abs(temp0).x >= 0) ? (global_shadow_projection[0]._m01_m11_m21_m31) : temp1.x;\n    // cmp r4, -r0_abs.y, c5, r4\n    temp4 = (-abs(temp0).y >= 0) ? (global_shadow_projection[1]._m01_m11_m21_m31) : temp4;\n    // cmp r4, -r0_abs.z, c9, r4\n    temp4 = (-abs(temp0).z >= 0) ? (global_shadow_projection[2]._m01_m11_m21_m31) : temp4;\n    // dp4 r2.y, r3, r4\n    temp2.y = dot(temp3, temp4);\n    // cmp r4, -r0_abs.x, c2, r1.x\n    temp4 = (-abs(temp0).x >= 0) ? (global_shadow_projection[0]._m02_m12_m22_m32) : temp1.x;\n    // cmp r4, -r0_abs.y, c6, r4\n    temp4 = (-abs(temp0).y >= 0) ? (global_shadow_projection[1]._m02_m12_m22_m32) : temp4;\n    // cmp r4, -r0_abs.z, c10, r4\n    temp4 = (-abs(temp0).z >= 0) ? (global_shadow_projection[2]._m02_m12_m22_m32) : temp4;\n    // dp4 r2.z, r3, r4\n    temp2.z = dot(temp3, temp4);\n    // cmp r1, -r0_abs.x, c3, r1.x\n    temp1 = (-abs(temp0).x >= 0) ? (global_shadow_projection[0]._m03_m13_m23_m33) : temp1.x;\n    // cmp r1, -r0_abs.y, c7, r1\n    temp1 = (-abs(temp0).y >= 0) ? (global_shadow_projection[1]._m03_m13_m23_m33) : temp1;\n    // cmp r0, -r0_abs.z, c11, r1\n    temp0 = (-abs(temp0).z >= 0) ? (global_shadow_projection[2]._m03_m13_m23_m33) : temp1;\n    // dp4 r2.w, r3, r0\n    temp2.w = dot(temp3, temp0);\n    // texld r0, r2, s1\n    temp0 = tex2D(shadow_depth, temp2.xy);\n    // mov r1.x, -c12.w\n    temp1.x = -(camera_world_matrix._m00_m10_m20_m30).w;\n    // mov r1.y, -c13.w\n    temp1.y = -(camera_world_matrix._m01_m11_m21_m31).w;\n    // mov r1.z, -c14.w\n    temp1.z = -(camera_world_matrix._m02_m12_m22_m32).w;\n    // add r0.yzw, r1.xxyz, v1.xxyz\n    temp0.yzw = temp1.xyz + i.texcoord5.xyz;\n    // dp3 r1.x, r0.yzww, r0.yzww\n    temp1.x = dot(temp0.yzw, temp0.yzw);\n    // rsq r1.x, r1.x\n    temp1.x = 1 / sqrt(temp1.x);\n    // mul r1.yzw, r0, r1.x\n    temp1.yzw = temp0.yzw * temp1.xxx;\n    // mad r0.yzw, r0, -r1.x, -c15.xxyz\n    temp0.yzw = temp0.yzw * -temp1.xxx + -global_light_dir.xyz;\n    // nrm r2.xyz, r0.yzww\n    temp2.xyz = normalize(temp0.yzww.xyz).xyz;\n    // dp3 r0.y, r1.yzww, c15\n    temp0.y = dot(temp1.yzw, global_light_dir.xyz);\n    // mad_sat r0.y, r0.y, c19.z, c19.z\n    temp0.y = saturate(temp0.y * float1(0.5) + float1(0.5));\n    // nrm_pp r1.xyz, v3\n    temp1.xyz = /* not implemented _pp modifier */ normalize(i.texcoord2.xyz).xyz;\n    // dp3_sat r0.z, -c15, r1\n    temp0.z = saturate(dot(-global_light_dir.xyz, temp1.xyz));\n    // dp3_sat r0.w, r2, r1\n    temp0.w = saturate(dot(temp2.xyz, temp1.xyz));\n    // pow r1.x, r0.w, c19.y\n    temp1.x = pow(temp0.w, float1(511.5));\n    // mul r0.y, r0.z, r0.y\n    temp0.y = temp0.z * temp0.y;\n    // mul r1.yzw, r0.y, c18.xxyz\n    temp1.yzw = temp0.yyy * global_light_col.xyz;\n    // mad r1.yzw, c18.xxyz, r0.z, r1\n    temp1.yzw = global_light_col.xyz * temp0.zzz + temp1.yzw;\n    // mad r1.yzw, r0.x, r1, c17.xxyz\n    temp1.yzw = temp0.xxx * temp1.yzw + GLOBAL_ambient_color.xyz;\n    // add_sat r1.yzw, r1, c19.w\n    temp1.yzw = saturate(temp1.yzw + float3(0.3, 0.3, 0.3));\n    // mul r2.xyz, r0.x, c18\n    temp2.xyz = temp0.xxx * global_light_col.xyz;\n    // mul r2.xyz, r2, c19.x\n    temp2.xyz = temp2.xyz * float3(0.9, 0.9, 0.9);\n    // mul r3.xyz, r1.x, r2\n    temp3.xyz = temp1.xxx * temp2.xyz;\n    // mul r0.xyw, r0.x, r3.xyzz\n    temp0.xyw = temp0.xxx * temp3.xyz;\n    // cmp r0.xyz, -r0.z, c20.x, r0.xyww\n    temp0.xyz = (-temp0.zzz >= 0) ? float3(0, 0, 0) : temp0.xyw;\n    // texld_pp r3, v2, s2\n    temp3 = /* not implemented _pp modifier */ tex2D(diffuse_texture, i.texcoord.xy);\n    // mad r0.xyz, r1.yzww, r3, r0\n    temp0.xyz = temp1.yzw * temp3.xyz + temp0.xyz;\n    // mad_pp oC0.xyz, r2, r1.x, r0\n    out_color.xyz = /* not implemented _pp modifier */ temp2.xyz * temp1.xxx + temp0.xyz;\n    // texld_pp r0, v2, s0\n    temp0 = /* not implemented _pp modifier */ tex2D(opacity_texture, i.texcoord.xy);\n    // mul_pp oC0.w, r0.x, v0.x\n    out_color.w = /* not implemented _pp modifier */ temp0.x * i.texcoord7.x;\n    // \n\n    return out_color;\n}\n")),(0,m.kt)("p",null,"Decompiled by DXDecompiler."))}l.isMDXComponent=!0}}]);