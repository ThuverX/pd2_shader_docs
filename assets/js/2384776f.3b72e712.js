"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[7232],{3905:(e,t,r)=>{r.d(t,{Zo:()=>_,kt:()=>s});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function m(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),i=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):m(m({},t),e)),r},_=function(e){var t=i(e.components);return n.createElement(l.Provider,{value:t},e.children)},x="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,_=p(e,["components","mdxType","originalType","parentName"]),x=i(r),c=a,s=x["".concat(l,".").concat(c)]||x[c]||d[c]||o;return r?n.createElement(s,m(m({ref:t},_),{},{components:r})):n.createElement(s,m({ref:t},_))}));function s(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,m=new Array(o);m[0]=c;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[x]="string"==typeof e?e:a,m[1]=p;for(var i=2;i<o;i++)m[i]=r[i];return n.createElement.apply(null,m)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},7833:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>m,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>i});var n=r(7462),a=(r(7294),r(3905));const o={id:0x39d8b7a7a15b9600,title:"Global Lighting Default"},m="Global Lighting Default",p={unversionedId:"Generated/Shaders/Deferred Lighting/4168283385725949400",id:"Generated/Shaders/Deferred Lighting/4168283385725949400",title:"Global Lighting Default",description:"(global_lighting:default, 0x39d8b7a7a15b962b)",source:"@site/docs/Generated/Shaders/Deferred Lighting/0x39d8b7a7a15b962b.mdx",sourceDirName:"Generated/Shaders/Deferred Lighting",slug:"/Generated/Shaders/Deferred Lighting/4168283385725949400",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Deferred Lighting/4168283385725949400",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/Generated/Shaders/Deferred Lighting/0x39d8b7a7a15b962b.mdx",tags:[],version:"current",frontMatter:{id:"4168283385725949400",title:"Global Lighting Default"},sidebar:"docsSidebar",previous:{title:"Spot Default Hq Invsq Specular",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Deferred Lighting/3905394767973905000"},next:{title:"Global Shadow Mask Default Dx9 Hwsm Slice0",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Deferred Lighting/273518799860599580"}},l={},i=[{value:"Technique <code>ambient</code>",id:"technique-ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Sampler 1",id:"sampler-1",level:4},{value:"Sampler 2",id:"sampler-2",level:4},{value:"Sampler 3",id:"sampler-3",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],_={toc:i},x="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(x,(0,n.Z)({},_,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"global-lighting-default"},"Global Lighting Default"),(0,a.kt)("p",null,"(",(0,a.kt)("inlineCode",{parentName:"p"},"global_lighting:default"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"0x39d8b7a7a15b962b"),")"),(0,a.kt)("p",null,"This template is referenced 1 time by ",(0,a.kt)("a",{parentName:"p",href:"/docs/Generated/Render%20Templates/deferred_lighting.render_template_database#global-lighting"},"global_lighting"),"."),(0,a.kt)("h3",{id:"technique-ambient"},"Technique ",(0,a.kt)("inlineCode",{parentName:"h3"},"ambient")),(0,a.kt)("h3",{id:"render-states"},"Render States"),(0,a.kt)("p",null,"More info can be found on the ",(0,a.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 0,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 0,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 1,\n    D3DRS_COLORWRITEENABLE = 15,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 1,\n    D3DRS_STENCILFUNC = 6,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = -1,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 5,\n    D3DRS_STENCILWRITEMASK = 255,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,a.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,a.kt)("p",null,"More info can be found on the ",(0,a.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,a.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 1,\n    D3DSAMP_MINFILTER = 1,\n    D3DSAMP_MIPFILTER = 1,\n};\n")),(0,a.kt)("h4",{id:"sampler-1"},"Sampler 1"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 1,\n    D3DSAMP_MINFILTER = 1,\n    D3DSAMP_MIPFILTER = 1,\n};\n")),(0,a.kt)("h4",{id:"sampler-2"},"Sampler 2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 1,\n    D3DSAMP_MINFILTER = 1,\n    D3DSAMP_MIPFILTER = 1,\n};\n")),(0,a.kt)("h4",{id:"sampler-3"},"Sampler 3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 1,\n    D3DSAMP_MINFILTER = 1,\n    D3DSAMP_MIPFILTER = 1,\n};\n")),(0,a.kt)("h3",{id:"shaders"},"Shaders"),(0,a.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x4 camera_inv_view_matrix : register(vs_3_0, c4);\nfloat3 camera_unprojection : register(vs_3_0, c7);\ncolumn_major float4x4 view_proj_matrix : register(vs_3_0, c0);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 texcoord : TEXCOORD;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float2 texcoord : TEXCOORD;\n    float3 texcoord1 : TEXCOORD1;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float2 temp0;\n    float3 temp1;\n    // def c8, 1, 0, 0, 0\n    // dcl_position v0\n    // dcl_texcoord v1\n    // dcl_position o0\n    // dcl_texcoord o1.xy\n    // dcl_texcoord1 o2.xyz\n    // dp4 o0.z, v0, c2\n    o.position.z = dot(i.position, (view_proj_matrix._m02_m12_m22_m32));\n    // dp4 o0.w, v0, c3\n    o.position.w = dot(i.position, (view_proj_matrix._m03_m13_m23_m33));\n    // dp4 r0.x, v0, c0\n    temp0.x = dot(i.position, (view_proj_matrix._m00_m10_m20_m30));\n    // dp4 r0.y, v0, c1\n    temp0.y = dot(i.position, (view_proj_matrix._m01_m11_m21_m31));\n    // mul r1.xy, r0, c7\n    temp1.xy = temp0.xy * camera_unprojection.xy;\n    // mov o0.xy, r0\n    o.position.xy = temp0.xy;\n    // mov r1.z, c8.x\n    temp1.z = float1(1);\n    // dp3 o2.x, r1, c4\n    o.texcoord1.x = dot(temp1.xyz, (camera_inv_view_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o2.y, r1, c5\n    o.texcoord1.y = dot(temp1.xyz, (camera_inv_view_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o2.z, r1, c6\n    o.texcoord1.z = dot(temp1.xyz, (camera_inv_view_matrix._m02_m12_m22_m32).xyz);\n    // mov o1.xy, v1\n    o.texcoord = i.texcoord;\n    // \n\n    return o;\n}\n")),(0,a.kt)("p",null,"Decompiled by DXDecompiler."),(0,a.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-hlsl"},"sampler2D albedo : register(ps_3_0, s0);\ncolumn_major float4x4 camera_world_matrix : register(ps_3_0, c0);\nsampler2D depth : register(ps_3_0, s2);\nsampler2D diffuse_texture : register(ps_3_0, s1);\nfloat3 global_light_col : register(ps_3_0, c7);\nfloat3 global_light_dir : register(ps_3_0, c6);\nfloat3 ref_ambient_color : register(ps_3_0, c3);\nfloat3 ref_fog_far_low_color : register(ps_3_0, c9);\nfloat ref_fog_max_density : register(ps_3_0, c12);\nfloat ref_fog_max_range : register(ps_3_0, c11);\nfloat ref_fog_min_range : register(ps_3_0, c10);\nfloat3 ref_fog_start_color : register(ps_3_0, c8);\nfloat3 ref_sky_bottom_color : register(ps_3_0, c5);\nfloat3 ref_sky_top_color : register(ps_3_0, c4);\nsampler2D temp : register(ps_3_0, s3);\nstruct PixelMain_Input\n{\n    float2 texcoord : TEXCOORD;\n    float3 texcoord1 : TEXCOORD1;\n};\n\nfloat4 PixelMain(PixelMain_Input i) : COLOR\n{\n    float4 out_color;\n    float4 temp0, temp2;\n    float3 temp1;\n    // def c13, -0.5, 2, 1, 0.5\n    // def c14, 200, 0.2, 0, 11.2\n    // def c15, 1.68, 0.05, 0.004, 0.5\n    // def c16, 0.06, -0.06666667, 0, 0\n    // dcl_texcoord v0.xy\n    // dcl_texcoord1 v1.xyz\n    // dcl_2d s0\n    // dcl_2d s1\n    // dcl_2d s2\n    // dcl_2d s3\n    // texld r0, v0, s2\n    temp0 = tex2D(depth, i.texcoord.xy);\n    // mov r1.x, c0.w\n    temp1.x = (camera_world_matrix._m00_m10_m20_m30).w;\n    // mov r1.y, c1.w\n    temp1.y = (camera_world_matrix._m01_m11_m21_m31).w;\n    // mov r1.z, c2.w\n    temp1.z = (camera_world_matrix._m02_m12_m22_m32).w;\n    // mad r0.yzw, v1.xxyz, r0.x, r1.xxyz\n    temp0.yzw = i.texcoord1.xyz * temp0.xxx + temp1.xyz;\n    // add r0.x, r0.x, -c10.x\n    temp0.x = temp0.x + -ref_fog_min_range.x;\n    // add r0.yzw, -r0, r1.xxyz\n    temp0.yzw = -temp0.yzw + temp1.xyz;\n    // nrm r1.xyz, r0.yzww\n    temp1.xyz = normalize(temp0.yzww.xyz).xyz;\n    // texld r2, v0, s1\n    temp2 = tex2D(diffuse_texture, i.texcoord.xy);\n    // add_pp r0.yzw, r2.xxyz, c13.x\n    temp0.yzw = /* not implemented _pp modifier */ temp2.xyz + float3(-0.5, -0.5, -0.5);\n    // add_pp r2.xyz, r0.yzww, r0.yzww\n    temp2.xyz = /* not implemented _pp modifier */ temp0.yzw + temp0.yzw;\n    // mad r0.y, r0.w, c13.y, c13.z\n    temp0.y = temp0.w * float1(2) + float1(1);\n    // dp3_sat r0.z, r2, r1\n    temp0.z = saturate(dot(temp2.xyz, temp1.xyz));\n    // dp3_sat r0.w, -c6, r2\n    temp0.w = saturate(dot(-global_light_dir.xyz, temp2.xyz));\n    // mad r1.x, r2.w, c14.x, c14.y\n    temp1.x = temp2.w * float1(200) + float1(0.2);\n    // pow r2.x, r0.z, r1.x\n    temp2.x = pow(temp0.z, temp1.x);\n    // mul r0.z, r2.w, r2.x\n    temp0.z = temp2.w * temp2.x;\n    // mad r1.x, r0.y, -c13.w, c13.z\n    temp1.x = temp0.y * float1(-0.5) + float1(1);\n    // mul r0.y, r0.y, c13.w\n    temp0.y = temp0.y * float1(0.5);\n    // mov r2.xyz, c5\n    temp2.xyz = ref_sky_bottom_color.xyz;\n    // mad r1.xyz, r2, r1.x, c3\n    temp1.xyz = temp2.xyz * temp1.xxx + ref_ambient_color.xyz;\n    // mad r1.xyz, c4, r0.y, r1\n    temp1.xyz = ref_sky_top_color.xyz * temp0.yyy + temp1.xyz;\n    // texld r2, v0, s3\n    temp2 = tex2D(temp, i.texcoord.xy);\n    // mul r0.y, r0.w, r2.w\n    temp0.y = temp0.w * temp2.w;\n    // mad r1.xyz, c7, r0.y, r1\n    temp1.xyz = global_light_col.xyz * temp0.yyy + temp1.xyz;\n    // mad r1.xyz, r2, c13.y, r1\n    temp1.xyz = temp2.xyz * float3(2, 2, 2) + temp1.xyz;\n    // mul r0.yzw, r0.z, r1.xxyz\n    temp0.yzw = temp0.zzz * temp1.xyz;\n    // texld r2, v0, s0\n    temp2 = tex2D(albedo, i.texcoord.xy);\n    // mad r0.yzw, r2.xxyz, r1.xxyz, r0\n    temp0.yzw = temp2.xyz * temp1.xyz + temp0.yzw;\n    // mad r1.xyz, r0.yzww, c15.x, c15.y\n    temp1.xyz = temp0.yzw * float3(1.68, 1.68, 1.68) + float3(0.05, 0.05, 0.05);\n    // mul r2.xyz, r0.yzww, c14.w\n    temp2.xyz = temp0.yzw * float3(11.2, 11.2, 11.2);\n    // mad r0.yzw, r0, c15.x, c15.w\n    temp0.yzw = temp0.yzw * float3(1.68, 1.68, 1.68) + float3(0.5, 0.5, 0.5);\n    // mad r0.yzw, r2.xxyz, r0, c16.x\n    temp0.yzw = temp2.xyz * temp0.yzw + float3(0.06, 0.06, 0.06);\n    // mad r1.xyz, r2, r1, c15.z\n    temp1.xyz = temp2.xyz * temp1.xyz + float3(0.004, 0.004, 0.004);\n    // rcp r2.x, r0.y\n    temp2.x = 1.0f / temp0.y;\n    // rcp r2.y, r0.z\n    temp2.y = 1.0f / temp0.z;\n    // rcp r2.z, r0.w\n    temp2.z = 1.0f / temp0.w;\n    // mad r0.yzw, r1.xxyz, r2.xxyz, c16.y\n    temp0.yzw = temp1.xyz * temp2.xyz + float3(-0.06666667, -0.06666667, -0.06666667);\n    // rcp r1.x, c11.x\n    temp1.x = 1.0f / ref_fog_max_range.x;\n    // mul r0.x, r0.x, r1.x\n    temp0.x = temp0.x * temp1.x;\n    // max r1.x, r0.x, c14.z\n    temp1.x = max(temp0.x, float1(0));\n    // min r0.x, c12.x, r1.x\n    temp0.x = min(ref_fog_max_density.x, temp1.x);\n    // add r0.x, -r0.x, c13.z\n    temp0.x = -temp0.x + float1(1);\n    // mul r0.x, r0.x, r0.x\n    temp0.x = temp0.x * temp0.x;\n    // mul r0.x, r0.x, r0.x\n    temp0.x = temp0.x * temp0.x;\n    // mov r1.xyz, c9\n    temp1.xyz = ref_fog_far_low_color.xyz;\n    // add r1.xyz, -r1, c8\n    temp1.xyz = -temp1.xyz + ref_fog_start_color.xyz;\n    // mad r1.xyz, r0.x, r1, c9\n    temp1.xyz = temp0.xxx * temp1.xyz + ref_fog_far_low_color.xyz;\n    // add r0.yzw, r0, -r1.xxyz\n    temp0.yzw = temp0.yzw + -temp1.xyz;\n    // mad oC0.xyz, r0.x, r0.yzww, r1\n    out_color.xyz = temp0.xxx * temp0.yzw + temp1.xyz;\n    // mov oC0.w, c14.z\n    out_color.w = float1(0);\n    // \n\n    return out_color;\n}\n")),(0,a.kt)("p",null,"Decompiled by DXDecompiler."))}d.isMDXComponent=!0}}]);