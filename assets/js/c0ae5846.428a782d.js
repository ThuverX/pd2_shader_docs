"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[2756],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>_});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},p=Object.keys(e);for(r=0;r<p.length;r++)n=p[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)n=p[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var m=r.createContext({}),x=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=x(e.components);return r.createElement(m.Provider,{value:t},e.children)},i="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,p=e.originalType,m=e.parentName,l=d(e,["components","mdxType","originalType","parentName"]),i=x(n),s=o,_=i["".concat(m,".").concat(s)]||i[s]||c[s]||p;return n?r.createElement(_,a(a({ref:t},l),{},{components:n})):r.createElement(_,a({ref:t},l))}));function _(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var p=n.length,a=new Array(p);a[0]=s;var d={};for(var m in t)hasOwnProperty.call(t,m)&&(d[m]=t[m]);d.originalType=e,d[i]="string"==typeof e?e:o,a[1]=d;for(var x=2;x<p;x++)a[x]=n[x];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},287:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>a,default:()=>c,frontMatter:()=>p,metadata:()=>d,toc:()=>x});var r=n(7462),o=(n(7294),n(3905));const p={id:0x5616ceee9c9a3800,title:"Dof Initial Downsample Default"},a="Dof Initial Downsample Default",d={unversionedId:"Generated/Shaders/Filters/6203373060974328000",id:"Generated/Shaders/Filters/6203373060974328000",title:"Dof Initial Downsample Default",description:"(dofinitialdownsample:default, 0x5616ceee9c9a39fa)",source:"@site/docs/Generated/Shaders/Filters/0x5616ceee9c9a39fa.mdx",sourceDirName:"Generated/Shaders/Filters",slug:"/Generated/Shaders/Filters/6203373060974328000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Filters/6203373060974328000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/Generated/Shaders/Filters/0x5616ceee9c9a39fa.mdx",tags:[],version:"current",frontMatter:{id:"6203373060974328000",title:"Dof Initial Downsample Default"},sidebar:"docsSidebar",previous:{title:"Gaussian Blur Alpha Not 0 Default",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Filters/5330468984049464000"},next:{title:"Scene Exposure Default",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Filters/6786790251552939000"}},m={},x=[{value:"Technique <code>ambient</code>",id:"technique-ambient",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Sampler 1",id:"sampler-1",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],l={toc:x},i="wrapper";function c(e){let{components:t,...n}=e;return(0,o.kt)(i,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"dof-initial-downsample-default"},"Dof Initial Downsample Default"),(0,o.kt)("p",null,"(",(0,o.kt)("inlineCode",{parentName:"p"},"dof_initial_downsample:default"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"0x5616ceee9c9a39fa"),")"),(0,o.kt)("p",null,"This template is referenced 1 time by ",(0,o.kt)("a",{parentName:"p",href:"/docs/Generated/Render%20Templates/filters.render_template_database#dof-initial-downsample"},"dof_initial_downsample"),"."),(0,o.kt)("h3",{id:"technique-ambient"},"Technique ",(0,o.kt)("inlineCode",{parentName:"h3"},"ambient")),(0,o.kt)("h3",{id:"render-states"},"Render States"),(0,o.kt)("p",null,"More info can be found on the ",(0,o.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3drenderstatetype"},"Direct3D Docs")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 0,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 0,\n    D3DRS_ALPHABLENDENABLE = 0,\n    D3DRS_CULLMODE = 1,\n    D3DRS_COLORWRITEENABLE = 15,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n};\n")),(0,o.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,o.kt)("p",null,"More info can be found on the ",(0,o.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/windows/win32/direct3d9/d3dsamplerstatetype"},"Direct3D Docs")),(0,o.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 2,\n    D3DSAMP_MINFILTER = 2,\n    D3DSAMP_MIPFILTER = 2,\n};\n")),(0,o.kt)("h4",{id:"sampler-1"},"Sampler 1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 1,\n    D3DSAMP_MINFILTER = 1,\n    D3DSAMP_MIPFILTER = 1,\n};\n")),(0,o.kt)("h3",{id:"shaders"},"Shaders"),(0,o.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"float3 render_target_size : register(vs_3_0, c4);\ncolumn_major float4x4 view_proj_matrix : register(vs_3_0, c0);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 texcoord : TEXCOORD;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float2 texcoord : TEXCOORD;\n    float2 texcoord1 : TEXCOORD1;\n    float2 texcoord2 : TEXCOORD2;\n    float2 texcoord3 : TEXCOORD3;\n    float2 texcoord4 : TEXCOORD4;\n    float2 texcoord5 : TEXCOORD5;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float2 temp0;\n    // def c5, 0.125, -0.375, 0.375, 1\n    // def c6, -0.25, 0.25, -0.375, -0.125\n    // dcl_position v0\n    // dcl_texcoord v1\n    // dcl_position o0\n    // dcl_texcoord o1.xy\n    // dcl_texcoord1 o2.xy\n    // dcl_texcoord2 o3.xy\n    // dcl_texcoord3 o4.xy\n    // dcl_texcoord4 o5.xy\n    // dcl_texcoord5 o6.xy\n    // dp4 o0.x, v0, c0\n    o.position.x = dot(i.position, (view_proj_matrix._m00_m10_m20_m30));\n    // dp4 o0.y, v0, c1\n    o.position.y = dot(i.position, (view_proj_matrix._m01_m11_m21_m31));\n    // dp4 o0.w, v0, c3\n    o.position.w = dot(i.position, (view_proj_matrix._m03_m13_m23_m33));\n    // rcp r0.x, c4.x\n    temp0.x = 1.0f / render_target_size.x;\n    // rcp r0.y, c4.y\n    temp0.y = 1.0f / render_target_size.y;\n    // mad o1.xy, r0, c6.x, v1\n    o.texcoord = temp0 * float4(-0.25, -0.25, -0.25, -0.25) + i.texcoord;\n    // mad o2.xy, r0, c6.yxzw, v1\n    o.texcoord1 = temp0 * float4(0.25, -0.25, -0.375, -0.125) + i.texcoord;\n    // mad o3.xy, r0, c6.z, v1\n    o.texcoord2 = temp0 * float4(-0.375, -0.375, -0.375, -0.375) + i.texcoord;\n    // mad o4.xy, r0, c6.wzzw, v1\n    o.texcoord3 = temp0 * float4(-0.125, -0.375, -0.375, -0.125) + i.texcoord;\n    // mad o5.xy, r0, c5, v1\n    o.texcoord4 = temp0 * float4(0.125, -0.375, 0.375, 1) + i.texcoord;\n    // mad o6.xy, r0, c5.zyzw, v1\n    o.texcoord5 = temp0 * float4(0.375, -0.375, 0.375, 1) + i.texcoord;\n    // mov o0.z, c5.w\n    o.position.z = float1(1);\n    // \n\n    return o;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."),(0,o.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"sampler2D depth : register(ps_3_0, s1);\nsampler2D diffuse_texture : register(ps_3_0, s0);\nfloat ref_near_focus_distance_max : register(ps_3_0, c1);\nfloat ref_near_focus_distance_min : register(ps_3_0, c2);\nfloat3 render_target_size : register(ps_3_0, c0);\nstruct PixelMain_Input\n{\n    float2 texcoord : TEXCOORD;\n    float2 texcoord1 : TEXCOORD1;\n    float2 texcoord2 : TEXCOORD2;\n    float2 texcoord3 : TEXCOORD3;\n    float2 texcoord4 : TEXCOORD4;\n    float2 texcoord5 : TEXCOORD5;\n};\n\nfloat4 PixelMain(PixelMain_Input i) : COLOR\n{\n    float4 out_color;\n    float4 temp0, temp1, temp2, temp3, temp4, temp5, temp6;\n    // def c3, 0.25, 0, 0.5, 0.75\n    // def c4, 2, 3, 0, 0.5\n    // dcl_texcoord v0.xy\n    // dcl_texcoord1 v1.xy\n    // dcl_texcoord2 v2.xy\n    // dcl_texcoord3 v3.xy\n    // dcl_texcoord4 v4.xy\n    // dcl_texcoord5 v5.xy\n    // dcl_2d s0\n    // dcl_2d s1\n    // texld_pp r0, v0, s0\n    temp0 = /* not implemented _pp modifier */ tex2D(diffuse_texture, i.texcoord.xy);\n    // texld r1, v1, s0\n    temp1 = tex2D(diffuse_texture, i.texcoord1.xy);\n    // add_pp r0.xyz, r0, r1\n    temp0.xyz = /* not implemented _pp modifier */ temp0.xyz + temp1.xyz;\n    // rcp r1.x, c0.y\n    temp1.x = 1.0f / render_target_size.y;\n    // mov r1.yz, c4.xxyw\n    temp1.yz = float2(2, 3);\n    // mad r2.xy, r1.yxzw, c4.zwzw, v0\n    temp2.xy = temp1.yx * float2(0, 0.5) + i.texcoord.xy;\n    // texld r2, r2, s0\n    temp2 = tex2D(diffuse_texture, temp2.xy);\n    // add_pp r0.xyz, r0, r2\n    temp0.xyz = /* not implemented _pp modifier */ temp0.xyz + temp2.xyz;\n    // mad r2.xy, r1.yxzw, c4.zwzw, v1\n    temp2.xy = temp1.yx * float2(0, 0.5) + i.texcoord1.xy;\n    // texld r2, r2, s0\n    temp2 = tex2D(diffuse_texture, temp2.xy);\n    // add_pp r0.xyz, r0, r2\n    temp0.xyz = /* not implemented _pp modifier */ temp0.xyz + temp2.xyz;\n    // mul_pp oC0.xyz, r0, c3.x\n    out_color.xyz = /* not implemented _pp modifier */ temp0.xyz * float3(0.25, 0.25, 0.25);\n    // mad r0.xy, c3.ywzw, r1.zxzw, v2\n    temp0.xy = float2(0, 0.75) * temp1.zx + i.texcoord2.xy;\n    // texld r0, r0, s1\n    temp0 = tex2D(depth, temp0.xy);\n    // mad r2.xy, c3.ywzw, r1.zxzw, v3\n    temp2.xy = float2(0, 0.75) * temp1.zx + i.texcoord3.xy;\n    // texld r2, r2, s1\n    temp2 = tex2D(depth, temp2.xy);\n    // mov r0.y, r2.x\n    temp0.y = temp2.x;\n    // mad r2.xy, c3.ywzw, r1.zxzw, v4\n    temp2.xy = float2(0, 0.75) * temp1.zx + i.texcoord4.xy;\n    // texld r2, r2, s1\n    temp2 = tex2D(depth, temp2.xy);\n    // mov r0.z, r2.x\n    temp0.z = temp2.x;\n    // mad r1.zw, c3.xyyw, r1.xyzx, v5.xyxy\n    temp1.zw = float2(0, 0.75) * temp1.zx + i.texcoord5.xy;\n    // mul r2.yzw, r1.xxyx, c3.xxyz\n    temp2.yzw = temp1.xyx * float3(0.25, 0, 0.5);\n    // texld r1, r1.zwzw, s1\n    temp1 = tex2D(depth, temp1.zw);\n    // mov r0.w, r1.x\n    temp0.w = temp1.x;\n    // rcp r1.x, c2.x\n    temp1.x = 1.0f / ref_near_focus_distance_min.x;\n    // mul r1.y, r1.x, c1.x\n    temp1.y = temp1.x * ref_near_focus_distance_max.x;\n    // mad_sat_pp r0, -r1.x, r0, r1.y\n    ;// error\n    // mov r2.x, c4.z\n    temp2.x = float1(0);\n    // add r3, r2, v2.xyxy\n    temp3 = temp2 + i.texcoord2.xyxy;\n    // texld r4, r3, s1\n    temp4 = tex2D(depth, temp3.xy);\n    // texld r3, r3.zwzw, s1\n    temp3 = tex2D(depth, temp3.zw);\n    // add r5, r2, v3.xyxy\n    temp5 = temp2 + i.texcoord3.xyxy;\n    // texld r6, r5, s1\n    temp6 = tex2D(depth, temp5.xy);\n    // texld r5, r5.zwzw, s1\n    temp5 = tex2D(depth, temp5.zw);\n    // mov r3.y, r5.x\n    temp3.y = temp5.x;\n    // mov r4.y, r6.x\n    temp4.y = temp6.x;\n    // add r5, r2, v4.xyxy\n    temp5 = temp2 + i.texcoord4.xyxy;\n    // add r2, r2, v5.xyxy\n    temp2 = temp2 + i.texcoord5.xyxy;\n    // texld r6, r5, s1\n    temp6 = tex2D(depth, temp5.xy);\n    // texld r5, r5.zwzw, s1\n    temp5 = tex2D(depth, temp5.zw);\n    // mov r3.z, r5.x\n    temp3.z = temp5.x;\n    // mov r4.z, r6.x\n    temp4.z = temp6.x;\n    // texld r5, r2, s1\n    temp5 = tex2D(depth, temp2.xy);\n    // texld r2, r2.zwzw, s1\n    temp2 = tex2D(depth, temp2.zw);\n    // mov r3.w, r2.x\n    temp3.w = temp2.x;\n    // mad_sat_pp r2, -r1.x, r3, r1.y\n    ;// error\n    // mov r4.w, r5.x\n    temp4.w = temp5.x;\n    // mad_sat_pp r3, -r1.x, r4, r1.y\n    ;// error\n    // texld r4, v2, s1\n    temp4 = tex2D(depth, i.texcoord2.xy);\n    // texld r5, v3, s1\n    temp5 = tex2D(depth, i.texcoord3.xy);\n    // mov r4.y, r5.x\n    temp4.y = temp5.x;\n    // texld r5, v4, s1\n    temp5 = tex2D(depth, i.texcoord4.xy);\n    // mov r4.z, r5.x\n    temp4.z = temp5.x;\n    // texld r5, v5, s1\n    temp5 = tex2D(depth, i.texcoord5.xy);\n    // mov r4.w, r5.x\n    temp4.w = temp5.x;\n    // mad_sat_pp r1, -r1.x, r4, r1.y\n    ;// error\n    // max_pp r4, r3, r1\n    temp4 = /* not implemented _pp modifier */ max(temp3, temp1);\n    // max_pp r1, r2, r4\n    temp1 = /* not implemented _pp modifier */ max(temp2, temp4);\n    // max_pp r2, r0, r1\n    temp2 = /* not implemented _pp modifier */ max(temp0, temp1);\n    // max_pp r0.xy, r2.xzzw, r2.ywzw\n    temp0.xy = /* not implemented _pp modifier */ max(temp2.xz, temp2.yw);\n    // max_pp oC0.w, r0.x, r0.y\n    out_color.w = /* not implemented _pp modifier */ max(temp0.x, temp0.y);\n    // \n\n    return out_color;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."))}c.isMDXComponent=!0}}]);