"use strict";(self.webpackChunkpd_2_shader_docs=self.webpackChunkpd_2_shader_docs||[]).push([[16189],{3905:(e,t,r)=>{r.d(t,{Zo:()=>_,kt:()=>s});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function m(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),d=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):m(m({},t),e)),r},_=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},i="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},x=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,_=p(e,["components","mdxType","originalType","parentName"]),i=d(r),x=o,s=i["".concat(l,".").concat(x)]||i[x]||c[x]||a;return r?n.createElement(s,m(m({ref:t},_),{},{components:r})):n.createElement(s,m({ref:t},_))}));function s(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,m=new Array(a);m[0]=x;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[i]="string"==typeof e?e:o,m[1]=p;for(var d=2;d<a;d++)m[d]=r[d];return n.createElement.apply(null,m)}return n.createElement.apply(null,r)}x.displayName="MDXCreateElement"},62067:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>m,default:()=>c,frontMatter:()=>a,metadata:()=>p,toc:()=>d});var n=r(87462),o=(r(67294),r(3905));const a={id:0xe13a3090ce165000,title:"Effect Default Blend Add Diffuse0 Texture Intersection Fadeout Vertex Color View Angle Falloff Op"},m="Effect Default Blend Add Diffuse0 Texture Intersection Fadeout Vertex Color View Angle Falloff Op",p={unversionedId:"Generated/Shaders/Base/[4200-4300]/16229337605673996000",id:"Generated/Shaders/Base/[4200-4300]/16229337605673996000",title:"Effect Default Blend Add Diffuse0 Texture Intersection Fadeout Vertex Color View Angle Falloff Op",description:"(effectBLENDADDINTERSECTIONFADEOUTVIEWANGLEFALLOFF_OP, 0xe13a3090ce164c2e)",source:"@site/docs/Generated/Shaders/Base/[4200-4300]/0xe13a3090ce164c2e.mdx",sourceDirName:"Generated/Shaders/Base/[4200-4300]",slug:"/Generated/Shaders/Base/[4200-4300]/16229337605673996000",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[4200-4300]/16229337605673996000",draft:!1,editUrl:"https://github.com/thuverx/pd2_shader_docs/tree/main/docs/docs/Generated/Shaders/Base/[4200-4300]/0xe13a3090ce164c2e.mdx",tags:[],version:"current",frontMatter:{id:"16229337605673996000",title:"Effect Default Blend Add Diffuse0 Texture Intersection Fadeout Vertex Color View Angle Falloff Op"},sidebar:"docsSidebar",previous:{title:"Generic Default Alpha Masked Diffuse Texture Diffuse Uvanim External Alpha Ref Vegetation Bending",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[4200-4300]/16224538869846460000"},next:{title:"Generic Default Cube Environment Mapping Cube Environment Mapping Water Diffuse Texture Water Big",permalink:"/pd2_shader_docs/docs/Generated/Shaders/Base/[4200-4300]/16238597940029860000"}},l={},d=[{value:"Technique <code>transparent</code>",id:"technique-transparent",level:3},{value:"Render States",id:"render-states",level:3},{value:"Sampler States",id:"sampler-states",level:3},{value:"Sampler 0",id:"sampler-0",level:4},{value:"Sampler 1",id:"sampler-1",level:4},{value:"Shaders",id:"shaders",level:3},{value:"Vertex Shader",id:"vertex-shader",level:4},{value:"Pixel Shader",id:"pixel-shader",level:4}],_={toc:d},i="wrapper";function c(e){let{components:t,...r}=e;return(0,o.kt)(i,(0,n.Z)({},_,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"effect-default-blend-add-diffuse0-texture-intersection-fadeout-vertex-color-view-angle-falloff-op"},"Effect Default Blend Add Diffuse0 Texture Intersection Fadeout Vertex Color View Angle Falloff Op"),(0,o.kt)("p",null,"(",(0,o.kt)("inlineCode",{parentName:"p"},"effect:default:BLEND_ADD:DIFFUSE0_TEXTURE:INTERSECTION_FADEOUT:VERTEX_COLOR:VIEW_ANGLE_FALLOFF_OP"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"0xe13a3090ce164c2e"),")"),(0,o.kt)("h3",{id:"technique-transparent"},"Technique ",(0,o.kt)("inlineCode",{parentName:"h3"},"transparent")),(0,o.kt)("h3",{id:"render-states"},"Render States"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DRENDERSTATETYPE {\n    D3DRS_ZENABLE = 1,\n    D3DRS_ZFUNC = 4,\n    D3DRS_ZWRITEENABLE = 0,\n    D3DRS_ALPHABLENDENABLE = 1,\n    D3DRS_CULLMODE = 2,\n    D3DRS_COLORWRITEENABLE = 7,\n    D3DRS_COLORWRITEENABLE1 = 15,\n    D3DRS_COLORWRITEENABLE2 = 15,\n    D3DRS_STENCILENABLE = 0,\n    D3DRS_STENCILFUNC = 1,\n    D3DRS_STENCILFAIL = 1,\n    D3DRS_STENCILMASK = 0,\n    D3DRS_STENCILPASS = 1,\n    D3DRS_STENCILREF = 0,\n    D3DRS_STENCILWRITEMASK = 0,\n    D3DRS_STENCILZFAIL = 1,\n    D3DRS_DEPTHBIAS = 0,\n    D3DRS_SLOPESCALEDEPTHBIAS = 0,\n    D3DRS_FOGENABLE = 0,\n    D3DRS_SPECULARENABLE = 0,\n    D3DRS_ADAPTIVETESS_X = 0,\n    D3DRS_ADAPTIVETESS_Z = 0,\n    D3DRS_ADAPTIVETESS_W = 0,\n    D3DRS_SRGBWRITEENABLE = 0,\n    D3DRS_SEPARATEALPHABLENDENABLE = 0,\n    D3DRS_ALPHATESTENABLE = 0,\n    D3DRS_BLENDOP = 1,\n    D3DRS_DESTBLEND = 2,\n    D3DRS_SRCBLEND = 5,\n};\n")),(0,o.kt)("h3",{id:"sampler-states"},"Sampler States"),(0,o.kt)("h4",{id:"sampler-0"},"Sampler 0"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 1,\n    D3DSAMP_ADDRESSU = 1,\n    D3DSAMP_ADDRESSV = 1,\n    D3DSAMP_MAGFILTER = 3,\n    D3DSAMP_MINFILTER = 3,\n    D3DSAMP_MIPFILTER = 3,\n};\n")),(0,o.kt)("h4",{id:"sampler-1"},"Sampler 1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"enum D3DSAMPLERSTATETYPE {\n    D3DSAMP_MIPMAPLODBIAS = 827606343,\n    D3DSAMP_SRGBTEXTURE = 0,\n    D3DSAMP_ADDRESSU = 3,\n    D3DSAMP_ADDRESSV = 3,\n    D3DSAMP_MAGFILTER = 1,\n    D3DSAMP_MINFILTER = 1,\n    D3DSAMP_MIPFILTER = 1,\n};\n")),(0,o.kt)("h3",{id:"shaders"},"Shaders"),(0,o.kt)("h4",{id:"vertex-shader"},"Vertex Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"column_major float4x4 camera_world_matrix : register(vs_3_0, c12);\ncolumn_major float4x4 proj_matrix : register(vs_3_0, c8);\nfloat3 render_target_texel_offset : register(vs_3_0, c15);\ncolumn_major float4x4 view_matrix : register(vs_3_0, c4);\nfloat3 vp_offset : register(vs_3_0, c16);\nfloat3 vp_size : register(vs_3_0, c17);\ncolumn_major float4x4 world_matrix : register(vs_3_0, c0);\nstruct VertexMain_Input\n{\n    float4 position : POSITION;\n    float4 color : COLOR;\n    float4 normal : NORMAL;\n    float4 texcoord : TEXCOORD;\n};\n\nstruct VertexMain_Output\n{\n    float4 position : POSITION;\n    float4 color : COLOR;\n    float3 texcoord3 : TEXCOORD3;\n    float3 texcoord4 : TEXCOORD4;\n    float2 texcoord : TEXCOORD;\n    float4 texcoord6 : TEXCOORD6;\n};\n\nVertexMain_Output VertexMain(VertexMain_Input i)\n{\n    VertexMain_Output o;\n    float4 temp0, temp1, temp2;\n    float2 temp3;\n    // def c18, 2, -1, 0.5, 1\n    // dcl_position v0\n    // dcl_color v1\n    // dcl_normal v2\n    // dcl_texcoord v3\n    // dcl_position o0\n    // dcl_color o1\n    // dcl_texcoord3 o2.xyz\n    // dcl_texcoord4 o3.xyz\n    // dcl_texcoord o4.xy\n    // dcl_texcoord6 o5\n    // mad r0.xyz, v2, c18.x, c18.y\n    temp0.xyz = i.normal.xyz * float3(2, 2, 2) + float3(-1, -1, -1);\n    // dp3 o2.x, r0, c0\n    o.texcoord3.x = dot(temp0.xyz, (world_matrix._m00_m10_m20_m30).xyz);\n    // dp3 o2.y, r0, c1\n    o.texcoord3.y = dot(temp0.xyz, (world_matrix._m01_m11_m21_m31).xyz);\n    // dp3 o2.z, r0, c2\n    o.texcoord3.z = dot(temp0.xyz, (world_matrix._m02_m12_m22_m32).xyz);\n    // dp4 r0.x, v0, c0\n    temp0.x = dot(i.position, (world_matrix._m00_m10_m20_m30));\n    // add r1.x, -r0.x, c12.w\n    temp1.x = -temp0.x + (camera_world_matrix._m00_m10_m20_m30).w;\n    // dp4 r0.y, v0, c1\n    temp0.y = dot(i.position, (world_matrix._m01_m11_m21_m31));\n    // add r1.y, -r0.y, c13.w\n    temp1.y = -temp0.y + (camera_world_matrix._m01_m11_m21_m31).w;\n    // dp4 r0.z, v0, c2\n    temp0.z = dot(i.position, (world_matrix._m02_m12_m22_m32));\n    // add r1.z, -r0.z, c14.w\n    temp1.z = -temp0.z + (camera_world_matrix._m02_m12_m22_m32).w;\n    // dp3 r1.w, r1, r1\n    temp1.w = dot(temp1.xyz, temp1.xyz);\n    // rsq r1.w, r1.w\n    temp1.w = 1 / sqrt(temp1.w);\n    // mul o3.xyz, r1.w, r1\n    o.texcoord4 = temp1.w * temp1;\n    // dp4 r0.w, v0, c3\n    temp0.w = dot(i.position, (world_matrix._m03_m13_m23_m33));\n    // dp4 r1.x, r0, c4\n    temp1.x = dot(temp0, (view_matrix._m00_m10_m20_m30));\n    // dp4 r1.y, r0, c5\n    temp1.y = dot(temp0, (view_matrix._m01_m11_m21_m31));\n    // dp4 r1.z, r0, c6\n    temp1.z = dot(temp0, (view_matrix._m02_m12_m22_m32));\n    // dp4 r1.w, r0, c7\n    temp1.w = dot(temp0, (view_matrix._m03_m13_m23_m33));\n    // dp4 r0.x, r1, c8\n    temp0.x = dot(temp1, (proj_matrix._m00_m10_m20_m30));\n    // mov r2.xz, c18\n    temp2.xz = float2(2, 0.5);\n    // mov r3.xy, c17\n    temp3.xy = vp_size.xy;\n    // mad r2.xy, c16, r2.x, r3\n    temp2.xy = vp_offset.xy * temp2.xx + temp3.xy;\n    // add r2.xy, r2, c18.y\n    temp2.xy = temp2.xy + float2(-1, -1);\n    // dp4 r0.w, r1, c11\n    temp0.w = dot(temp1, (proj_matrix._m03_m13_m23_m33));\n    // mul r2.xy, r2, r0.w\n    temp2.xy = temp2.xy * temp0.ww;\n    // mad r2.x, r0.x, c17.x, r2.x\n    temp2.x = temp0.x * vp_size.x + temp2.x;\n    // add r2.w, r0.w, r0.w\n    temp2.w = temp0.w + temp0.w;\n    // add r3.xy, r2.z, c15\n    temp3.xy = temp2.zz + render_target_texel_offset.xy;\n    // mad o5.x, r2.w, r3.x, r2.x\n    o.texcoord6.x = temp2.w * temp3.x + temp2.x;\n    // dp4 r0.y, r1, c9\n    temp0.y = dot(temp1, (proj_matrix._m01_m11_m21_m31));\n    // dp4 r0.z, r1, c10\n    temp0.z = dot(temp1, (proj_matrix._m02_m12_m22_m32));\n    // mad r1.x, r0.y, -c17.y, r2.y\n    temp1.x = temp0.y * -vp_size.y + temp2.y;\n    // mov o0, r0\n    o.position = temp0;\n    // mul o5.zw, r0, c18.xywx\n    o.texcoord6.zw = temp0.zw * float2(1, 2);\n    // mad o5.y, r2.w, r3.y, r1.x\n    o.texcoord6.y = temp2.w * temp3.y + temp1.x;\n    // mov o1, v1\n    o.color = i.color;\n    // mov o4.xy, v3\n    o.texcoord = i.texcoord;\n    // \n\n    return o;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."),(0,o.kt)("h4",{id:"pixel-shader"},"Pixel Shader"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-hlsl"},"sampler2D depth : register(ps_3_0, s1);\nsampler2D diffuse_texture : register(ps_3_0, s0);\nfloat ref_fadeout_distance : register(ps_3_0, c1);\nfloat ref_falloff_exp : register(ps_3_0, c0);\nfloat ref_intensity : register(ps_3_0, c2);\nstruct PixelMain_Input\n{\n    float4 color : COLOR;\n    float3 texcoord3 : TEXCOORD3;\n    float3 texcoord4 : TEXCOORD4;\n    float2 texcoord : TEXCOORD;\n    float4 texcoord6 : TEXCOORD6;\n};\n\nfloat4 PixelMain(PixelMain_Input i) : COLOR\n{\n    float4 out_color;\n    float4 temp0, temp1, temp2;\n    // def c3, -0.0001, -13.287712, 0, 0\n    // dcl_color v0\n    // dcl_texcoord3 v1.xyz\n    // dcl_texcoord4 v2.xyz\n    // dcl_texcoord v3.xy\n    // dcl_texcoord6 v4\n    // dcl_2d s0\n    // dcl_2d s1\n    // nrm_pp r0.xyz, v1\n    temp0.xyz = /* not implemented _pp modifier */ normalize(i.texcoord3.xyz).xyz;\n    // nrm_pp r1.xyz, v2\n    temp1.xyz = /* not implemented _pp modifier */ normalize(i.texcoord4.xyz).xyz;\n    // dp3_pp r0.x, r0, r1\n    temp0.x = /* not implemented _pp modifier */ dot(temp0.xyz, temp1.xyz);\n    // add r0.y, r0_abs.x, c3.x\n    temp0.y = abs(temp0).x + float1(-0.0001);\n    // log r0.x, r0_abs.x\n    temp0.x = log2(abs(temp0).x);\n    // cmp r0.x, r0.y, r0.x, c3.y\n    temp0.x = (temp0.y >= 0) ? temp0.x : float1(-13.287712);\n    // mul r0.x, r0.x, c0.x\n    temp0.x = temp0.x * ref_falloff_exp.x;\n    // exp_pp r0.x, r0.x\n    temp0.x = /* not implemented _pp modifier */ exp2(temp0.x);\n    // texld_pp r1, v3, s0\n    temp1 = /* not implemented _pp modifier */ tex2D(diffuse_texture, i.texcoord.xy);\n    // mul_pp r0.x, r0.x, r1.w\n    temp0.x = /* not implemented _pp modifier */ temp0.x * temp1.w;\n    // texld r2, v4, s1\n    temp2 = tex2D(depth, i.texcoord6.xy);\n    // add r0.y, -r2.x, v4.z\n    temp0.y = -temp2.x + i.texcoord6.z;\n    // rcp r0.z, c1.x\n    temp0.z = 1.0f / ref_fadeout_distance.x;\n    // mul_sat_pp r0.y, r0.z, r0_abs.y\n    ;// error\n    // mul_pp r1.w, r0.y, r0.x\n    temp1.w = /* not implemented _pp modifier */ temp0.y * temp0.x;\n    // mul_pp r0, r1, v0\n    temp0 = /* not implemented _pp modifier */ temp1 * i.color;\n    // mul oC0.xyz, r0, c2.x\n    out_color.xyz = temp0.xyz * ref_intensity.xxx;\n    // mov_pp oC0.w, r0.w\n    out_color.w = /* not implemented _pp modifier */ temp0.w;\n    // \n\n    return out_color;\n}\n")),(0,o.kt)("p",null,"Decompiled by DXDecompiler."))}c.isMDXComponent=!0}}]);